{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-toast.ts"],"sourcesContent":["\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["// This file provides utility functions that can be used throughout the application.\n\n// Import the `clsx` library and the `ClassValue` type.\n// `clsx` is a tiny utility for constructing `className` strings conditionally.\n// For example: `clsx('foo', true && 'bar', 'baz')` will return `'foo bar baz'`.\nimport { clsx, type ClassValue } from \"clsx\"\n\n// Import the `tailwind-merge` library.\n// `tailwind-merge` is a utility that intelligently merges Tailwind CSS classes.\n// It resolves conflicts between classes. For example, `twMerge('p-4', 'p-2')` will\n// correctly return `'p-2'`, as the last padding utility takes precedence.\nimport { twMerge } from \"tailwind-merge\"\n\n// This is the `cn` (short for \"class names\") utility function, a best practice\n// popularized by ShadCN UI and other component libraries.\n// It combines the power of `clsx` and `tailwind-merge`.\nexport function cn(...inputs: ClassValue[]) {\n  // 1. `clsx(inputs)` takes all the arguments (strings, objects, arrays) and\n  //    constructs a single class name string.\n  // 2. `twMerge(...)` then takes that string and merges the classes, resolving\n  //    any conflicts and ensuring a clean, final class string.\n  // This is especially useful when building components that accept a `className` prop\n  // and need to merge default classes with user-provided classes.\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":"AAAA,oFAAoF;AAEpF,uDAAuD;AACvD,+EAA+E;AAC/E,gFAAgF;;;;AAChF;AAEA,uCAAuC;AACvC,gFAAgF;AAChF,mFAAmF;AACnF,0EAA0E;AAC1E;;;AAKO,SAAS,GAAG,GAAG,MAAoB;IACxC,2EAA2E;IAC3E,4CAA4C;IAC5C,6EAA6E;IAC7E,6DAA6D;IAC7D,oFAAoF;IACpF,gEAAgE;IAChE,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toast.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASA,MAAM,gBAAgB,oKAAA,CAAA,WAAwB;AAE9C,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qIACA;QAED,GAAG,KAAK;;;;;;;AAGb,cAAc,WAAW,GAAG,oKAAA,CAAA,WAAwB,CAAC,WAAW;AAEhE,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6lBACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAI3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE;IACnC,qBACE,6LAAC,oKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;;AACA,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAoB,CAAC,WAAW;AAEpD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,SAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sgBACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,oKAAA,CAAA,SAAsB,CAAC,WAAW;AAE5D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yVACA;QAEF,eAAY;QACX,GAAG,KAAK;kBAET,cAAA,6LAAC,+LAAA,CAAA,IAAC;YAAC,WAAU;;;;;;;;;;;;AAGjB,WAAW,WAAW,GAAG,oKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG,oKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB;QACnC,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG,oKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 341, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toaster.tsx"],"sourcesContent":["\"use client\"\n\nimport { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAYO,SAAS;;IACd,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAE1B,qBACE,6LAAC,oIAAA,CAAA,gBAAa;;YACX,OAAO,GAAG,CAAC,SAAU,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,OAAO;gBAChE,qBACE,6LAAC,oIAAA,CAAA,QAAK;oBAAW,GAAG,KAAK;;sCACvB,6LAAC;4BAAI,WAAU;;gCACZ,uBAAS,6LAAC,oIAAA,CAAA,aAAU;8CAAE;;;;;;gCACtB,6BACC,6LAAC,oIAAA,CAAA,mBAAgB;8CAAE;;;;;;;;;;;;wBAGtB;sCACD,6LAAC,oIAAA,CAAA,aAAU;;;;;;mBARD;;;;;YAWhB;0BACA,6LAAC,oIAAA,CAAA,gBAAa;;;;;;;;;;;AAGpB;GAtBgB;;QACK,+HAAA,CAAA,WAAQ;;;KADb","debugId":null}},
    {"offset": {"line": 426, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/mock-data.ts"],"sourcesContent":["// This file serves as a temporary, in-memory database for the application.\n// It defines the data structures (types) and provides initial mock data for users,\n// posts, comments, and stories. It also includes functions to manipulate this data,\n// simulating C.R.U.D. (Create, Read, Update, Delete) operations.\n\n// --- TYPE DEFINITIONS ---\n// These types define the shape of the data objects used throughout the application.\n\nexport type User = {\n  id: string; // Unique identifier (would be the UID from Firebase Auth).\n  name: string;\n  email: string;\n  role: 'user' | 'editor' | 'admin'; // Role for controlling permissions.\n  avatar?: string; // Optional URL for a profile picture.\n  created_at: Date;\n};\n\nexport type Post = {\n  id: string;\n  title: string;\n  slug: string; // URL-friendly version of the title.\n  content: string; // The full content of the post, can include HTML.\n  excerpt: string; // A short summary.\n  authorId: string; // The ID of the user who wrote the post.\n  status: 'draft' | 'pending' | 'published' | 'rejected'; // The moderation status.\n  featured_img: string; // URL for the main image.\n  imageHint: string; // A hint for AI image tools.\n  category: string;\n  tags: string[];\n  created_at: Date;\n  updated_at: Date;\n};\n\nexport type Comment = {\n  id: string;\n  postId: string; // The ID of the post this comment belongs to.\n  userId: string; // The ID of the user who wrote the comment.\n  comment_text: string;\n  image_url?: string; // Optional image attached to the comment.\n  status: 'pending' | 'approved' | 'rejected'; // Moderation status.\n  created_at: Date;\n};\n\nexport type FollowUpStory = {\n  id: string;\n  postId: string;\n  userId: string;\n  story_text: string;\n  image_url?: string;\n  status: 'pending' | 'approved' | 'rejected';\n  created_at: Date;\n};\n\n// --- MOCK DATA ---\n// Using `let` instead of `const` allows the data manipulation functions below to reassign the arrays.\n\n// A list of mock users with different roles.\nexport let mockUsers: User[] = [\n  { id: 'user-1', name: 'Admin User', email: 'admin@travonex.com', role: 'admin', avatar: 'https://i.pravatar.cc/150?u=admin', created_at: new Date() },\n  { id: 'user-2', name: 'Editor Erin', email: 'editor@travonex.com', role: 'editor', avatar: 'https://i.pravatar.cc/150?u=editor', created_at: new Date() },\n  { id: 'user-3', name: 'Jane Doe', email: 'jane@example.com', role: 'user', avatar: 'https://i.pravatar.cc/150?u=jane', created_at: new Date() },\n  { id: 'user-4', name: 'Alex Ray', email: 'alex@example.com', role: 'user', avatar: 'https://i.pravatar.cc/150?u=alex', created_at: new Date() },\n];\n\n// A list of mock blog posts with different statuses.\nexport let mockPosts: Post[] = [\n  {\n    id: 'post-1',\n    title: 'A Weekend in the Mountains',\n    slug: 'a-weekend-in-the-mountains',\n    content: '<p>This is the full blog post content about a weekend in the mountains. It was a refreshing experience, full of nature and tranquility. We hiked, we explored, and we connected with the great outdoors.</p><p>The views were breathtaking, and the air was crisp and clean. Highly recommended for anyone looking to escape the city hustle.</p>',\n    excerpt: 'A refreshing experience, full of nature and tranquility. We hiked, we explored, and we connected with the great outdoors.',\n    authorId: 'user-3',\n    status: 'published',\n    featured_img: 'https://picsum.photos/seed/mountains/1200/600',\n    imageHint: 'mountains landscape',\n    category: 'Weekend Getaways',\n    tags: ['hiking', 'nature', 'mountains'],\n    created_at: new Date(Date.now() - 1000 * 60 * 60 * 24 * 2),\n    updated_at: new Date(),\n  },\n  {\n    id: 'post-2',\n    title: 'My Solo Trip to the East',\n    slug: 'my-solo-trip-to-the-east',\n    content: '<p>Content for the solo trip to the east. It was an amazing journey of self-discovery.</p>',\n    excerpt: 'An amazing journey of self-discovery and cultural immersion in the far east.',\n    authorId: 'user-4',\n    status: 'pending',\n    featured_img: 'https://picsum.photos/seed/solo-trip/1200/600',\n    imageHint: 'solo travel',\n    category: 'Adventure Travel',\n    tags: ['solo', 'travel', 'asia'],\n    created_at: new Date(Date.now() - 1000 * 60 * 60 * 24 * 1),\n    updated_at: new Date(),\n  },\n  {\n    id: 'post-3',\n    title: 'Hidden Gems of the Countryside',\n    slug: 'hidden-gems-of-the-countryside',\n    content: '<p>This is a draft about the hidden gems of the countryside. Still needs more work.</p>',\n    excerpt: 'Exploring the quiet and beautiful places off the beaten path.',\n    authorId: 'user-2',\n    status: 'draft',\n    featured_img: 'https://picsum.photos/seed/countryside/1200/600',\n    imageHint: 'countryside landscape',\n    category: 'Weekend Getaways',\n    tags: ['countryside', 'nature', 'relax'],\n    created_at: new Date(),\n    updated_at: new Date(),\n  },\n  {\n    id: 'post-4',\n    slug: 'exploring-the-urban-jungle',\n    title: 'Exploring the Urban Jungle',\n    content: '<p>City life has its own adventures. This post is about exploring the hidden gems of a bustling metropolis. From street art to unique cafes, there is always something new to discover.</p>',\n    excerpt: 'City life has its own adventures. This post is about exploring the hidden gems of a bustling metropolis.',\n    authorId: 'user-4',\n    status: 'published',\n    featured_img: 'https://picsum.photos/seed/city/1200/600',\n    imageHint: 'city skyline',\n    category: 'City Guides',\n    tags: ['city', 'travel', 'urban'],\n    created_at: new Date(Date.now() - 1000 * 60 * 60 * 24 * 5),\n    updated_at: new Date()\n  }\n];\n\n// A list of mock comments.\nexport let mockComments: Comment[] = [\n  { id: 'comment-1', postId: 'post-1', userId: 'user-4', comment_text: 'Great article! The mountain views look absolutely stunning.', status: 'approved', created_at: new Date() },\n  { id: 'comment-2', postId: 'post-1', userId: 'user-2', comment_text: 'I really need to go there. Thanks for the inspiration!', status: 'pending', created_at: new Date() },\n];\n\n// A list of mock follow-up stories.\nexport let mockFollowUpStories: FollowUpStory[] = [\n  { id: 'story-1', postId: 'post-1', userId: 'user-3', story_text: 'Inspired by this post, I went on my own mountain adventure. It was a transformative experience. The air was so fresh and the views were just breathtaking.', status: 'approved', image_url: 'https://picsum.photos/seed/story-hike/400/200', created_at: new Date() },\n  { id: 'story-2', postId: 'post-1', userId: 'user-4', story_text: 'This is my follow up story, it is still pending approval.', status: 'pending', created_at: new Date() },\n];\n\n// --- DATA MUTATION FUNCTIONS ---\n// These functions simulate database operations by directly modifying the mock data arrays.\n\n// POSTS\n// Simulates deleting a post from the database.\nexport function deletePost(postId: string) {\n    mockPosts = mockPosts.filter(p => p.id !== postId);\n}\n\n// Simulates updating a post in the database.\nexport function updatePost(postId: string, updates: Partial<Post>) {\n    mockPosts = mockPosts.map(p => \n        p.id === postId ? { ...p, ...updates, updated_at: new Date() } : p\n    );\n}\n\n// COMMENTS\n// Simulates adding a new comment to the database.\nexport function addComment(comment: Omit<Comment, 'id' | 'status' | 'created_at'>) {\n    const newComment: Comment = {\n        ...comment,\n        id: `comment-${Date.now()}`, // Generate a unique ID.\n        status: 'pending', // New comments always start as pending.\n        created_at: new Date(),\n    };\n    mockComments.push(newComment);\n    return newComment;\n}\n\n// Simulates deleting a comment.\nexport function deleteComment(commentId: string) {\n    mockComments = mockComments.filter(c => c.id !== commentId);\n}\n\n// STORIES\n// Simulates adding a new follow-up story.\nexport function addFollowUpStory(story: Omit<FollowUpStory, 'id' | 'status' | 'created_at'>) {\n    const newStory: FollowUpStory = {\n        ...story,\n        id: `story-${Date.now()}`,\n        status: 'pending',\n        created_at: new Date(),\n    };\n    mockFollowUpStories.push(newStory);\n    return newStory;\n}\n\n// Simulates deleting a follow-up story.\nexport function deleteFollowUpStory(storyId: string) {\n    mockFollowUpStories = mockFollowUpStories.filter(s => s.id !== storyId);\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 638, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-auth.tsx"],"sourcesContent":["// This file implements the authentication context and provider for the entire application.\n// It simulates a complete authentication flow (signup, login, logout, session persistence)\n// using mock data and localStorage, without connecting to a real backend like Firebase.\n\n// This is a Client Component because it uses React Context, hooks (`useState`, `useEffect`),\n// and interacts with browser APIs like `localStorage`.\n'use client';\n\n// Import necessary React hooks and types.\nimport React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';\n// Import the Next.js router for programmatic navigation (redirects).\nimport { useRouter } from 'next/navigation';\n// Import the mock user data and types. This acts as our \"user database\".\nimport { mockUsers, User as MockUser } from '@/lib/mock-data';\n// Import the custom hook for showing toast notifications.\nimport { useToast } from './use-toast';\n\n// Define the structure of the `User` object that will be stored in the auth context.\n// This is a simplified version of what a real authentication provider would return.\ninterface User {\n  uid: string;\n  email: string | null;\n  displayName: string | null;\n  photoURL?: string | null;\n}\n\n// Define the shape of the authentication context.\n// This includes the user state, loading state, user role, and all auth functions.\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  userRole: MockUser['role'] | null;\n  login: (email: string, password: string) => Promise<void>;\n  signup: (email: string, password: string, name: string) => Promise<void>;\n  logout: () => Promise<void>;\n  loginWithGoogle: () => Promise<void>;\n}\n\n// Create the React Context for authentication.\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// The AuthProvider component is a wrapper that provides the authentication context\n// to all of its children. It should be placed at the root of the application layout.\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n  // State to hold the currently authenticated user object.\n  const [user, setUser] = useState<User | null>(null);\n  // State to track whether the initial session restoration is in progress.\n  const [loading, setLoading] = useState(true);\n  // State to hold the role of the authenticated user.\n  const [userRole, setUserRole] = useState<MockUser['role'] | null>(null);\n  const router = useRouter();\n  const { toast } = useToast();\n\n  // This `useEffect` hook runs once when the component mounts.\n  // Its purpose is to restore the user session from `localStorage`.\n  useEffect(() => {\n    try {\n      const storedUser = localStorage.getItem('travonex-user');\n      if (storedUser) {\n        const parsedUser: User = JSON.parse(storedUser);\n        // We validate the stored user against our mock data to ensure they still exist.\n        const mockUser = mockUsers.find(u => u.email === parsedUser.email);\n        \n        if (mockUser) {\n          // If the user is valid, restore the session state.\n          setUser(parsedUser);\n          setUserRole(mockUser.role);\n        } else {\n          // If the user is in storage but not in our mock data, clear the invalid session.\n          localStorage.removeItem('travonex-user');\n        }\n      }\n    } catch (error) {\n      console.error(\"Failed to parse user from localStorage\", error);\n      localStorage.removeItem('travonex-user');\n    }\n    // Set loading to false after attempting to restore the session.\n    setLoading(false);\n  }, []); // The empty dependency array ensures this runs only once on mount.\n\n  // A centralized function to handle all state updates after a login or logout event.\n  const updateUserSession = (newUser: User | null) => {\n    setUser(newUser);\n    if (newUser) {\n      // If a user is being logged in...\n      const mockUser = mockUsers.find(u => u.email === newUser.email);\n      const role = mockUser ? mockUser.role : 'user';\n      setUserRole(role);\n      // Persist the user session to localStorage.\n      localStorage.setItem('travonex-user', JSON.stringify(newUser));\n\n      toast({\n        title: `Logged in as ${newUser.displayName}`,\n        description: \"Welcome back!\",\n      });\n      \n      // Redirect the user based on their role.\n      if (role === 'admin' || role === 'editor') {\n        router.push('/blog/admin');\n      } else {\n        router.push('/dashboard');\n      }\n\n    } else {\n      // If a user is being logged out...\n      setUserRole(null);\n      // Remove the session from localStorage.\n      localStorage.removeItem('travonex-user');\n       toast({\n        title: \"You've been logged out.\",\n      });\n      router.push('/login');\n    }\n  };\n\n  // Simulates a user signing up.\n  const signup = async (email: string, password: string, name: string) => {\n    console.log(\"Mock Signup:\", { email, name });\n    const existingUser = mockUsers.find(u => u.email === email);\n    if (existingUser) {\n        // This simulates a common backend validation error.\n        throw new Error(\"An account with this email already exists.\");\n    }\n    \n    // Create a new user object and add it to our mock data array for the current session.\n    const newUser: User = {\n      uid: `mock-uid-${Date.now()}`,\n      email,\n      displayName: name,\n    };\n    const newMockUser: MockUser = {\n      id: newUser.uid,\n      name,\n      email,\n      role: 'user', // New users always get the 'user' role.\n      created_at: new Date()\n    }\n    mockUsers.push(newMockUser);\n\n    // Update the session to log the new user in immediately.\n    updateUserSession(newUser);\n  };\n\n  // Simulates a user logging in.\n  const login = async (email: string, password: string) => {\n    console.log(\"Mock Login:\", { email });\n    const mockUser = mockUsers.find(u => u.email === email);\n\n    if (!mockUser) {\n        throw new Error(\"User not found. Please sign up first.\");\n    }\n    \n    // Create a user session object from the mock data.\n    const userToLogin: User = {\n      uid: mockUser.id,\n      email: mockUser.email,\n      displayName: mockUser.name,\n      photoURL: mockUser.avatar\n    };\n    updateUserSession(userToLogin);\n  };\n\n  // Simulates logging in with a Google account.\n  const loginWithGoogle = async () => {\n    console.log(\"Mock Google Login\");\n    // For this simulation, we'll just log in as the first user with the 'user' role.\n    const googleUser = mockUsers.find(u => u.role === 'user'); \n    if (googleUser) {\n        const userToLogin: User = {\n            uid: googleUser.id,\n            email: googleUser.email,\n            displayName: googleUser.name,\n            photoURL: googleUser.avatar\n        };\n        updateUserSession(userToLogin);\n    } else {\n      throw new Error(\"No mock user available for Google Sign-In.\");\n    }\n  };\n\n  // Simulates logging out.\n  const logout = async () => {\n    console.log(\"Mock Logout\");\n    updateUserSession(null); // Passing null clears the session.\n  };\n\n  // The value object contains all the state and functions that will be exposed by the context.\n  const value = {\n    user,\n    loading,\n    userRole,\n    login,\n    signup,\n    logout,\n    loginWithGoogle,\n  };\n\n  // The provider doesn't render its children until the initial session check is complete.\n  // This prevents UI flickering (e.g., showing a \"Login\" button for a moment before switching to a profile).\n  return <AuthContext.Provider value={value}>{!loading && children}</AuthContext.Provider>;\n};\n\n// This is the custom hook that components will use to access the authentication context.\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    // This error ensures that the hook is only used within components that are children of AuthProvider.\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"names":[],"mappings":"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","debugId":null}}]
}