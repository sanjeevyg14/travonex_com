{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/util/string.js"],"sourcesContent":["/*eslint max-len: 0, no-var:0 */\n\nconst charsRegex = /[\\0\\b\\t\\n\\r\\x1a\"'\\\\]/g; // eslint-disable-line no-control-regex\nconst charsMap = {\n  '\\0': '\\\\0',\n  '\\b': '\\\\b',\n  '\\t': '\\\\t',\n  '\\n': '\\\\n',\n  '\\r': '\\\\r',\n  '\\x1a': '\\\\Z',\n  '\"': '\\\\\"',\n  \"'\": \"\\\\'\",\n  '\\\\': '\\\\\\\\',\n};\n\nfunction wrapEscape(escapeFn) {\n  return function finalEscape(val, ctx = {}) {\n    return escapeFn(val, finalEscape, ctx);\n  };\n}\n\nfunction makeEscape(config = {}) {\n  const finalEscapeDate = config.escapeDate || dateToString;\n  const finalEscapeArray = config.escapeArray || arrayToList;\n  const finalEscapeBuffer = config.escapeBuffer || bufferToString;\n  const finalEscapeString = config.escapeString || escapeString;\n  const finalEscapeObject = config.escapeObject || escapeObject;\n  const finalWrap = config.wrap || wrapEscape;\n\n  function escapeFn(val, finalEscape, ctx) {\n    if (val === undefined || val === null) {\n      return 'NULL';\n    }\n    switch (typeof val) {\n      case 'boolean':\n        return val ? 'true' : 'false';\n      case 'number':\n        return val + '';\n      case 'object':\n        if (val instanceof Date) {\n          val = finalEscapeDate(val, finalEscape, ctx);\n        } else if (Array.isArray(val)) {\n          return finalEscapeArray(val, finalEscape, ctx);\n        } else if (Buffer.isBuffer(val)) {\n          return finalEscapeBuffer(val, finalEscape, ctx);\n        } else {\n          return finalEscapeObject(val, finalEscape, ctx);\n        }\n    }\n    return finalEscapeString(val, finalEscape, ctx);\n  }\n\n  return finalWrap ? finalWrap(escapeFn) : escapeFn;\n}\n\nfunction escapeObject(val, finalEscape, ctx) {\n  if (val && typeof val.toSQL === 'function') {\n    return val.toSQL(ctx);\n  } else {\n    return JSON.stringify(val);\n  }\n}\n\nfunction arrayToList(array, finalEscape, ctx) {\n  let sql = '';\n  for (let i = 0; i < array.length; i++) {\n    const val = array[i];\n    if (Array.isArray(val)) {\n      sql +=\n        (i === 0 ? '' : ', ') + '(' + arrayToList(val, finalEscape, ctx) + ')';\n    } else {\n      sql += (i === 0 ? '' : ', ') + finalEscape(val, ctx);\n    }\n  }\n  return sql;\n}\n\nfunction bufferToString(buffer) {\n  return 'X' + escapeString(buffer.toString('hex'));\n}\n\nfunction escapeString(val, finalEscape, ctx) {\n  let chunkIndex = (charsRegex.lastIndex = 0);\n  let escapedVal = '';\n  let match;\n\n  while ((match = charsRegex.exec(val))) {\n    escapedVal += val.slice(chunkIndex, match.index) + charsMap[match[0]];\n    chunkIndex = charsRegex.lastIndex;\n  }\n\n  if (chunkIndex === 0) {\n    // Nothing was escaped\n    return \"'\" + val + \"'\";\n  }\n\n  if (chunkIndex < val.length) {\n    return \"'\" + escapedVal + val.slice(chunkIndex) + \"'\";\n  }\n\n  return \"'\" + escapedVal + \"'\";\n}\n\nfunction dateToString(date, finalEscape, ctx = {}) {\n  const timeZone = ctx.timeZone || 'local';\n\n  const dt = new Date(date);\n  let year;\n  let month;\n  let day;\n  let hour;\n  let minute;\n  let second;\n  let millisecond;\n\n  if (timeZone === 'local') {\n    year = dt.getFullYear();\n    month = dt.getMonth() + 1;\n    day = dt.getDate();\n    hour = dt.getHours();\n    minute = dt.getMinutes();\n    second = dt.getSeconds();\n    millisecond = dt.getMilliseconds();\n  } else {\n    const tz = convertTimezone(timeZone);\n\n    if (tz !== false && tz !== 0) {\n      dt.setTime(dt.getTime() + tz * 60000);\n    }\n\n    year = dt.getUTCFullYear();\n    month = dt.getUTCMonth() + 1;\n    day = dt.getUTCDate();\n    hour = dt.getUTCHours();\n    minute = dt.getUTCMinutes();\n    second = dt.getUTCSeconds();\n    millisecond = dt.getUTCMilliseconds();\n  }\n\n  // YYYY-MM-DD HH:mm:ss.mmm\n  return (\n    zeroPad(year, 4) +\n    '-' +\n    zeroPad(month, 2) +\n    '-' +\n    zeroPad(day, 2) +\n    ' ' +\n    zeroPad(hour, 2) +\n    ':' +\n    zeroPad(minute, 2) +\n    ':' +\n    zeroPad(second, 2) +\n    '.' +\n    zeroPad(millisecond, 3)\n  );\n}\n\nfunction zeroPad(number, length) {\n  number = number.toString();\n  while (number.length < length) {\n    number = '0' + number;\n  }\n  return number;\n}\n\nfunction convertTimezone(tz) {\n  if (tz === 'Z') {\n    return 0;\n  }\n  const m = tz.match(/([+\\-\\s])(\\d\\d):?(\\d\\d)?/);\n  if (m) {\n    return (\n      (m[1] == '-' ? -1 : 1) *\n      (parseInt(m[2], 10) + (m[3] ? parseInt(m[3], 10) : 0) / 60) *\n      60\n    );\n  }\n  return false;\n}\n\nmodule.exports = {\n  arrayToList,\n  bufferToString,\n  dateToString,\n  escapeString,\n  charsRegex,\n  charsMap,\n  escapeObject,\n  makeEscape,\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/util/timeout.js"],"sourcesContent":["class KnexTimeoutError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'KnexTimeoutError';\n  }\n}\n\nfunction timeout(promise, ms) {\n  return new Promise(function (resolve, reject) {\n    const id = setTimeout(function () {\n      reject(new KnexTimeoutError('operation timed out'));\n    }, ms);\n\n    function wrappedResolve(value) {\n      clearTimeout(id);\n      resolve(value);\n    }\n\n    function wrappedReject(err) {\n      clearTimeout(id);\n      reject(err);\n    }\n\n    promise.then(wrappedResolve, wrappedReject);\n  });\n}\n\nmodule.exports.KnexTimeoutError = KnexTimeoutError;\nmodule.exports.timeout = timeout;\n"],"names":[],"mappings":"AAAA,MAAM,yBAAyB;IAC7B,YAAY,OAAO,CAAE;QACnB,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;IACd;AACF;AAEA,SAAS,QAAQ,OAAO,EAAE,EAAE;IAC1B,OAAO,IAAI,QAAQ,SAAU,OAAO,EAAE,MAAM;QAC1C,MAAM,KAAK,WAAW;YACpB,OAAO,IAAI,iBAAiB;QAC9B,GAAG;QAEH,SAAS,eAAe,KAAK;YAC3B,aAAa;YACb,QAAQ;QACV;QAEA,SAAS,cAAc,GAAG;YACxB,aAAa;YACb,OAAO;QACT;QAEA,QAAQ,IAAI,CAAC,gBAAgB;IAC/B;AACF;AAEA,OAAO,OAAO,CAAC,gBAAgB,GAAG;AAClC,OAAO,OAAO,CAAC,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/execution/internal/ensure-connection-callback.js"],"sourcesContent":["function ensureConnectionCallback(runner) {\n  runner.client.emit('start', runner.builder);\n  runner.builder.emit('start', runner.builder);\n  const sql = runner.builder.toSQL();\n\n  if (runner.builder._debug) {\n    runner.client.logger.debug(sql);\n  }\n\n  if (Array.isArray(sql)) {\n    return runner.queryArray(sql);\n  }\n  return runner.query(sql);\n}\n\nfunction ensureConnectionStreamCallback(runner, params) {\n  try {\n    const sql = runner.builder.toSQL();\n\n    if (Array.isArray(sql) && params.hasHandler) {\n      throw new Error(\n        'The stream may only be used with a single query statement.'\n      );\n    }\n\n    return runner.client.stream(\n      runner.connection,\n      sql,\n      params.stream,\n      params.options\n    );\n  } catch (e) {\n    params.stream.emit('error', e);\n    throw e;\n  }\n}\n\nmodule.exports = {\n  ensureConnectionCallback,\n  ensureConnectionStreamCallback,\n};\n"],"names":[],"mappings":"AAAA,SAAS,yBAAyB,MAAM;IACtC,OAAO,MAAM,CAAC,IAAI,CAAC,SAAS,OAAO,OAAO;IAC1C,OAAO,OAAO,CAAC,IAAI,CAAC,SAAS,OAAO,OAAO;IAC3C,MAAM,MAAM,OAAO,OAAO,CAAC,KAAK;IAEhC,IAAI,OAAO,OAAO,CAAC,MAAM,EAAE;QACzB,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;IAC7B;IAEA,IAAI,MAAM,OAAO,CAAC,MAAM;QACtB,OAAO,OAAO,UAAU,CAAC;IAC3B;IACA,OAAO,OAAO,KAAK,CAAC;AACtB;AAEA,SAAS,+BAA+B,MAAM,EAAE,MAAM;IACpD,IAAI;QACF,MAAM,MAAM,OAAO,OAAO,CAAC,KAAK;QAEhC,IAAI,MAAM,OAAO,CAAC,QAAQ,OAAO,UAAU,EAAE;YAC3C,MAAM,IAAI,MACR;QAEJ;QAEA,OAAO,OAAO,MAAM,CAAC,MAAM,CACzB,OAAO,UAAU,EACjB,KACA,OAAO,MAAM,EACb,OAAO,OAAO;IAElB,EAAE,OAAO,GAAG;QACV,OAAO,MAAM,CAAC,IAAI,CAAC,SAAS;QAC5B,MAAM;IACR;AACF;AAEA,OAAO,OAAO,GAAG;IACf;IACA;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/execution/runner.js"],"sourcesContent":["const { KnexTimeoutError } = require('../util/timeout');\nconst { timeout } = require('../util/timeout');\nconst {\n  ensureConnectionCallback,\n  ensureConnectionStreamCallback,\n} = require('./internal/ensure-connection-callback');\n\nlet Transform;\n\n// The \"Runner\" constructor takes a \"builder\" (query, schema, or raw)\n// and runs through each of the query statements, calling any additional\n// \"output\" method provided alongside the query and bindings.\nclass Runner {\n  constructor(client, builder) {\n    this.client = client;\n    this.builder = builder;\n    this.queries = [];\n\n    // The \"connection\" object is set on the runner when\n    // \"run\" is called.\n    this.connection = undefined;\n  }\n\n  // \"Run\" the target, calling \"toSQL\" on the builder, returning\n  // an object or array of queries to run, each of which are run on\n  // a single connection.\n  async run() {\n    const runner = this;\n    try {\n      const res = await this.ensureConnection(ensureConnectionCallback);\n\n      // Fire a single \"end\" event on the builder when\n      // all queries have successfully completed.\n      runner.builder.emit('end');\n      return res;\n\n      // If there are any \"error\" listeners, we fire an error event\n      // and then re-throw the error to be eventually handled by\n      // the promise chain. Useful if you're wrapping in a custom `Promise`.\n    } catch (err) {\n      if (runner.builder._events && runner.builder._events.error) {\n        runner.builder.emit('error', err);\n      }\n      throw err;\n    }\n  }\n\n  // Stream the result set, by passing through to the dialect's streaming\n  // capabilities. If the options are\n  stream(optionsOrHandler, handlerOrNil) {\n    const firstOptionIsHandler =\n      typeof optionsOrHandler === 'function' && arguments.length === 1;\n\n    const options = firstOptionIsHandler ? {} : optionsOrHandler;\n    const handler = firstOptionIsHandler ? optionsOrHandler : handlerOrNil;\n\n    // Determines whether we emit an error or throw here.\n    const hasHandler = typeof handler === 'function';\n\n    // Lazy-load the \"Transform\" dependency.\n    Transform = Transform || require('stream').Transform;\n\n    const queryContext = this.builder.queryContext();\n\n    const stream = new Transform({\n      objectMode: true,\n      transform: (chunk, _, callback) => {\n        callback(null, this.client.postProcessResponse(chunk, queryContext));\n      },\n    });\n    stream.on('close', () => {\n      this.client.releaseConnection(this.connection);\n    });\n\n    // If the stream is manually destroyed, the close event is not\n    // propagated to the top of the pipe chain. We need to manually verify\n    // that the source stream is closed and if not, manually destroy it.\n    stream.on('pipe', (sourceStream) => {\n      const cleanSourceStream = () => {\n        if (!sourceStream.closed) {\n          sourceStream.destroy();\n        }\n      };\n\n      // Stream already closed, cleanup immediately\n      if (stream.closed) {\n        cleanSourceStream();\n      } else {\n        stream.on('close', cleanSourceStream);\n      }\n    });\n\n    const connectionAcquirePromise = this.ensureConnection(\n      ensureConnectionStreamCallback,\n      {\n        options,\n        hasHandler,\n        stream,\n      }\n    )\n      // Emit errors on the stream if the error occurred before a connection\n      // could be acquired.\n      // If the connection was acquired, assume the error occurred in the client\n      // code and has already been emitted on the stream. Don't emit it twice.\n      .catch((err) => {\n        if (!this.connection) {\n          stream.emit('error', err);\n        }\n      });\n\n    // If a function is passed to handle the stream, send the stream\n    // there and return the promise, otherwise just return the stream\n    // and the promise will take care of itself.\n    if (hasHandler) {\n      handler(stream);\n      return connectionAcquirePromise;\n    }\n    return stream;\n  }\n\n  // Allow you to pipe the stream to a writable stream.\n  pipe(writable, options) {\n    return this.stream(options).pipe(writable);\n  }\n\n  // \"Runs\" a query, returning a promise. All queries specified by the builder are guaranteed\n  // to run in sequence, and on the same connection, especially helpful when schema building\n  // and dealing with foreign key constraints, etc.\n  async query(obj) {\n    const { __knexUid, __knexTxId } = this.connection;\n\n    this.builder.emit('query', Object.assign({ __knexUid, __knexTxId }, obj));\n\n    const runner = this;\n    const queryContext = this.builder.queryContext();\n    // query-error events are emitted before the queryPromise continuations.\n    // pass queryContext into client.query so it can be raised properly.\n    if (obj !== null && typeof obj === 'object') {\n      obj.queryContext = queryContext;\n    }\n    let queryPromise = this.client.query(this.connection, obj);\n\n    if (obj.timeout) {\n      queryPromise = timeout(queryPromise, obj.timeout);\n    }\n\n    // Await the return value of client.processResponse; in the case of sqlite3's\n    // dropColumn()/renameColumn(), it will be a Promise for the transaction\n    // containing the complete rename procedure.\n    return queryPromise\n      .then((resp) => this.client.processResponse(resp, runner))\n      .then((processedResponse) => {\n        const postProcessedResponse = this.client.postProcessResponse(\n          processedResponse,\n          queryContext\n        );\n\n        this.builder.emit(\n          'query-response',\n          postProcessedResponse,\n          Object.assign({ __knexUid, __knexTxId }, obj),\n          this.builder\n        );\n\n        this.client.emit(\n          'query-response',\n          postProcessedResponse,\n          Object.assign({ __knexUid, __knexTxId }, obj),\n          this.builder\n        );\n\n        return postProcessedResponse;\n      })\n      .catch((error) => {\n        if (!(error instanceof KnexTimeoutError)) {\n          return Promise.reject(error);\n        }\n        const { timeout, sql, bindings } = obj;\n\n        let cancelQuery;\n        if (obj.cancelOnTimeout) {\n          cancelQuery = this.client.cancelQuery(this.connection);\n        } else {\n          // If we don't cancel the query, we need to mark the connection as disposed so that\n          // it gets destroyed by the pool and is never used again. If we don't do this and\n          // return the connection to the pool, it will be useless until the current operation\n          // that timed out, finally finishes.\n          this.connection.__knex__disposed = error;\n          cancelQuery = Promise.resolve();\n        }\n\n        return cancelQuery\n          .catch((cancelError) => {\n            // If the cancellation failed, we need to mark the connection as disposed so that\n            // it gets destroyed by the pool and is never used again. If we don't do this and\n            // return the connection to the pool, it will be useless until the current operation\n            // that timed out, finally finishes.\n            this.connection.__knex__disposed = error;\n\n            // cancellation failed\n            throw Object.assign(cancelError, {\n              message: `After query timeout of ${timeout}ms exceeded, cancelling of query failed.`,\n              sql,\n              bindings,\n              timeout,\n            });\n          })\n          .then(() => {\n            // cancellation succeeded, rethrow timeout error\n            throw Object.assign(error, {\n              message: `Defined query timeout of ${timeout}ms exceeded when running query.`,\n              sql,\n              bindings,\n              timeout,\n            });\n          });\n      })\n      .catch((error) => {\n        this.builder.emit(\n          'query-error',\n          error,\n          Object.assign({ __knexUid, __knexTxId, queryContext }, obj)\n        );\n        throw error;\n      });\n  }\n\n  // In the case of the \"schema builder\" we call `queryArray`, which runs each\n  // of the queries in sequence.\n  async queryArray(queries) {\n    if (queries.length === 1) {\n      const query = queries[0];\n\n      if (!query.statementsProducer) {\n        return this.query(query);\n      }\n\n      const statements = await query.statementsProducer(\n        undefined,\n        this.connection\n      );\n\n      const sqlQueryObjects = statements.sql.map((statement) => ({\n        sql: statement,\n        bindings: query.bindings,\n      }));\n      const preQueryObjects = statements.pre.map((statement) => ({\n        sql: statement,\n        bindings: query.bindings,\n      }));\n      const postQueryObjects = statements.post.map((statement) => ({\n        sql: statement,\n        bindings: query.bindings,\n      }));\n\n      let results = [];\n\n      await this.queryArray(preQueryObjects);\n\n      try {\n        await this.client.transaction(\n          async (trx) => {\n            const transactionRunner = new Runner(trx.client, this.builder);\n            transactionRunner.connection = this.connection;\n\n            results = await transactionRunner.queryArray(sqlQueryObjects);\n\n            if (statements.check) {\n              const foreignViolations = await trx.raw(statements.check);\n\n              if (foreignViolations.length > 0) {\n                throw new Error('FOREIGN KEY constraint failed');\n              }\n            }\n          },\n          { connection: this.connection }\n        );\n      } finally {\n        await this.queryArray(postQueryObjects);\n      }\n\n      return results;\n    }\n\n    const results = [];\n    for (const query of queries) {\n      results.push(await this.queryArray([query]));\n    }\n    return results;\n  }\n\n  // Check whether there's a transaction flag, and that it has a connection.\n  async ensureConnection(cb, cbParams) {\n    // Use override from a builder if passed\n    if (this.builder._connection) {\n      this.connection = this.builder._connection;\n    }\n\n    if (this.connection) {\n      return cb(this, cbParams);\n    }\n\n    let acquiredConnection;\n    try {\n      acquiredConnection = await this.client.acquireConnection();\n    } catch (error) {\n      if (!(error instanceof KnexTimeoutError)) {\n        return Promise.reject(error);\n      }\n      if (this.builder) {\n        error.sql = this.builder.sql;\n        error.bindings = this.builder.bindings;\n      }\n      throw error;\n    }\n    try {\n      this.connection = acquiredConnection;\n      return await cb(this, cbParams);\n    } finally {\n      await this.client.releaseConnection(acquiredConnection);\n    }\n  }\n}\n\nmodule.exports = Runner;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 487, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/migrations/migrate/table-resolver.js"],"sourcesContent":["//Get schema-aware table name\nfunction getTableName(tableName, schemaName) {\n  return schemaName ? `${schemaName}.${tableName}` : tableName;\n}\n\n//Get schema-aware query builder for a given table and schema name\nfunction getTable(trxOrKnex, tableName, schemaName) {\n  return schemaName\n    ? trxOrKnex(tableName).withSchema(schemaName)\n    : trxOrKnex(tableName);\n}\nfunction getLockTableName(tableName) {\n  return tableName + '_lock';\n}\n\nfunction getLockTableNameWithSchema(tableName, schemaName) {\n  return schemaName\n    ? schemaName + '.' + getLockTableName(tableName)\n    : getLockTableName(tableName);\n}\n\nmodule.exports = {\n  getLockTableName,\n  getLockTableNameWithSchema,\n  getTable,\n  getTableName,\n};\n"],"names":[],"mappings":"AAAA,6BAA6B;AAC7B,SAAS,aAAa,SAAS,EAAE,UAAU;IACzC,OAAO,aAAa,GAAG,WAAW,CAAC,EAAE,WAAW,GAAG;AACrD;AAEA,kEAAkE;AAClE,SAAS,SAAS,SAAS,EAAE,SAAS,EAAE,UAAU;IAChD,OAAO,aACH,UAAU,WAAW,UAAU,CAAC,cAChC,UAAU;AAChB;AACA,SAAS,iBAAiB,SAAS;IACjC,OAAO,YAAY;AACrB;AAEA,SAAS,2BAA2B,SAAS,EAAE,UAAU;IACvD,OAAO,aACH,aAAa,MAAM,iBAAiB,aACpC,iBAAiB;AACvB;AAEA,OAAO,OAAO,GAAG;IACf;IACA;IACA;IACA;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 512, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/migrations/migrate/table-creator.js"],"sourcesContent":["const {\n  getTable,\n  getLockTableName,\n  getLockTableNameWithSchema,\n  getTableName,\n} = require('./table-resolver');\n\nfunction ensureTable(tableName, schemaName, trxOrKnex) {\n  const lockTable = getLockTableName(tableName);\n  return getSchemaBuilder(trxOrKnex, schemaName)\n    .hasTable(tableName)\n    .then((exists) => {\n      return !exists && _createMigrationTable(tableName, schemaName, trxOrKnex);\n    })\n    .then(() => {\n      return getSchemaBuilder(trxOrKnex, schemaName).hasTable(lockTable);\n    })\n    .then((exists) => {\n      return (\n        !exists && _createMigrationLockTable(lockTable, schemaName, trxOrKnex)\n      );\n    })\n    .then(() => {\n      return getTable(trxOrKnex, lockTable, schemaName).select('*');\n    })\n    .then((data) => {\n      return (\n        !data.length && _insertLockRowIfNeeded(tableName, schemaName, trxOrKnex)\n      );\n    });\n}\n\nfunction _createMigrationTable(tableName, schemaName, trxOrKnex) {\n  return getSchemaBuilder(trxOrKnex, schemaName).createTable(\n    getTableName(tableName),\n    function (t) {\n      t.increments();\n      t.string('name');\n      t.integer('batch');\n      t.timestamp('migration_time');\n    }\n  );\n}\n\nfunction _createMigrationLockTable(tableName, schemaName, trxOrKnex) {\n  return getSchemaBuilder(trxOrKnex, schemaName).createTable(\n    tableName,\n    function (t) {\n      t.increments('index').primary();\n      t.integer('is_locked');\n    }\n  );\n}\n\nfunction _insertLockRowIfNeeded(tableName, schemaName, trxOrKnex) {\n  const lockTableWithSchema = getLockTableNameWithSchema(tableName, schemaName);\n  return trxOrKnex\n    .select('*')\n    .from(lockTableWithSchema)\n    .then((data) => {\n      return !data.length\n        ? trxOrKnex.from(lockTableWithSchema).insert({ is_locked: 0 })\n        : null;\n    });\n}\n\n//Get schema-aware schema builder for a given schema nam\nfunction getSchemaBuilder(trxOrKnex, schemaName) {\n  return schemaName\n    ? trxOrKnex.schema.withSchema(schemaName)\n    : trxOrKnex.schema;\n}\n\nmodule.exports = {\n  ensureTable,\n  getSchemaBuilder,\n};\n"],"names":[],"mappings":"AAAA,MAAM,EACJ,QAAQ,EACR,gBAAgB,EAChB,0BAA0B,EAC1B,YAAY,EACb;AAED,SAAS,YAAY,SAAS,EAAE,UAAU,EAAE,SAAS;IACnD,MAAM,YAAY,iBAAiB;IACnC,OAAO,iBAAiB,WAAW,YAChC,QAAQ,CAAC,WACT,IAAI,CAAC,CAAC;QACL,OAAO,CAAC,UAAU,sBAAsB,WAAW,YAAY;IACjE,GACC,IAAI,CAAC;QACJ,OAAO,iBAAiB,WAAW,YAAY,QAAQ,CAAC;IAC1D,GACC,IAAI,CAAC,CAAC;QACL,OACE,CAAC,UAAU,0BAA0B,WAAW,YAAY;IAEhE,GACC,IAAI,CAAC;QACJ,OAAO,SAAS,WAAW,WAAW,YAAY,MAAM,CAAC;IAC3D,GACC,IAAI,CAAC,CAAC;QACL,OACE,CAAC,KAAK,MAAM,IAAI,uBAAuB,WAAW,YAAY;IAElE;AACJ;AAEA,SAAS,sBAAsB,SAAS,EAAE,UAAU,EAAE,SAAS;IAC7D,OAAO,iBAAiB,WAAW,YAAY,WAAW,CACxD,aAAa,YACb,SAAU,CAAC;QACT,EAAE,UAAU;QACZ,EAAE,MAAM,CAAC;QACT,EAAE,OAAO,CAAC;QACV,EAAE,SAAS,CAAC;IACd;AAEJ;AAEA,SAAS,0BAA0B,SAAS,EAAE,UAAU,EAAE,SAAS;IACjE,OAAO,iBAAiB,WAAW,YAAY,WAAW,CACxD,WACA,SAAU,CAAC;QACT,EAAE,UAAU,CAAC,SAAS,OAAO;QAC7B,EAAE,OAAO,CAAC;IACZ;AAEJ;AAEA,SAAS,uBAAuB,SAAS,EAAE,UAAU,EAAE,SAAS;IAC9D,MAAM,sBAAsB,2BAA2B,WAAW;IAClE,OAAO,UACJ,MAAM,CAAC,KACP,IAAI,CAAC,qBACL,IAAI,CAAC,CAAC;QACL,OAAO,CAAC,KAAK,MAAM,GACf,UAAU,IAAI,CAAC,qBAAqB,MAAM,CAAC;YAAE,WAAW;QAAE,KAC1D;IACN;AACJ;AAEA,wDAAwD;AACxD,SAAS,iBAAiB,SAAS,EAAE,UAAU;IAC7C,OAAO,aACH,UAAU,MAAM,CAAC,UAAU,CAAC,cAC5B,UAAU,MAAM;AACtB;AAEA,OAAO,OAAO,GAAG;IACf;IACA;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 562, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/migrations/migrate/migration-list-resolver.js"],"sourcesContent":["const { getTableName } = require('./table-resolver');\nconst { ensureTable } = require('./table-creator');\n\n// Lists all available migration versions, as a sorted array.\nfunction listAll(migrationSource, loadExtensions) {\n  return migrationSource.getMigrations(loadExtensions);\n}\n\n// Lists all migrations that have been completed for the current db, as an\n// array.\nasync function listCompleted(tableName, schemaName, trxOrKnex) {\n  await ensureTable(tableName, schemaName, trxOrKnex);\n\n  return await trxOrKnex\n    .from(getTableName(tableName, schemaName))\n    .orderBy('id')\n    .select('name');\n}\n\n// Gets the migration list from the migration directory specified in config, as well as\n// the list of completed migrations to check what should be run.\nfunction listAllAndCompleted(config, trxOrKnex) {\n  return Promise.all([\n    listAll(config.migrationSource, config.loadExtensions),\n    listCompleted(config.tableName, config.schemaName, trxOrKnex),\n  ]);\n}\n\nmodule.exports = {\n  listAll,\n  listAllAndCompleted,\n  listCompleted,\n};\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,YAAY,EAAE;AACtB,MAAM,EAAE,WAAW,EAAE;AAErB,6DAA6D;AAC7D,SAAS,QAAQ,eAAe,EAAE,cAAc;IAC9C,OAAO,gBAAgB,aAAa,CAAC;AACvC;AAEA,0EAA0E;AAC1E,SAAS;AACT,eAAe,cAAc,SAAS,EAAE,UAAU,EAAE,SAAS;IAC3D,MAAM,YAAY,WAAW,YAAY;IAEzC,OAAO,MAAM,UACV,IAAI,CAAC,aAAa,WAAW,aAC7B,OAAO,CAAC,MACR,MAAM,CAAC;AACZ;AAEA,uFAAuF;AACvF,gEAAgE;AAChE,SAAS,oBAAoB,MAAM,EAAE,SAAS;IAC5C,OAAO,QAAQ,GAAG,CAAC;QACjB,QAAQ,OAAO,eAAe,EAAE,OAAO,cAAc;QACrD,cAAc,OAAO,SAAS,EAAE,OAAO,UAAU,EAAE;KACpD;AACH;AAEA,OAAO,OAAO,GAAG;IACf;IACA;IACA;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 592, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/migrations/util/fs.js"],"sourcesContent":["const fs = require('fs');\nconst flatten = require('lodash/flatten');\nconst os = require('os');\nconst path = require('path');\nconst { promisify } = require('util');\n\n// Promisify common fs functions.\nconst stat = promisify(fs.stat);\nconst readFile = promisify(fs.readFile);\nconst writeFile = promisify(fs.writeFile);\nconst readdir = promisify(fs.readdir);\nconst mkdir = promisify(fs.mkdir);\n\nfunction existsSync(path) {\n  try {\n    fs.accessSync(path);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Creates a temporary directory and returns it path.\n *\n * @returns {Promise<string>}\n */\nfunction createTemp() {\n  return promisify(fs.mkdtemp)(`${os.tmpdir()}${path.sep}`);\n}\n\n/**\n * Ensures the given path exists.\n *  - If the path already exist, it's fine - it does nothing.\n *  - If the path doesn't exist, it will create it.\n *\n * @param {string} path\n * @returns {Promise}\n */\nfunction ensureDirectoryExists(dir) {\n  return stat(dir).catch(() => mkdir(dir, { recursive: true }));\n}\n\n/**\n * Read a directory,\n * sorting folders and files by alphabetically order.\n * Can be browsed recursively.\n *\n * @param {string} dir\n * The directory to analyse\n *\n * @param {boolean} recursive\n * Browse directory recursively\n *\n * @returns {Promise<[string]>}\n * All found files, concatenated to the current dir\n */\nasync function getFilepathsInFolder(dir, recursive = false) {\n  const pathsList = await readdir(dir);\n  return flatten(\n    await Promise.all(\n      pathsList.sort().map(async (currentPath) => {\n        const currentFile = path.resolve(dir, currentPath);\n        const statFile = await stat(currentFile);\n        if (statFile && statFile.isDirectory()) {\n          if (recursive) {\n            return await getFilepathsInFolder(currentFile, true);\n          }\n          return [];\n        }\n        return [currentFile];\n      })\n    )\n  );\n}\n\nmodule.exports = {\n  existsSync,\n  stat,\n  readdir,\n  readFile,\n  writeFile,\n  createTemp,\n  ensureDirectoryExists,\n  getFilepathsInFolder,\n};\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM,EAAE,SAAS,EAAE;AAEnB,iCAAiC;AACjC,MAAM,OAAO,UAAU,GAAG,IAAI;AAC9B,MAAM,WAAW,UAAU,GAAG,QAAQ;AACtC,MAAM,YAAY,UAAU,GAAG,SAAS;AACxC,MAAM,UAAU,UAAU,GAAG,OAAO;AACpC,MAAM,QAAQ,UAAU,GAAG,KAAK;AAEhC,SAAS,WAAW,IAAI;IACtB,IAAI;QACF,GAAG,UAAU,CAAC;QACd,OAAO;IACT,EAAE,OAAO,GAAG;QACV,OAAO;IACT;AACF;AAEA;;;;CAIC,GACD,SAAS;IACP,OAAO,UAAU,GAAG,OAAO,EAAE,GAAG,GAAG,MAAM,KAAK,KAAK,GAAG,EAAE;AAC1D;AAEA;;;;;;;CAOC,GACD,SAAS,sBAAsB,GAAG;IAChC,OAAO,KAAK,KAAK,KAAK,CAAC,IAAM,MAAM,KAAK;YAAE,WAAW;QAAK;AAC5D;AAEA;;;;;;;;;;;;;CAaC,GACD,eAAe,qBAAqB,GAAG,EAAE,YAAY,KAAK;IACxD,MAAM,YAAY,MAAM,QAAQ;IAChC,OAAO,QACL,MAAM,QAAQ,GAAG,CACf,UAAU,IAAI,GAAG,GAAG,CAAC,OAAO;QAC1B,MAAM,cAAc,KAAK,OAAO,CAAC,KAAK;QACtC,MAAM,WAAW,MAAM,KAAK;QAC5B,IAAI,YAAY,SAAS,WAAW,IAAI;YACtC,IAAI,WAAW;gBACb,OAAO,MAAM,qBAAqB,aAAa;YACjD;YACA,OAAO,EAAE;QACX;QACA,OAAO;YAAC;SAAY;IACtB;AAGN;AAEA,OAAO,OAAO,GAAG;IACf;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 674, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/migrations/util/template.js"],"sourcesContent":["const template = require('lodash/template');\n\nconst { readFile, writeFile } = require('./fs');\n\n/**\n * Light wrapper over lodash templates making it safer to be used with javascript source code.\n *\n * In particular, doesn't interfere with use of interpolated strings in javascript.\n *\n * @param {string} content Template source\n * @param {_.TemplateOptions} options Template options\n */\nconst jsSourceTemplate = (content, options) =>\n  template(content, {\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    ...options,\n  });\n\n/**\n * Compile the contents of specified (javascript) file as a lodash template\n *\n * @param {string} filePath Path of file to be used as template\n * @param {_.TemplateOptions} options Lodash template options\n */\nconst jsFileTemplate = async (filePath, options) => {\n  const contentBuffer = await readFile(filePath);\n  return jsSourceTemplate(contentBuffer.toString(), options);\n};\n\n/**\n * Write a javascript file using another file as a (lodash) template\n *\n * @param {string} targetFilePath\n * @param {string} sourceFilePath\n * @param {_.TemplateOptions} options options passed to lodash templates\n */\nconst writeJsFileUsingTemplate = async (\n  targetFilePath,\n  sourceFilePath,\n  options,\n  variables\n) =>\n  writeFile(\n    targetFilePath,\n    (await jsFileTemplate(sourceFilePath, options))(variables)\n  );\n\nmodule.exports = {\n  jsSourceTemplate,\n  jsFileTemplate,\n  writeJsFileUsingTemplate,\n};\n"],"names":[],"mappings":"AAAA,MAAM;AAEN,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE;AAE7B;;;;;;;CAOC,GACD,MAAM,mBAAmB,CAAC,SAAS,UACjC,SAAS,SAAS;QAChB,aAAa;QACb,GAAG,OAAO;IACZ;AAEF;;;;;CAKC,GACD,MAAM,iBAAiB,OAAO,UAAU;IACtC,MAAM,gBAAgB,MAAM,SAAS;IACrC,OAAO,iBAAiB,cAAc,QAAQ,IAAI;AACpD;AAEA;;;;;;CAMC,GACD,MAAM,2BAA2B,OAC/B,gBACA,gBACA,SACA,YAEA,UACE,gBACA,CAAC,MAAM,eAAe,gBAAgB,QAAQ,EAAE;AAGpD,OAAO,OAAO,GAAG;IACf;IACA;IACA;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 713, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/migrations/util/is-module-type.js"],"sourcesContent":["const getPackageType = require('get-package-type');\n\nmodule.exports = async function isModuleType(filepath) {\n  return (\n    filepath.endsWith('.mjs') ||\n    (!filepath.endsWith('.cjs') &&\n      (await getPackageType(filepath)) === 'module')\n  );\n};\n"],"names":[],"mappings":"AAAA,MAAM;AAEN,OAAO,OAAO,GAAG,eAAe,aAAa,QAAQ;IACnD,OACE,SAAS,QAAQ,CAAC,WACjB,CAAC,SAAS,QAAQ,CAAC,WAClB,AAAC,MAAM,eAAe,cAAe;AAE3C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 722, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/migrations/util/import-file.js"],"sourcesContent":["const isModuleType = require('./is-module-type');\n\n/**\n * imports 'mjs', else requires.\n * NOTE: require me late!\n * @param {string} filepath\n */\nmodule.exports = async function importFile(filepath) {\n  return (await isModuleType(filepath))\n    ? import(require('url').pathToFileURL(filepath))\n    : require(filepath);\n};\n"],"names":[],"mappings":"AAAA,MAAM;AAEN;;;;CAIC,GACD,OAAO,OAAO,GAAG,eAAe,WAAW,QAAQ;IACjD,OAAO,AAAC,MAAM,aAAa;;;;;;;;;AAG7B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 743, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/migrations/common/MigrationsLoader.js"],"sourcesContent":["const path = require('path');\nconst DEFAULT_LOAD_EXTENSIONS = Object.freeze([\n  '.co',\n  '.coffee',\n  '.eg',\n  '.iced',\n  '.js',\n  '.cjs',\n  '.litcoffee',\n  '.ls',\n  '.ts',\n]);\n\nclass AbstractMigrationsLoader {\n  constructor(migrationDirectories, sortDirsSeparately, loadExtensions) {\n    this.sortDirsSeparately = sortDirsSeparately;\n\n    if (!Array.isArray(migrationDirectories)) {\n      migrationDirectories = [migrationDirectories];\n    }\n    this.migrationsPaths = migrationDirectories;\n    this.loadExtensions = loadExtensions || DEFAULT_LOAD_EXTENSIONS;\n  }\n\n  getFile(migrationsInfo) {\n    const absoluteDir = path.resolve(process.cwd(), migrationsInfo.directory);\n    const _path = path.join(absoluteDir, migrationsInfo.file);\n    const importFile = require('../util/import-file'); // late import\n    return importFile(_path);\n  }\n}\n\nmodule.exports = {\n  DEFAULT_LOAD_EXTENSIONS,\n  AbstractMigrationsLoader,\n};\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,0BAA0B,OAAO,MAAM,CAAC;IAC5C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,MAAM;IACJ,YAAY,oBAAoB,EAAE,kBAAkB,EAAE,cAAc,CAAE;QACpE,IAAI,CAAC,kBAAkB,GAAG;QAE1B,IAAI,CAAC,MAAM,OAAO,CAAC,uBAAuB;YACxC,uBAAuB;gBAAC;aAAqB;QAC/C;QACA,IAAI,CAAC,eAAe,GAAG;QACvB,IAAI,CAAC,cAAc,GAAG,kBAAkB;IAC1C;IAEA,QAAQ,cAAc,EAAE;QACtB,MAAM,cAAc,KAAK,OAAO,CAAC,QAAQ,GAAG,IAAI,eAAe,SAAS;QACxE,MAAM,QAAQ,KAAK,IAAI,CAAC,aAAa,eAAe,IAAI;QACxD,MAAM,iIAA6C,cAAc;QACjE,OAAO,WAAW;IACpB;AACF;AAEA,OAAO,OAAO,GAAG;IACf;IACA;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 782, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/migrations/migrate/sources/fs-migrations.js"],"sourcesContent":["const path = require('path');\nconst sortBy = require('lodash/sortBy');\n\nconst { readdir } = require('../../util/fs');\nconst { AbstractMigrationsLoader } = require('../../common/MigrationsLoader');\n\nclass FsMigrations extends AbstractMigrationsLoader {\n  /**\n   * Gets the migration names\n   * @returns Promise<string[]>\n   */\n  getMigrations(loadExtensions) {\n    // Get a list of files in all specified migration directories\n    const readMigrationsPromises = this.migrationsPaths.map((configDir) => {\n      const absoluteDir = path.resolve(process.cwd(), configDir);\n      return readdir(absoluteDir).then((files) => ({\n        files,\n        configDir,\n        absoluteDir,\n      }));\n    });\n\n    return Promise.all(readMigrationsPromises).then((allMigrations) => {\n      const migrations = allMigrations.reduce((acc, migrationDirectory) => {\n        // When true, files inside the folder should be sorted\n        if (this.sortDirsSeparately) {\n          migrationDirectory.files = migrationDirectory.files.sort();\n        }\n\n        migrationDirectory.files.forEach((file) =>\n          acc.push({ file, directory: migrationDirectory.configDir })\n        );\n\n        return acc;\n      }, []);\n\n      // If true we have already sorted the migrations inside the folders\n      // return the migrations fully qualified\n      if (this.sortDirsSeparately) {\n        return filterMigrations(\n          this,\n          migrations,\n          loadExtensions || this.loadExtensions\n        );\n      }\n\n      return filterMigrations(\n        this,\n        sortBy(migrations, 'file'),\n        loadExtensions || this.loadExtensions\n      );\n    });\n  }\n\n  getMigrationName(migration) {\n    return migration.file;\n  }\n\n  getMigration(migrationInfo) {\n    return this.getFile(migrationInfo);\n  }\n}\n\nfunction filterMigrations(migrationSource, migrations, loadExtensions) {\n  return migrations.filter((migration) => {\n    const migrationName = migrationSource.getMigrationName(migration);\n    const extension = path.extname(migrationName);\n    return loadExtensions.includes(extension);\n  });\n}\n\nmodule.exports = {\n  FsMigrations,\n};\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AAEN,MAAM,EAAE,OAAO,EAAE;AACjB,MAAM,EAAE,wBAAwB,EAAE;AAElC,MAAM,qBAAqB;IACzB;;;GAGC,GACD,cAAc,cAAc,EAAE;QAC5B,6DAA6D;QAC7D,MAAM,yBAAyB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;YACvD,MAAM,cAAc,KAAK,OAAO,CAAC,QAAQ,GAAG,IAAI;YAChD,OAAO,QAAQ,aAAa,IAAI,CAAC,CAAC,QAAU,CAAC;oBAC3C;oBACA;oBACA;gBACF,CAAC;QACH;QAEA,OAAO,QAAQ,GAAG,CAAC,wBAAwB,IAAI,CAAC,CAAC;YAC/C,MAAM,aAAa,cAAc,MAAM,CAAC,CAAC,KAAK;gBAC5C,sDAAsD;gBACtD,IAAI,IAAI,CAAC,kBAAkB,EAAE;oBAC3B,mBAAmB,KAAK,GAAG,mBAAmB,KAAK,CAAC,IAAI;gBAC1D;gBAEA,mBAAmB,KAAK,CAAC,OAAO,CAAC,CAAC,OAChC,IAAI,IAAI,CAAC;wBAAE;wBAAM,WAAW,mBAAmB,SAAS;oBAAC;gBAG3D,OAAO;YACT,GAAG,EAAE;YAEL,mEAAmE;YACnE,wCAAwC;YACxC,IAAI,IAAI,CAAC,kBAAkB,EAAE;gBAC3B,OAAO,iBACL,IAAI,EACJ,YACA,kBAAkB,IAAI,CAAC,cAAc;YAEzC;YAEA,OAAO,iBACL,IAAI,EACJ,OAAO,YAAY,SACnB,kBAAkB,IAAI,CAAC,cAAc;QAEzC;IACF;IAEA,iBAAiB,SAAS,EAAE;QAC1B,OAAO,UAAU,IAAI;IACvB;IAEA,aAAa,aAAa,EAAE;QAC1B,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB;AACF;AAEA,SAAS,iBAAiB,eAAe,EAAE,UAAU,EAAE,cAAc;IACnE,OAAO,WAAW,MAAM,CAAC,CAAC;QACxB,MAAM,gBAAgB,gBAAgB,gBAAgB,CAAC;QACvD,MAAM,YAAY,KAAK,OAAO,CAAC;QAC/B,OAAO,eAAe,QAAQ,CAAC;IACjC;AACF;AAEA,OAAO,OAAO,GAAG;IACf;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 842, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/util/is.js"],"sourcesContent":["function isString(value) {\n  return typeof value === 'string';\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\nfunction isBoolean(value) {\n  return typeof value === 'boolean';\n}\n\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n\nfunction isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nmodule.exports = {\n  isString,\n  isNumber,\n  isBoolean,\n  isUndefined,\n  isObject,\n  isFunction,\n};\n"],"names":[],"mappings":"AAAA,SAAS,SAAS,KAAK;IACrB,OAAO,OAAO,UAAU;AAC1B;AAEA,SAAS,SAAS,KAAK;IACrB,OAAO,OAAO,UAAU;AAC1B;AAEA,SAAS,UAAU,KAAK;IACtB,OAAO,OAAO,UAAU;AAC1B;AAEA,SAAS,YAAY,KAAK;IACxB,OAAO,OAAO,UAAU;AAC1B;AAEA,SAAS,SAAS,KAAK;IACrB,OAAO,OAAO,UAAU,YAAY,UAAU;AAChD;AAEA,SAAS,WAAW,KAAK;IACvB,OAAO,OAAO,UAAU;AAC1B;AAEA,OAAO,OAAO,GAAG;IACf;IACA;IACA;IACA;IACA;IACA;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 873, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/logger.js"],"sourcesContent":["const color = require('colorette');\nconst { inspect } = require('util');\nconst { isString, isFunction } = require('./util/is');\n\nclass Logger {\n  constructor(config = {}) {\n    const {\n      log: {\n        debug,\n        warn,\n        error,\n        deprecate,\n        inspectionDepth,\n        enableColors,\n      } = {},\n    } = config;\n    this._inspectionDepth = inspectionDepth || 5;\n    this._enableColors = resolveIsEnabledColors(enableColors);\n    this._debug = debug;\n    this._warn = warn;\n    this._error = error;\n    this._deprecate = deprecate;\n  }\n\n  _log(message, userFn, colorFn) {\n    if (userFn != null && !isFunction(userFn)) {\n      throw new TypeError('Extensions to knex logger must be functions!');\n    }\n\n    if (isFunction(userFn)) {\n      userFn(message);\n      return;\n    }\n\n    if (!isString(message)) {\n      message = inspect(message, {\n        depth: this._inspectionDepth,\n        colors: this._enableColors,\n      });\n    }\n\n    console.log(colorFn ? colorFn(message) : message);\n  }\n\n  debug(message) {\n    this._log(message, this._debug);\n  }\n\n  warn(message) {\n    this._log(message, this._warn, color.yellow);\n  }\n\n  error(message) {\n    this._log(message, this._error, color.red);\n  }\n\n  deprecate(method, alternative) {\n    const message = `${method} is deprecated, please use ${alternative}`;\n\n    this._log(message, this._deprecate, color.yellow);\n  }\n}\n\nfunction resolveIsEnabledColors(enableColorsParam) {\n  if (enableColorsParam != null) {\n    return enableColorsParam;\n  }\n\n  if (process && process.stdout) {\n    return process.stdout.isTTY;\n  }\n\n  return false;\n}\n\nmodule.exports = Logger;\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,EAAE,OAAO,EAAE;AACjB,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE;AAE9B,MAAM;IACJ,YAAY,SAAS,CAAC,CAAC,CAAE;QACvB,MAAM,EACJ,KAAK,EACH,KAAK,EACL,IAAI,EACJ,KAAK,EACL,SAAS,EACT,eAAe,EACf,YAAY,EACb,GAAG,CAAC,CAAC,EACP,GAAG;QACJ,IAAI,CAAC,gBAAgB,GAAG,mBAAmB;QAC3C,IAAI,CAAC,aAAa,GAAG,uBAAuB;QAC5C,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,UAAU,GAAG;IACpB;IAEA,KAAK,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE;QAC7B,IAAI,UAAU,QAAQ,CAAC,WAAW,SAAS;YACzC,MAAM,IAAI,UAAU;QACtB;QAEA,IAAI,WAAW,SAAS;YACtB,OAAO;YACP;QACF;QAEA,IAAI,CAAC,SAAS,UAAU;YACtB,UAAU,QAAQ,SAAS;gBACzB,OAAO,IAAI,CAAC,gBAAgB;gBAC5B,QAAQ,IAAI,CAAC,aAAa;YAC5B;QACF;QAEA,QAAQ,GAAG,CAAC,UAAU,QAAQ,WAAW;IAC3C;IAEA,MAAM,OAAO,EAAE;QACb,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,MAAM;IAChC;IAEA,KAAK,OAAO,EAAE;QACZ,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,KAAK,EAAE,MAAM,MAAM;IAC7C;IAEA,MAAM,OAAO,EAAE;QACb,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,MAAM,EAAE,MAAM,GAAG;IAC3C;IAEA,UAAU,MAAM,EAAE,WAAW,EAAE;QAC7B,MAAM,UAAU,GAAG,OAAO,2BAA2B,EAAE,aAAa;QAEpE,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,UAAU,EAAE,MAAM,MAAM;IAClD;AACF;AAEA,SAAS,uBAAuB,iBAAiB;IAC/C,IAAI,qBAAqB,MAAM;QAC7B,OAAO;IACT;IAEA,IAAI,WAAW,QAAQ,MAAM,EAAE;QAC7B,OAAO,QAAQ,MAAM,CAAC,KAAK;IAC7B;IAEA,OAAO;AACT;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 931, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/migrations/migrate/migrator-configuration-merger.js"],"sourcesContent":["const { FsMigrations } = require('./sources/fs-migrations');\nconst Logger = require('../../logger');\nconst { DEFAULT_LOAD_EXTENSIONS } = require('../common/MigrationsLoader');\nconst defaultLogger = new Logger();\n\nconst CONFIG_DEFAULT = Object.freeze({\n  extension: 'js',\n  loadExtensions: DEFAULT_LOAD_EXTENSIONS,\n  tableName: 'knex_migrations',\n  schemaName: null,\n  directory: './migrations',\n  disableTransactions: false,\n  disableMigrationsListValidation: false,\n  sortDirsSeparately: false,\n});\n\nfunction getMergedConfig(config, currentConfig, logger = defaultLogger) {\n  // config is the user specified config, mergedConfig has defaults and current config\n  // applied to it.\n  const mergedConfig = Object.assign(\n    {},\n    CONFIG_DEFAULT,\n    currentConfig || {},\n    config\n  );\n\n  if (\n    config &&\n    // If user specifies any FS related config,\n    // clear specified migrationSource to avoid ambiguity\n    (config.directory ||\n      config.sortDirsSeparately !== undefined ||\n      config.loadExtensions)\n  ) {\n    if (config.migrationSource) {\n      logger.warn(\n        'FS-related option specified for migration configuration. This resets migrationSource to default FsMigrations'\n      );\n    }\n    mergedConfig.migrationSource = null;\n  }\n\n  // If the user has not specified any configs, we need to\n  // default to fs migrations to maintain compatibility\n  if (!mergedConfig.migrationSource) {\n    mergedConfig.migrationSource = new FsMigrations(\n      mergedConfig.directory,\n      mergedConfig.sortDirsSeparately,\n      mergedConfig.loadExtensions\n    );\n  }\n\n  return mergedConfig;\n}\n\nmodule.exports = {\n  getMergedConfig,\n};\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,YAAY,EAAE;AACtB,MAAM;AACN,MAAM,EAAE,uBAAuB,EAAE;AACjC,MAAM,gBAAgB,IAAI;AAE1B,MAAM,iBAAiB,OAAO,MAAM,CAAC;IACnC,WAAW;IACX,gBAAgB;IAChB,WAAW;IACX,YAAY;IACZ,WAAW;IACX,qBAAqB;IACrB,iCAAiC;IACjC,oBAAoB;AACtB;AAEA,SAAS,gBAAgB,MAAM,EAAE,aAAa,EAAE,SAAS,aAAa;IACpE,oFAAoF;IACpF,iBAAiB;IACjB,MAAM,eAAe,OAAO,MAAM,CAChC,CAAC,GACD,gBACA,iBAAiB,CAAC,GAClB;IAGF,IACE,UACA,2CAA2C;IAC3C,qDAAqD;IACrD,CAAC,OAAO,SAAS,IACf,OAAO,kBAAkB,KAAK,aAC9B,OAAO,cAAc,GACvB;QACA,IAAI,OAAO,eAAe,EAAE;YAC1B,OAAO,IAAI,CACT;QAEJ;QACA,aAAa,eAAe,GAAG;IACjC;IAEA,wDAAwD;IACxD,qDAAqD;IACrD,IAAI,CAAC,aAAa,eAAe,EAAE;QACjC,aAAa,eAAe,GAAG,IAAI,aACjC,aAAa,SAAS,EACtB,aAAa,kBAAkB,EAC/B,aAAa,cAAc;IAE/B;IAEA,OAAO;AACT;AAEA,OAAO,OAAO,GAAG;IACf;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 972, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/migrations/util/timestamp.js"],"sourcesContent":["function yyyymmddhhmmss() {\n  const now = new Date();\n\n  return (\n    now.getUTCFullYear().toString() +\n    (now.getUTCMonth() + 1).toString().padStart(2, '0') +\n    now.getUTCDate().toString().padStart(2, '0') +\n    now.getUTCHours().toString().padStart(2, '0') +\n    now.getUTCMinutes().toString().padStart(2, '0') +\n    now.getUTCSeconds().toString().padStart(2, '0')\n  );\n}\n\nmodule.exports = { yyyymmddhhmmss };\n"],"names":[],"mappings":"AAAA,SAAS;IACP,MAAM,MAAM,IAAI;IAEhB,OACE,IAAI,cAAc,GAAG,QAAQ,KAC7B,CAAC,IAAI,WAAW,KAAK,CAAC,EAAE,QAAQ,GAAG,QAAQ,CAAC,GAAG,OAC/C,IAAI,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG,OACxC,IAAI,WAAW,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG,OACzC,IAAI,aAAa,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG,OAC3C,IAAI,aAAa,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;AAE/C;AAEA,OAAO,OAAO,GAAG;IAAE;AAAe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 984, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/migrations/migrate/MigrationGenerator.js"],"sourcesContent":["const path = require('path');\nconst { writeJsFileUsingTemplate } = require('../util/template');\nconst { getMergedConfig } = require('./migrator-configuration-merger');\nconst { ensureDirectoryExists } = require('../util/fs');\nconst { yyyymmddhhmmss } = require('../util/timestamp');\n\nclass MigrationGenerator {\n  constructor(migrationConfig, logger) {\n    this.config = getMergedConfig(migrationConfig, undefined, logger);\n  }\n\n  // Creates a new migration, with a given name.\n  async make(name, config, logger) {\n    this.config = getMergedConfig(config, this.config, logger);\n    if (!name) {\n      return Promise.reject(\n        new Error('A name must be specified for the generated migration')\n      );\n    }\n    await this._ensureFolder();\n    const createdMigrationFilePath = await this._writeNewMigration(name);\n    return createdMigrationFilePath;\n  }\n\n  // Ensures a folder for the migrations exist, dependent on the migration\n  // config settings.\n  _ensureFolder() {\n    const dirs = this._absoluteConfigDirs();\n\n    const promises = dirs.map(ensureDirectoryExists);\n\n    return Promise.all(promises);\n  }\n\n  _getStubPath() {\n    return (\n      this.config.stub ||\n      path.join(__dirname, 'stub', this.config.extension + '.stub')\n    );\n  }\n\n  _getNewMigrationName(name) {\n    if (name[0] === '-') name = name.slice(1);\n    return (\n      yyyymmddhhmmss() + '_' + name + '.' + this.config.extension.split('-')[0]\n    );\n  }\n\n  _getNewMigrationPath(name) {\n    const fileName = this._getNewMigrationName(name);\n    const dirs = this._absoluteConfigDirs();\n    const dir = dirs.slice(-1)[0]; // Get last specified directory\n    return path.join(dir, fileName);\n  }\n\n  // Write a new migration to disk, using the config and generated filename,\n  // passing any `variables` given in the config to the template.\n  async _writeNewMigration(name) {\n    const migrationPath = this._getNewMigrationPath(name);\n    await writeJsFileUsingTemplate(\n      migrationPath,\n      this._getStubPath(),\n      { variable: 'd' },\n      this.config.variables || {}\n    );\n    return migrationPath;\n  }\n\n  _absoluteConfigDirs() {\n    const directories = Array.isArray(this.config.directory)\n      ? this.config.directory\n      : [this.config.directory];\n    return directories.map((directory) => {\n      if (!directory) {\n        console.warn(\n          'Failed to resolve config file, knex cannot determine where to generate migrations'\n        );\n      }\n      return path.resolve(process.cwd(), directory);\n    });\n  }\n}\n\nmodule.exports = MigrationGenerator;\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,EAAE,wBAAwB,EAAE;AAClC,MAAM,EAAE,eAAe,EAAE;AACzB,MAAM,EAAE,qBAAqB,EAAE;AAC/B,MAAM,EAAE,cAAc,EAAE;AAExB,MAAM;IACJ,YAAY,eAAe,EAAE,MAAM,CAAE;QACnC,IAAI,CAAC,MAAM,GAAG,gBAAgB,iBAAiB,WAAW;IAC5D;IAEA,8CAA8C;IAC9C,MAAM,KAAK,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE;QAC/B,IAAI,CAAC,MAAM,GAAG,gBAAgB,QAAQ,IAAI,CAAC,MAAM,EAAE;QACnD,IAAI,CAAC,MAAM;YACT,OAAO,QAAQ,MAAM,CACnB,IAAI,MAAM;QAEd;QACA,MAAM,IAAI,CAAC,aAAa;QACxB,MAAM,2BAA2B,MAAM,IAAI,CAAC,kBAAkB,CAAC;QAC/D,OAAO;IACT;IAEA,wEAAwE;IACxE,mBAAmB;IACnB,gBAAgB;QACd,MAAM,OAAO,IAAI,CAAC,mBAAmB;QAErC,MAAM,WAAW,KAAK,GAAG,CAAC;QAE1B,OAAO,QAAQ,GAAG,CAAC;IACrB;IAEA,eAAe;QACb,OACE,IAAI,CAAC,MAAM,CAAC,IAAI,IAChB,KAAK,IAAI,CAAC,WAAW,QAAQ,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG;IAEzD;IAEA,qBAAqB,IAAI,EAAE;QACzB,IAAI,IAAI,CAAC,EAAE,KAAK,KAAK,OAAO,KAAK,KAAK,CAAC;QACvC,OACE,mBAAmB,MAAM,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;IAE7E;IAEA,qBAAqB,IAAI,EAAE;QACzB,MAAM,WAAW,IAAI,CAAC,oBAAoB,CAAC;QAC3C,MAAM,OAAO,IAAI,CAAC,mBAAmB;QACrC,MAAM,MAAM,KAAK,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,+BAA+B;QAC9D,OAAO,KAAK,IAAI,CAAC,KAAK;IACxB;IAEA,0EAA0E;IAC1E,+DAA+D;IAC/D,MAAM,mBAAmB,IAAI,EAAE;QAC7B,MAAM,gBAAgB,IAAI,CAAC,oBAAoB,CAAC;QAChD,MAAM,yBACJ,eACA,IAAI,CAAC,YAAY,IACjB;YAAE,UAAU;QAAI,GAChB,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,CAAC;QAE5B,OAAO;IACT;IAEA,sBAAsB;QACpB,MAAM,cAAc,MAAM,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,IACnD,IAAI,CAAC,MAAM,CAAC,SAAS,GACrB;YAAC,IAAI,CAAC,MAAM,CAAC,SAAS;SAAC;QAC3B,OAAO,YAAY,GAAG,CAAC,CAAC;YACtB,IAAI,CAAC,WAAW;gBACd,QAAQ,IAAI,CACV;YAEJ;YACA,OAAO,KAAK,OAAO,CAAC,QAAQ,GAAG,IAAI;QACrC;IACF;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1050, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/migrations/migrate/Migrator.js"],"sourcesContent":["// Migrator\n// -------\nconst differenceWith = require('lodash/differenceWith');\nconst get = require('lodash/get');\nconst isEmpty = require('lodash/isEmpty');\nconst max = require('lodash/max');\nconst {\n  getLockTableName,\n  getTable,\n  getTableName,\n} = require('./table-resolver');\nconst { getSchemaBuilder } = require('./table-creator');\nconst migrationListResolver = require('./migration-list-resolver');\nconst MigrationGenerator = require('./MigrationGenerator');\nconst { getMergedConfig } = require('./migrator-configuration-merger');\nconst { isBoolean, isFunction } = require('../../util/is');\n\nclass LockError extends Error {\n  constructor(msg) {\n    super(msg);\n    this.name = 'MigrationLocked';\n  }\n}\n\n// The new migration we're performing, typically called from the `knex.migrate`\n// interface on the main `knex` object. Passes the `knex` instance performing\n// the migration.\nclass Migrator {\n  constructor(knex) {\n    // Clone knex instance and remove post-processing that is unnecessary for internal queries from a cloned config\n    if (isFunction(knex)) {\n      if (!knex.isTransaction) {\n        this.knex = knex.withUserParams({\n          ...knex.userParams,\n        });\n      } else {\n        this.knex = knex;\n      }\n    } else {\n      this.knex = Object.assign({}, knex);\n      this.knex.userParams = this.knex.userParams || {};\n    }\n\n    this.config = getMergedConfig(\n      this.knex.client.config.migrations,\n      undefined,\n      this.knex.client.logger\n    );\n    this.generator = new MigrationGenerator(\n      this.knex.client.config.migrations,\n      this.knex.client.logger\n    );\n    this._activeMigration = {\n      fileName: null,\n    };\n  }\n\n  // Migrators to the latest configuration.\n  async latest(config) {\n    this._disableProcessing();\n    this.config = getMergedConfig(config, this.config, this.knex.client.logger);\n\n    const allAndCompleted = await migrationListResolver.listAllAndCompleted(\n      this.config,\n      this.knex\n    );\n\n    if (!this.config.disableMigrationsListValidation) {\n      validateMigrationList(this.config.migrationSource, allAndCompleted);\n    }\n\n    const [all, completed] = allAndCompleted;\n\n    const migrations = getNewMigrations(\n      this.config.migrationSource,\n      all,\n      completed\n    );\n\n    const transactionForAll =\n      !this.config.disableTransactions &&\n      !(\n        await Promise.all(\n          migrations.map(async (migration) => {\n            const migrationContents =\n              await this.config.migrationSource.getMigration(migration);\n            return !this._useTransaction(migrationContents);\n          })\n        )\n      ).some((isTransactionUsed) => isTransactionUsed);\n\n    if (transactionForAll) {\n      return this.knex.transaction((trx) => {\n        return this._runBatch(migrations, 'up', trx);\n      });\n    } else {\n      return this._runBatch(migrations, 'up');\n    }\n  }\n\n  // Runs the next migration that has not yet been run\n  async up(config) {\n    this._disableProcessing();\n    this.config = getMergedConfig(config, this.config, this.knex.client.logger);\n\n    const allAndCompleted = await migrationListResolver.listAllAndCompleted(\n      this.config,\n      this.knex\n    );\n\n    if (!this.config.disableMigrationsListValidation) {\n      validateMigrationList(this.config.migrationSource, allAndCompleted);\n    }\n    const [all, completed] = allAndCompleted;\n\n    const newMigrations = getNewMigrations(\n      this.config.migrationSource,\n      all,\n      completed\n    );\n\n    let migrationToRun;\n    const name = this.config.name;\n    if (name) {\n      if (!completed.includes(name)) {\n        migrationToRun = newMigrations.find((migration) => {\n          return (\n            this.config.migrationSource.getMigrationName(migration) === name\n          );\n        });\n        if (!migrationToRun) {\n          throw new Error(`Migration \"${name}\" not found.`);\n        }\n      }\n    } else {\n      migrationToRun = newMigrations[0];\n    }\n\n    const useTransaction =\n      !migrationToRun ||\n      this._useTransaction(\n        await this.config.migrationSource.getMigration(migrationToRun)\n      );\n\n    const migrationsToRun = [];\n    if (migrationToRun) {\n      migrationsToRun.push(migrationToRun);\n    }\n\n    const transactionForAll =\n      !this.config.disableTransactions && (!migrationToRun || useTransaction);\n\n    if (transactionForAll) {\n      return await this.knex.transaction((trx) => {\n        return this._runBatch(migrationsToRun, 'up', trx);\n      });\n    } else {\n      return await this._runBatch(migrationsToRun, 'up');\n    }\n  }\n\n  // Rollback the last \"batch\", or all, of migrations that were run.\n  rollback(config, all = false) {\n    this._disableProcessing();\n    return new Promise((resolve, reject) => {\n      try {\n        this.config = getMergedConfig(\n          config,\n          this.config,\n          this.knex.client.logger\n        );\n      } catch (e) {\n        reject(e);\n      }\n      migrationListResolver\n        .listAllAndCompleted(this.config, this.knex)\n        .then((value) => {\n          if (!this.config.disableMigrationsListValidation) {\n            validateMigrationList(this.config.migrationSource, value);\n          }\n          return value;\n        })\n        .then((val) => {\n          const [allMigrations, completedMigrations] = val;\n\n          return all\n            ? allMigrations\n                .filter((migration) => {\n                  return completedMigrations\n                    .map((migration) => migration.name)\n                    .includes(\n                      this.config.migrationSource.getMigrationName(migration)\n                    );\n                })\n                .reverse()\n            : this._getLastBatch(val);\n        })\n        .then((migrations) => {\n          return this._runBatch(migrations, 'down');\n        })\n        .then(resolve, reject);\n    });\n  }\n\n  down(config) {\n    this._disableProcessing();\n    this.config = getMergedConfig(config, this.config, this.knex.client.logger);\n\n    return migrationListResolver\n      .listAllAndCompleted(this.config, this.knex)\n      .then((value) => {\n        if (!this.config.disableMigrationsListValidation) {\n          validateMigrationList(this.config.migrationSource, value);\n        }\n        return value;\n      })\n      .then(([all, completed]) => {\n        const completedMigrations = all.filter((migration) => {\n          return completed\n            .map((migration) => migration.name)\n            .includes(this.config.migrationSource.getMigrationName(migration));\n        });\n\n        let migrationToRun;\n        const name = this.config.name;\n        if (name) {\n          migrationToRun = completedMigrations.find((migration) => {\n            return (\n              this.config.migrationSource.getMigrationName(migration) === name\n            );\n          });\n          if (!migrationToRun) {\n            throw new Error(`Migration \"${name}\" was not run.`);\n          }\n        } else {\n          migrationToRun = completedMigrations[completedMigrations.length - 1];\n        }\n\n        const migrationsToRun = [];\n        if (migrationToRun) {\n          migrationsToRun.push(migrationToRun);\n        }\n\n        return this._runBatch(migrationsToRun, 'down');\n      });\n  }\n\n  status(config) {\n    this._disableProcessing();\n    this.config = getMergedConfig(config, this.config, this.knex.client.logger);\n\n    return Promise.all([\n      getTable(this.knex, this.config.tableName, this.config.schemaName).select(\n        '*'\n      ),\n      migrationListResolver.listAll(this.config.migrationSource),\n    ]).then(([db, code]) => db.length - code.length);\n  }\n\n  // Retrieves and returns the current migration version we're on, as a promise.\n  // If no migrations have been run yet, return \"none\".\n  currentVersion(config) {\n    this._disableProcessing();\n    this.config = getMergedConfig(config, this.config, this.knex.client.logger);\n\n    return migrationListResolver\n      .listCompleted(this.config.tableName, this.config.schemaName, this.knex)\n      .then((completed) => {\n        const val = max(completed.map((value) => value.name.split('_')[0]));\n        return val === undefined ? 'none' : val;\n      });\n  }\n\n  // list all migrations\n  async list(config) {\n    this._disableProcessing();\n    this.config = getMergedConfig(config, this.config, this.knex.client.logger);\n\n    const [all, completed] = await migrationListResolver.listAllAndCompleted(\n      this.config,\n      this.knex\n    );\n\n    if (!this.config.disableMigrationsListValidation) {\n      validateMigrationList(this.config.migrationSource, [all, completed]);\n    }\n\n    const newMigrations = getNewMigrations(\n      this.config.migrationSource,\n      all,\n      completed\n    );\n    return [completed, newMigrations];\n  }\n\n  async forceFreeMigrationsLock(config) {\n    this._disableProcessing();\n    this.config = getMergedConfig(config, this.config, this.knex.client.logger);\n    const { schemaName, tableName } = this.config;\n    const lockTableName = getLockTableName(tableName);\n    const { knex } = this;\n    const getLockTable = () => getTable(knex, lockTableName, schemaName);\n    const tableExists = await getSchemaBuilder(knex, schemaName).hasTable(\n      lockTableName\n    );\n    if (tableExists) {\n      await getLockTable().del();\n      await getLockTable().insert({\n        is_locked: 0,\n      });\n    }\n  }\n\n  // Creates a new migration, with a given name.\n  make(name, config) {\n    return this.generator.make(name, config, this.knex.client.logger);\n  }\n\n  _disableProcessing() {\n    if (this.knex.disableProcessing) {\n      this.knex.disableProcessing();\n    }\n  }\n\n  _lockMigrations(trx) {\n    const tableName = getLockTableName(this.config.tableName);\n    return getTable(this.knex, tableName, this.config.schemaName)\n      .transacting(trx)\n      .where('is_locked', '=', 0)\n      .update({ is_locked: 1 })\n      .then((rowCount) => {\n        if (rowCount !== 1) {\n          throw new Error('Migration table is already locked');\n        }\n      });\n  }\n\n  _getLock(trx) {\n    const transact = trx ? (fn) => fn(trx) : (fn) => this.knex.transaction(fn);\n    return transact((trx) => {\n      return this._lockMigrations(trx);\n    }).catch((err) => {\n      throw new LockError(err.message);\n    });\n  }\n\n  _freeLock(trx = this.knex) {\n    const tableName = getLockTableName(this.config.tableName);\n    return getTable(trx, tableName, this.config.schemaName).update({\n      is_locked: 0,\n    });\n  }\n\n  // Run a batch of current migrations, in sequence.\n  async _runBatch(migrations, direction, trx) {\n    const canGetLockInTransaction =\n      this.knex.client.driverName !== 'cockroachdb';\n    try {\n      await this._getLock(canGetLockInTransaction ? trx : undefined);\n      // When there is a wrapping transaction, some migrations\n      // could have been done while waiting for the lock:\n      const completed = trx\n        ? await migrationListResolver.listCompleted(\n            this.config.tableName,\n            this.config.schemaName,\n            trx\n          )\n        : [];\n\n      migrations = getNewMigrations(\n        this.config.migrationSource,\n        migrations,\n        completed\n      );\n\n      await Promise.all(\n        migrations.map(this._validateMigrationStructure.bind(this))\n      );\n\n      let batchNo = await this._latestBatchNumber(trx);\n      if (direction === 'up') batchNo++;\n      const res = await this._waterfallBatch(\n        batchNo,\n        migrations,\n        direction,\n        trx\n      );\n      await this._freeLock(canGetLockInTransaction ? trx : undefined);\n      return res;\n    } catch (error) {\n      let cleanupReady = Promise.resolve();\n\n      if (error instanceof LockError) {\n        // If locking error do not free the lock.\n        this.knex.client.logger.warn(\n          `Can't take lock to run migrations: ${error.message}`\n        );\n        this.knex.client.logger.warn(\n          'If you are sure migrations are not running you can release the ' +\n            \"lock manually by running 'knex migrate:unlock'\"\n        );\n      } else {\n        if (this._activeMigration.fileName) {\n          this.knex.client.logger.warn(\n            `migration file \"${this._activeMigration.fileName}\" failed`\n          );\n        }\n        this.knex.client.logger.warn(\n          `migration failed with error: ${error.message}`\n        );\n        // If the error was not due to a locking issue, then remove the lock.\n        cleanupReady = this._freeLock(\n          canGetLockInTransaction ? trx : undefined\n        );\n      }\n\n      try {\n        await cleanupReady;\n        // eslint-disable-next-line no-empty\n      } catch (e) {}\n      throw error;\n    }\n  }\n\n  // Validates some migrations by requiring and checking for an `up` and `down`\n  // function.\n  async _validateMigrationStructure(migration) {\n    const migrationName =\n      this.config.migrationSource.getMigrationName(migration);\n    // maybe promise\n    const migrationContent = await this.config.migrationSource.getMigration(\n      migration\n    );\n    if (\n      typeof migrationContent.up !== 'function' ||\n      typeof migrationContent.down !== 'function'\n    ) {\n      throw new Error(\n        `Invalid migration: ${migrationName} must have both an up and down function`\n      );\n    }\n\n    return migration;\n  }\n\n  // Get the last batch of migrations, by name, ordered by insert id in reverse\n  // order.\n  async _getLastBatch([allMigrations]) {\n    const { tableName, schemaName } = this.config;\n    const migrationNames = await getTable(this.knex, tableName, schemaName)\n      .where('batch', function (qb) {\n        qb.max('batch').from(getTableName(tableName, schemaName));\n      })\n      .orderBy('id', 'desc');\n\n    const lastBatchMigrations = migrationNames.map((migration) => {\n      return allMigrations.find((entry) => {\n        return (\n          this.config.migrationSource.getMigrationName(entry) === migration.name\n        );\n      });\n    });\n    return Promise.all(lastBatchMigrations);\n  }\n\n  // Returns the latest batch number.\n  _latestBatchNumber(trx = this.knex) {\n    return trx\n      .from(getTableName(this.config.tableName, this.config.schemaName))\n      .max('batch as max_batch')\n      .then((obj) => obj[0].max_batch || 0);\n  }\n\n  // If transaction config for a single migration is defined, use that.\n  // Otherwise, rely on the common config. This allows enabling/disabling\n  // transaction for a single migration at will, regardless of the common\n  // config.\n  _useTransaction(migrationContent, allTransactionsDisabled) {\n    const singleTransactionValue = get(migrationContent, 'config.transaction');\n\n    return isBoolean(singleTransactionValue)\n      ? singleTransactionValue\n      : !allTransactionsDisabled;\n  }\n\n  // Runs a batch of `migrations` in a specified `direction`, saving the\n  // appropriate database information as the migrations are run.\n  _waterfallBatch(batchNo, migrations, direction, trx) {\n    const trxOrKnex = trx || this.knex;\n    const { tableName, schemaName, disableTransactions } = this.config;\n    let current = Promise.resolve();\n    const log = [];\n    migrations.forEach((migration) => {\n      const name = this.config.migrationSource.getMigrationName(migration);\n      this._activeMigration.fileName = name;\n      const migrationContent =\n        this.config.migrationSource.getMigration(migration);\n\n      // We're going to run each of the migrations in the current \"up\".\n      current = current\n        .then(async () => await migrationContent) //maybe promise\n        .then((migrationContent) => {\n          this._activeMigration.fileName = name;\n          if (\n            !trx &&\n            this._useTransaction(migrationContent, disableTransactions)\n          ) {\n            this.knex.enableProcessing();\n            return this._transaction(\n              this.knex,\n              migrationContent,\n              direction,\n              name\n            );\n          }\n\n          trxOrKnex.enableProcessing();\n          return checkPromise(\n            this.knex.client.logger,\n            migrationContent[direction](trxOrKnex),\n            name\n          );\n        })\n        .then(() => {\n          trxOrKnex.disableProcessing();\n          this.knex.disableProcessing();\n          log.push(name);\n          if (direction === 'up') {\n            return trxOrKnex.into(getTableName(tableName, schemaName)).insert({\n              name,\n              batch: batchNo,\n              migration_time: new Date(),\n            });\n          }\n          if (direction === 'down') {\n            return trxOrKnex\n              .from(getTableName(tableName, schemaName))\n              .where({ name })\n              .del();\n          }\n        });\n    });\n\n    return current.then(() => [batchNo, log]);\n  }\n\n  _transaction(knex, migrationContent, direction, name) {\n    return knex.transaction((trx) => {\n      return checkPromise(\n        knex.client.logger,\n        migrationContent[direction](trx),\n        name,\n        () => {\n          trx.commit();\n        }\n      );\n    });\n  }\n}\n\n// Validates that migrations are present in the appropriate directories.\nfunction validateMigrationList(migrationSource, migrations) {\n  const [all, completed] = migrations;\n  const diff = getMissingMigrations(migrationSource, completed, all);\n  if (!isEmpty(diff)) {\n    const names = diff.map((d) => d.name);\n    throw new Error(\n      `The migration directory is corrupt, the following files are missing: ${names.join(\n        ', '\n      )}`\n    );\n  }\n}\n\nfunction getMissingMigrations(migrationSource, completed, all) {\n  return differenceWith(completed, all, (c, a) => {\n    return c.name === migrationSource.getMigrationName(a);\n  });\n}\n\nfunction getNewMigrations(migrationSource, all, completed) {\n  return differenceWith(all, completed, (a, c) => {\n    return c.name === migrationSource.getMigrationName(a);\n  });\n}\n\nfunction checkPromise(logger, migrationPromise, name, commitFn) {\n  if (!migrationPromise || typeof migrationPromise.then !== 'function') {\n    logger.warn(`migration ${name} did not return a promise`);\n    if (commitFn) {\n      commitFn();\n    }\n  }\n  return migrationPromise;\n}\n\nmodule.exports = {\n  Migrator,\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1451, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/migrations/seed/sources/fs-seeds.js"],"sourcesContent":["const path = require('path');\nconst flatten = require('lodash/flatten');\nconst includes = require('lodash/includes');\nconst { AbstractMigrationsLoader } = require('../../common/MigrationsLoader');\nconst { getFilepathsInFolder } = require('../../util/fs');\n\nconst filterByLoadExtensions = (extensions) => (value) => {\n  const extension = path.extname(value);\n  return includes(extensions, extension);\n};\n\nclass FsSeeds extends AbstractMigrationsLoader {\n  _getConfigDirectories(logger) {\n    const directories = this.migrationsPaths;\n    return directories.map((directory) => {\n      if (!directory) {\n        logger.warn(\n          'Empty value passed as a directory for Seeder, this is not supported.'\n        );\n      }\n      return path.resolve(process.cwd(), directory);\n    });\n  }\n\n  async getSeeds(config) {\n    const { loadExtensions, recursive, specific } = config;\n\n    const seeds = flatten(\n      await Promise.all(\n        this._getConfigDirectories(config.logger).map((d) =>\n          getFilepathsInFolder(d, recursive)\n        )\n      )\n    );\n\n    // if true, each dir are already sorted\n    // (getFilepathsInFolderRecursively does this)\n    // if false, we need to sort all the seeds\n    let files = seeds.filter(filterByLoadExtensions(loadExtensions));\n    if (!this.sortDirsSeparately) {\n      files.sort();\n    }\n\n    if (specific) {\n      files = files.filter((file) => path.basename(file) === specific);\n      if (files.length === 0) {\n        throw new Error(\n          `Invalid argument provided: the specific seed \"${specific}\" does not exist.`\n        );\n      }\n    }\n\n    return files;\n  }\n\n  async getSeed(filepath) {\n    const importFile = require('../../util/import-file'); // late import\n    const seed = await importFile(filepath);\n    return seed;\n  }\n}\n\nmodule.exports = {\n  FsSeeds,\n};\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM,EAAE,wBAAwB,EAAE;AAClC,MAAM,EAAE,oBAAoB,EAAE;AAE9B,MAAM,yBAAyB,CAAC,aAAe,CAAC;QAC9C,MAAM,YAAY,KAAK,OAAO,CAAC;QAC/B,OAAO,SAAS,YAAY;IAC9B;AAEA,MAAM,gBAAgB;IACpB,sBAAsB,MAAM,EAAE;QAC5B,MAAM,cAAc,IAAI,CAAC,eAAe;QACxC,OAAO,YAAY,GAAG,CAAC,CAAC;YACtB,IAAI,CAAC,WAAW;gBACd,OAAO,IAAI,CACT;YAEJ;YACA,OAAO,KAAK,OAAO,CAAC,QAAQ,GAAG,IAAI;QACrC;IACF;IAEA,MAAM,SAAS,MAAM,EAAE;QACrB,MAAM,EAAE,cAAc,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG;QAEhD,MAAM,QAAQ,QACZ,MAAM,QAAQ,GAAG,CACf,IAAI,CAAC,qBAAqB,CAAC,OAAO,MAAM,EAAE,GAAG,CAAC,CAAC,IAC7C,qBAAqB,GAAG;QAK9B,uCAAuC;QACvC,8CAA8C;QAC9C,0CAA0C;QAC1C,IAAI,QAAQ,MAAM,MAAM,CAAC,uBAAuB;QAChD,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;YAC5B,MAAM,IAAI;QACZ;QAEA,IAAI,UAAU;YACZ,QAAQ,MAAM,MAAM,CAAC,CAAC,OAAS,KAAK,QAAQ,CAAC,UAAU;YACvD,IAAI,MAAM,MAAM,KAAK,GAAG;gBACtB,MAAM,IAAI,MACR,CAAC,8CAA8C,EAAE,SAAS,iBAAiB,CAAC;YAEhF;QACF;QAEA,OAAO;IACT;IAEA,MAAM,QAAQ,QAAQ,EAAE;QACtB,MAAM,iIAAgD,cAAc;QACpE,MAAM,OAAO,MAAM,WAAW;QAC9B,OAAO;IACT;AACF;AAEA,OAAO,OAAO,GAAG;IACf;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1502, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/migrations/seed/seeder-configuration-merger.js"],"sourcesContent":["const { FsSeeds } = require('./sources/fs-seeds');\nconst Logger = require('../../logger');\nconst { DEFAULT_LOAD_EXTENSIONS } = require('../common/MigrationsLoader');\nconst defaultLogger = new Logger();\n\nconst CONFIG_DEFAULT = Object.freeze({\n  extension: 'js',\n  directory: './seeds',\n  loadExtensions: DEFAULT_LOAD_EXTENSIONS,\n  specific: null,\n  timestampFilenamePrefix: false,\n  recursive: false,\n  sortDirsSeparately: false,\n});\n\nfunction getMergedConfig(config, currentConfig, logger = defaultLogger) {\n  // config is the user specified config, mergedConfig has defaults and current config\n  // applied to it.\n  const mergedConfig = Object.assign(\n    {},\n    CONFIG_DEFAULT,\n    currentConfig || {},\n    config,\n    {\n      logger,\n    }\n  );\n\n  if (\n    config &&\n    // If user specifies any FS related config,\n    // clear specified migrationSource to avoid ambiguity\n    (config.directory ||\n      config.sortDirsSeparately !== undefined ||\n      config.loadExtensions)\n  ) {\n    if (config.seedSource) {\n      logger.warn(\n        'FS-related option specified for seed configuration. This resets seedSource to default FsMigrations'\n      );\n    }\n    mergedConfig.seedSource = null;\n  }\n\n  // If the user has not specified any configs, we need to\n  // default to fs migrations to maintain compatibility\n  if (!mergedConfig.seedSource) {\n    mergedConfig.seedSource = new FsSeeds(\n      mergedConfig.directory,\n      mergedConfig.sortDirsSeparately,\n      mergedConfig.loadExtensions\n    );\n  }\n\n  return mergedConfig;\n}\n\nmodule.exports = {\n  getMergedConfig,\n};\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,OAAO,EAAE;AACjB,MAAM;AACN,MAAM,EAAE,uBAAuB,EAAE;AACjC,MAAM,gBAAgB,IAAI;AAE1B,MAAM,iBAAiB,OAAO,MAAM,CAAC;IACnC,WAAW;IACX,WAAW;IACX,gBAAgB;IAChB,UAAU;IACV,yBAAyB;IACzB,WAAW;IACX,oBAAoB;AACtB;AAEA,SAAS,gBAAgB,MAAM,EAAE,aAAa,EAAE,SAAS,aAAa;IACpE,oFAAoF;IACpF,iBAAiB;IACjB,MAAM,eAAe,OAAO,MAAM,CAChC,CAAC,GACD,gBACA,iBAAiB,CAAC,GAClB,QACA;QACE;IACF;IAGF,IACE,UACA,2CAA2C;IAC3C,qDAAqD;IACrD,CAAC,OAAO,SAAS,IACf,OAAO,kBAAkB,KAAK,aAC9B,OAAO,cAAc,GACvB;QACA,IAAI,OAAO,UAAU,EAAE;YACrB,OAAO,IAAI,CACT;QAEJ;QACA,aAAa,UAAU,GAAG;IAC5B;IAEA,wDAAwD;IACxD,qDAAqD;IACrD,IAAI,CAAC,aAAa,UAAU,EAAE;QAC5B,aAAa,UAAU,GAAG,IAAI,QAC5B,aAAa,SAAS,EACtB,aAAa,kBAAkB,EAC/B,aAAa,cAAc;IAE/B;IAEA,OAAO;AACT;AAEA,OAAO,OAAO,GAAG;IACf;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1544, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/migrations/seed/Seeder.js"],"sourcesContent":["// Seeder\n// -------\n\nconst path = require('path');\nconst { ensureDirectoryExists } = require('../util/fs');\nconst { writeJsFileUsingTemplate } = require('../util/template');\nconst { yyyymmddhhmmss } = require('../util/timestamp');\nconst { getMergedConfig } = require('./seeder-configuration-merger');\n\n// The new seeds we're performing, typically called from the `knex.seed`\n// interface on the main `knex` object. Passes the `knex` instance performing\n// the seeds.\nclass Seeder {\n  constructor(knex) {\n    this.knex = knex;\n    this.config = this.resolveConfig(knex.client.config.seeds);\n  }\n\n  // Runs seed files for the given environment.\n  async run(config) {\n    this.config = this.resolveConfig(config);\n    const files = await this.config.seedSource.getSeeds(this.config);\n    return this._runSeeds(files);\n  }\n\n  // Creates a new seed file, with a given name.\n  async make(name, config) {\n    this.config = this.resolveConfig(config);\n    if (!name)\n      throw new Error('A name must be specified for the generated seed');\n    await this._ensureFolder(config);\n    const seedPath = await this._writeNewSeed(name);\n    return seedPath;\n  }\n\n  // Ensures a folder for the seeds exist, dependent on the\n  // seed config settings.\n  _ensureFolder() {\n    const dirs = this.config.seedSource._getConfigDirectories(\n      this.config.logger\n    );\n    const promises = dirs.map(ensureDirectoryExists);\n    return Promise.all(promises);\n  }\n\n  // Run seed files, in sequence.\n  async _runSeeds(seeds) {\n    for (const seed of seeds) {\n      await this._validateSeedStructure(seed);\n    }\n    return this._waterfallBatch(seeds);\n  }\n\n  async _validateSeedStructure(filepath) {\n    const seed = await this.config.seedSource.getSeed(filepath);\n    if (typeof seed.seed !== 'function') {\n      throw new Error(\n        `Invalid seed file: ${filepath} must have a seed function`\n      );\n    }\n    return filepath;\n  }\n\n  _getStubPath() {\n    return (\n      this.config.stub ||\n      path.join(__dirname, 'stub', this.config.extension + '.stub')\n    );\n  }\n\n  _getNewStubFileName(name) {\n    if (name[0] === '-') name = name.slice(1);\n\n    if (this.config.timestampFilenamePrefix === true) {\n      name = `${yyyymmddhhmmss()}_${name}`;\n    }\n\n    return `${name}.${this.config.extension}`;\n  }\n\n  _getNewStubFilePath(name) {\n    const fileName = this._getNewStubFileName(name);\n    const dirs = this.config.seedSource._getConfigDirectories(\n      this.config.logger\n    );\n    const dir = dirs.slice(-1)[0]; // Get last specified directory\n    return path.join(dir, fileName);\n  }\n\n  // Write a new seed to disk, using the config and generated filename,\n  // passing any `variables` given in the config to the template.\n  async _writeNewSeed(name) {\n    const seedPath = this._getNewStubFilePath(name);\n    await writeJsFileUsingTemplate(\n      seedPath,\n      this._getStubPath(),\n      { variable: 'd' },\n      this.config.variables || {}\n    );\n    return seedPath;\n  }\n\n  async _listAll(config) {\n    this.config = this.resolveConfig(config);\n    return this.config.seedSource.getSeeds(this.config);\n  }\n\n  // Runs a batch of seed files.\n  async _waterfallBatch(seeds) {\n    const { knex } = this;\n    const log = [];\n    for (const seedPath of seeds) {\n      const seed = await this.config.seedSource.getSeed(seedPath);\n      try {\n        await seed.seed(knex);\n        log.push(seedPath);\n      } catch (originalError) {\n        const error = new Error(\n          `Error while executing \"${seedPath}\" seed: ${originalError.message}`\n        );\n        error.original = originalError;\n        error.stack =\n          error.stack.split('\\n').slice(0, 2).join('\\n') +\n          '\\n' +\n          originalError.stack;\n        throw error;\n      }\n    }\n    return [log];\n  }\n\n  resolveConfig(config) {\n    return getMergedConfig(config, this.config, this.knex.client.logger);\n  }\n}\n\nmodule.exports = Seeder;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1653, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/knex-builder/FunctionHelper.js"],"sourcesContent":["// FunctionHelper\n// -------\n// Used for adding functions from the builder\n// Example usage: table.dateTime('datetime_to_date').notNull().defaultTo(knex.fn.now());\nclass FunctionHelper {\n  constructor(client) {\n    this.client = client;\n  }\n\n  now(precision) {\n    if (typeof precision === 'number') {\n      return this.client.raw(`CURRENT_TIMESTAMP(${precision})`);\n    }\n    return this.client.raw('CURRENT_TIMESTAMP');\n  }\n\n  uuid() {\n    switch (this.client.driverName) {\n      case 'sqlite3':\n      case 'better-sqlite3':\n        return this.client.raw(\n          \"(lower(hex(randomblob(4))) || '-' || lower(hex(randomblob(2))) || '-4' || substr(lower(hex(randomblob(2))),2) || '-' || substr('89ab',abs(random()) % 4 + 1, 1) || substr(lower(hex(randomblob(2))),2) || '-' || lower(hex(randomblob(6))))\"\n        );\n      case 'mssql':\n        return this.client.raw('(NEWID())');\n      case 'pg':\n      case 'pgnative':\n      case 'cockroachdb':\n        return this.client.raw('(gen_random_uuid())');\n      case 'oracle':\n      case 'oracledb':\n        return this.client.raw('(random_uuid())');\n      case 'mysql':\n      case 'mysql2':\n        return this.client.raw('(UUID())');\n      default:\n        throw new Error(\n          `${this.client.driverName} does not have a uuid function`\n        );\n    }\n  }\n\n  uuidToBin(uuid, ordered = true) {\n    const buf = Buffer.from(uuid.replace(/-/g, ''), 'hex');\n    return ordered\n      ? Buffer.concat([\n          buf.slice(6, 8),\n          buf.slice(4, 6),\n          buf.slice(0, 4),\n          buf.slice(8, 16),\n        ])\n      : Buffer.concat([\n          buf.slice(0, 4),\n          buf.slice(4, 6),\n          buf.slice(6, 8),\n          buf.slice(8, 16),\n        ]);\n  }\n\n  binToUuid(bin, ordered = true) {\n    const buf = Buffer.from(bin, 'hex');\n    return ordered\n      ? [\n          buf.toString('hex', 4, 8),\n          buf.toString('hex', 2, 4),\n          buf.toString('hex', 0, 2),\n          buf.toString('hex', 8, 10),\n          buf.toString('hex', 10, 16),\n        ].join('-')\n      : [\n          buf.toString('hex', 0, 4),\n          buf.toString('hex', 4, 6),\n          buf.toString('hex', 6, 8),\n          buf.toString('hex', 8, 10),\n          buf.toString('hex', 10, 16),\n        ].join('-');\n  }\n}\n\nmodule.exports = FunctionHelper;\n"],"names":[],"mappings":"AAAA,iBAAiB;AACjB,UAAU;AACV,6CAA6C;AAC7C,wFAAwF;AACxF,MAAM;IACJ,YAAY,MAAM,CAAE;QAClB,IAAI,CAAC,MAAM,GAAG;IAChB;IAEA,IAAI,SAAS,EAAE;QACb,IAAI,OAAO,cAAc,UAAU;YACjC,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,kBAAkB,EAAE,UAAU,CAAC,CAAC;QAC1D;QACA,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;IACzB;IAEA,OAAO;QACL,OAAQ,IAAI,CAAC,MAAM,CAAC,UAAU;YAC5B,KAAK;YACL,KAAK;gBACH,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CACpB;YAEJ,KAAK;gBACH,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;YACzB,KAAK;YACL,KAAK;YACL,KAAK;gBACH,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;YACzB,KAAK;YACL,KAAK;gBACH,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;YACzB,KAAK;YACL,KAAK;gBACH,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;YACzB;gBACE,MAAM,IAAI,MACR,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,8BAA8B,CAAC;QAE/D;IACF;IAEA,UAAU,IAAI,EAAE,UAAU,IAAI,EAAE;QAC9B,MAAM,MAAM,OAAO,IAAI,CAAC,KAAK,OAAO,CAAC,MAAM,KAAK;QAChD,OAAO,UACH,OAAO,MAAM,CAAC;YACZ,IAAI,KAAK,CAAC,GAAG;YACb,IAAI,KAAK,CAAC,GAAG;YACb,IAAI,KAAK,CAAC,GAAG;YACb,IAAI,KAAK,CAAC,GAAG;SACd,IACD,OAAO,MAAM,CAAC;YACZ,IAAI,KAAK,CAAC,GAAG;YACb,IAAI,KAAK,CAAC,GAAG;YACb,IAAI,KAAK,CAAC,GAAG;YACb,IAAI,KAAK,CAAC,GAAG;SACd;IACP;IAEA,UAAU,GAAG,EAAE,UAAU,IAAI,EAAE;QAC7B,MAAM,MAAM,OAAO,IAAI,CAAC,KAAK;QAC7B,OAAO,UACH;YACE,IAAI,QAAQ,CAAC,OAAO,GAAG;YACvB,IAAI,QAAQ,CAAC,OAAO,GAAG;YACvB,IAAI,QAAQ,CAAC,OAAO,GAAG;YACvB,IAAI,QAAQ,CAAC,OAAO,GAAG;YACvB,IAAI,QAAQ,CAAC,OAAO,IAAI;SACzB,CAAC,IAAI,CAAC,OACP;YACE,IAAI,QAAQ,CAAC,OAAO,GAAG;YACvB,IAAI,QAAQ,CAAC,OAAO,GAAG;YACvB,IAAI,QAAQ,CAAC,OAAO,GAAG;YACvB,IAAI,QAAQ,CAAC,OAAO,GAAG;YACvB,IAAI,QAAQ,CAAC,OAAO,IAAI;SACzB,CAAC,IAAI,CAAC;IACb;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1725, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/query/method-constants.js"],"sourcesContent":["// All properties we can use to start a query chain\n// from the `knex` object, e.g. `knex.select('*').from(...`\nmodule.exports = [\n  'with',\n  'withRecursive',\n  'withMaterialized',\n  'withNotMaterialized',\n  'select',\n  'as',\n  'columns',\n  'column',\n  'from',\n  'fromJS',\n  'fromRaw',\n  'into',\n  'withSchema',\n  'table',\n  'distinct',\n  'join',\n  'joinRaw',\n  'innerJoin',\n  'leftJoin',\n  'leftOuterJoin',\n  'rightJoin',\n  'rightOuterJoin',\n  'outerJoin',\n  'fullOuterJoin',\n  'crossJoin',\n  'where',\n  'andWhere',\n  'orWhere',\n  'whereNot',\n  'orWhereNot',\n  'whereLike',\n  'andWhereLike',\n  'orWhereLike',\n  'whereILike',\n  'andWhereILike',\n  'orWhereILike',\n  'whereRaw',\n  'whereWrapped',\n  'havingWrapped',\n  'orWhereRaw',\n  'whereExists',\n  'orWhereExists',\n  'whereNotExists',\n  'orWhereNotExists',\n  'whereIn',\n  'orWhereIn',\n  'whereNotIn',\n  'orWhereNotIn',\n  'whereNull',\n  'orWhereNull',\n  'whereNotNull',\n  'orWhereNotNull',\n  'whereBetween',\n  'whereNotBetween',\n  'andWhereBetween',\n  'andWhereNotBetween',\n  'orWhereBetween',\n  'orWhereNotBetween',\n  'groupBy',\n  'groupByRaw',\n  'orderBy',\n  'orderByRaw',\n  'union',\n  'unionAll',\n  'intersect',\n  'except',\n  'having',\n  'havingRaw',\n  'orHaving',\n  'orHavingRaw',\n  'offset',\n  'limit',\n  'count',\n  'countDistinct',\n  'min',\n  'max',\n  'sum',\n  'sumDistinct',\n  'avg',\n  'avgDistinct',\n  'increment',\n  'decrement',\n  'first',\n  'debug',\n  'pluck',\n  'clearSelect',\n  'clearWhere',\n  'clearGroup',\n  'clearOrder',\n  'clearHaving',\n  'insert',\n  'update',\n  'returning',\n  'del',\n  'delete',\n  'truncate',\n  'transacting',\n  'connection',\n\n  // JSON methods\n\n  // Json manipulation functions\n  'jsonExtract',\n  'jsonSet',\n  'jsonInsert',\n  'jsonRemove',\n\n  // Wheres Json\n  'whereJsonObject',\n  'orWhereJsonObject',\n  'andWhereJsonObject',\n  'whereNotJsonObject',\n  'orWhereNotJsonObject',\n  'andWhereNotJsonObject',\n\n  'whereJsonPath',\n  'orWhereJsonPath',\n  'andWhereJsonPath',\n\n  'whereJsonSupersetOf',\n  'orWhereJsonSupersetOf',\n  'andWhereJsonSupersetOf',\n  'whereJsonNotSupersetOf',\n  'orWhereJsonNotSupersetOf',\n  'andWhereJsonNotSupersetOf',\n\n  'whereJsonSubsetOf',\n  'orWhereJsonSubsetOf',\n  'andWhereJsonSubsetOf',\n  'whereJsonNotSubsetOf',\n  'orWhereJsonNotSubsetOf',\n  'andWhereJsonNotSubsetOf',\n];\n"],"names":[],"mappings":"AAAA,mDAAmD;AACnD,2DAA2D;AAC3D,OAAO,OAAO,GAAG;IACf;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,eAAe;IAEf,8BAA8B;IAC9B;IACA;IACA;IACA;IAEA,cAAc;IACd;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;CACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1860, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/execution/internal/delay.js"],"sourcesContent":["/**\n * @param {number} delay\n * @returns {Promise<void>}\n */\nmodule.exports = (delay) =>\n  new Promise((resolve) => setTimeout(resolve, delay));\n"],"names":[],"mappings":"AAAA;;;CAGC,GACD,OAAO,OAAO,GAAG,CAAC,QAChB,IAAI,QAAQ,CAAC,UAAY,WAAW,SAAS","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1869, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/execution/batch-insert.js"],"sourcesContent":["const chunk = require('lodash/chunk');\nconst flatten = require('lodash/flatten');\nconst delay = require('./internal/delay');\nconst { isNumber } = require('../util/is');\n\nfunction batchInsert(client, tableName, batch, chunkSize = 1000) {\n  let returning = undefined;\n  let transaction = null;\n  if (!isNumber(chunkSize) || chunkSize < 1) {\n    throw new TypeError(`Invalid chunkSize: ${chunkSize}`);\n  }\n  if (!Array.isArray(batch)) {\n    throw new TypeError(`Invalid batch: Expected array, got ${typeof batch}`);\n  }\n  const chunks = chunk(batch, chunkSize);\n\n  const runInTransaction = (cb) => {\n    if (transaction) {\n      return cb(transaction);\n    }\n    return client.transaction(cb);\n  };\n\n  return Object.assign(\n    Promise.resolve().then(async () => {\n      //Next tick to ensure wrapper functions are called if needed\n      await delay(1);\n      return runInTransaction(async (tr) => {\n        const chunksResults = [];\n        for (const items of chunks) {\n          chunksResults.push(await tr(tableName).insert(items, returning));\n        }\n        return flatten(chunksResults);\n      });\n    }),\n    {\n      returning(columns) {\n        returning = columns;\n\n        return this;\n      },\n      transacting(tr) {\n        transaction = tr;\n\n        return this;\n      },\n    }\n  );\n}\n\nmodule.exports = batchInsert;\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM,EAAE,QAAQ,EAAE;AAElB,SAAS,YAAY,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,YAAY,IAAI;IAC7D,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,CAAC,SAAS,cAAc,YAAY,GAAG;QACzC,MAAM,IAAI,UAAU,CAAC,mBAAmB,EAAE,WAAW;IACvD;IACA,IAAI,CAAC,MAAM,OAAO,CAAC,QAAQ;QACzB,MAAM,IAAI,UAAU,CAAC,mCAAmC,EAAE,OAAO,OAAO;IAC1E;IACA,MAAM,SAAS,MAAM,OAAO;IAE5B,MAAM,mBAAmB,CAAC;QACxB,IAAI,aAAa;YACf,OAAO,GAAG;QACZ;QACA,OAAO,OAAO,WAAW,CAAC;IAC5B;IAEA,OAAO,OAAO,MAAM,CAClB,QAAQ,OAAO,GAAG,IAAI,CAAC;QACrB,4DAA4D;QAC5D,MAAM,MAAM;QACZ,OAAO,iBAAiB,OAAO;YAC7B,MAAM,gBAAgB,EAAE;YACxB,KAAK,MAAM,SAAS,OAAQ;gBAC1B,cAAc,IAAI,CAAC,MAAM,GAAG,WAAW,MAAM,CAAC,OAAO;YACvD;YACA,OAAO,QAAQ;QACjB;IACF,IACA;QACE,WAAU,OAAO;YACf,YAAY;YAEZ,OAAO,IAAI;QACb;QACA,aAAY,EAAE;YACZ,cAAc;YAEd,OAAO,IAAI;QACb;IACF;AAEJ;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1916, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/util/security.js"],"sourcesContent":["/**\n * Sets a hidden (non-enumerable) property on the `target` object, copying it\n * from `source`.\n *\n * This is useful when we want to protect certain data from being accidentally\n * leaked through logs, also when the property is non-enumerable on the `source`\n * object and we want to ensure that it is properly copied.\n *\n * @param {object} target\n * @param {object} source - default: target\n * @param {string} propertyName - default: 'password'\n */\nfunction setHiddenProperty(target, source, propertyName = 'password') {\n  if (!source) {\n    source = target;\n  }\n\n  Object.defineProperty(target, propertyName, {\n    enumerable: false,\n    value: source[propertyName],\n  });\n}\n\nmodule.exports = {\n  setHiddenProperty,\n};\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;CAWC,GACD,SAAS,kBAAkB,MAAM,EAAE,MAAM,EAAE,eAAe,UAAU;IAClE,IAAI,CAAC,QAAQ;QACX,SAAS;IACX;IAEA,OAAO,cAAc,CAAC,QAAQ,cAAc;QAC1C,YAAY;QACZ,OAAO,MAAM,CAAC,aAAa;IAC7B;AACF;AAEA,OAAO,OAAO,GAAG;IACf;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1944, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/knex-builder/make-knex.js"],"sourcesContent":["const { EventEmitter } = require('events');\n\nconst { Migrator } = require('../migrations/migrate/Migrator');\nconst Seeder = require('../migrations/seed/Seeder');\nconst FunctionHelper = require('./FunctionHelper');\nconst QueryInterface = require('../query/method-constants');\nconst merge = require('lodash/merge');\nconst batchInsert = require('../execution/batch-insert');\nconst { isObject } = require('../util/is');\nconst { setHiddenProperty } = require('../util/security');\n\n// Javascript does not officially support \"callable objects\".  Instead,\n// you must create a regular Function and inject properties/methods\n// into it.  In other words: you can't leverage Prototype Inheritance\n// to share the property/method definitions.\n//\n// To work around this, we're creating an Object Property Definition.\n// This allow us to quickly inject everything into the `knex` function\n// via the `Object.defineProperties(..)` function.  More importantly,\n// it allows the same definitions to be shared across `knex` instances.\nconst KNEX_PROPERTY_DEFINITIONS = {\n  client: {\n    get() {\n      return this.context.client;\n    },\n    set(client) {\n      this.context.client = client;\n    },\n    configurable: true,\n  },\n\n  userParams: {\n    get() {\n      return this.context.userParams;\n    },\n    set(userParams) {\n      this.context.userParams = userParams;\n    },\n    configurable: true,\n  },\n\n  schema: {\n    get() {\n      return this.client.schemaBuilder();\n    },\n    configurable: true,\n  },\n\n  migrate: {\n    get() {\n      return new Migrator(this);\n    },\n    configurable: true,\n  },\n\n  seed: {\n    get() {\n      return new Seeder(this);\n    },\n    configurable: true,\n  },\n\n  fn: {\n    get() {\n      return new FunctionHelper(this.client);\n    },\n    configurable: true,\n  },\n};\n\n// `knex` instances serve as proxies around `context` objects.  So, calling\n// any of these methods on the `knex` instance will forward the call to\n// the `knex.context` object. This ensures that `this` will correctly refer\n// to `context` within each of these methods.\nconst CONTEXT_METHODS = [\n  'raw',\n  'batchInsert',\n  'transaction',\n  'transactionProvider',\n  'initialize',\n  'destroy',\n  'ref',\n  'withUserParams',\n  'queryBuilder',\n  'disableProcessing',\n  'enableProcessing',\n];\n\nfor (const m of CONTEXT_METHODS) {\n  KNEX_PROPERTY_DEFINITIONS[m] = {\n    value: function (...args) {\n      return this.context[m](...args);\n    },\n    configurable: true,\n  };\n}\n\nfunction makeKnex(client) {\n  // The object we're potentially using to kick off an initial chain.\n  function knex(tableName, options) {\n    return createQueryBuilder(knex.context, tableName, options);\n  }\n\n  redefineProperties(knex, client);\n  return knex;\n}\n\nfunction initContext(knexFn) {\n  const knexContext = knexFn.context || {};\n  Object.assign(knexContext, {\n    queryBuilder() {\n      return this.client.queryBuilder();\n    },\n\n    raw() {\n      return this.client.raw.apply(this.client, arguments);\n    },\n\n    batchInsert(table, batch, chunkSize = 1000) {\n      return batchInsert(this, table, batch, chunkSize);\n    },\n\n    // Creates a new transaction.\n    // If container is provided, returns a promise for when the transaction is resolved.\n    // If container is not provided, returns a promise with a transaction that is resolved\n    // when transaction is ready to be used.\n    transaction(container, _config) {\n      // Overload support of `transaction(config)`\n      if (!_config && isObject(container)) {\n        _config = container;\n        container = null;\n      }\n\n      const config = Object.assign({}, _config);\n      config.userParams = this.userParams || {};\n      if (config.doNotRejectOnRollback === undefined) {\n        config.doNotRejectOnRollback = true;\n      }\n\n      return this._transaction(container, config);\n    },\n\n    // Internal method that actually establishes the Transaction.  It makes no assumptions\n    // about the `config` or `outerTx`, and expects the caller to handle these details.\n    _transaction(container, config, outerTx = null) {\n      if (container) {\n        const trx = this.client.transaction(container, config, outerTx);\n        return trx;\n      } else {\n        return new Promise((resolve, reject) => {\n          this.client.transaction(resolve, config, outerTx).catch(reject);\n        });\n      }\n    },\n\n    transactionProvider(config) {\n      let trx;\n      return () => {\n        if (!trx) {\n          trx = this.transaction(undefined, config);\n        }\n        return trx;\n      };\n    },\n\n    // Typically never needed, initializes the pool for a knex client.\n    initialize(config) {\n      return this.client.initializePool(config);\n    },\n\n    // Convenience method for tearing down the pool.\n    destroy(callback) {\n      return this.client.destroy(callback);\n    },\n\n    ref(ref) {\n      return this.client.ref(ref);\n    },\n\n    // Do not document this as public API until naming and API is improved for general consumption\n    // This method exists to disable processing of internal queries in migrations\n    disableProcessing() {\n      if (this.userParams.isProcessingDisabled) {\n        return;\n      }\n      this.userParams.wrapIdentifier = this.client.config.wrapIdentifier;\n      this.userParams.postProcessResponse =\n        this.client.config.postProcessResponse;\n      this.client.config.wrapIdentifier = null;\n      this.client.config.postProcessResponse = null;\n      this.userParams.isProcessingDisabled = true;\n    },\n\n    // Do not document this as public API until naming and API is improved for general consumption\n    // This method exists to enable execution of non-internal queries with consistent identifier naming in migrations\n    enableProcessing() {\n      if (!this.userParams.isProcessingDisabled) {\n        return;\n      }\n      this.client.config.wrapIdentifier = this.userParams.wrapIdentifier;\n      this.client.config.postProcessResponse =\n        this.userParams.postProcessResponse;\n      this.userParams.isProcessingDisabled = false;\n    },\n\n    withUserParams(params) {\n      const knexClone = shallowCloneFunction(knexFn); // We need to include getters in our clone\n      if (this.client) {\n        knexClone.client = Object.create(this.client.constructor.prototype); // Clone client to avoid leaking listeners that are set on it\n        merge(knexClone.client, this.client);\n        knexClone.client.config = Object.assign({}, this.client.config); // Clone client config to make sure they can be modified independently\n\n        if (this.client.config.password) {\n          setHiddenProperty(knexClone.client.config, this.client.config);\n        }\n      }\n\n      redefineProperties(knexClone, knexClone.client);\n      _copyEventListeners('query', knexFn, knexClone);\n      _copyEventListeners('query-error', knexFn, knexClone);\n      _copyEventListeners('query-response', knexFn, knexClone);\n      _copyEventListeners('start', knexFn, knexClone);\n      knexClone.userParams = params;\n      return knexClone;\n    },\n  });\n\n  if (!knexFn.context) {\n    knexFn.context = knexContext;\n  }\n}\n\nfunction _copyEventListeners(eventName, sourceKnex, targetKnex) {\n  const listeners = sourceKnex.listeners(eventName);\n  listeners.forEach((listener) => {\n    targetKnex.on(eventName, listener);\n  });\n}\n\nfunction redefineProperties(knex, client) {\n  // Allow chaining methods from the root object, before\n  // any other information is specified.\n  //\n  // TODO: `QueryBuilder.extend(..)` allows new QueryBuilder\n  //       methods to be introduced via external components.\n  //       As a side-effect, it also pushes the new method names\n  //       into the `QueryInterface` array.\n  //\n  //       The Problem: due to the way the code is currently\n  //       structured, these new methods cannot be retroactively\n  //       injected into existing `knex` instances!  As a result,\n  //       some `knex` instances will support the methods, and\n  //       others will not.\n  //\n  //       We should revisit this once we figure out the desired\n  //       behavior / usage.  For instance: do we really want to\n  //       allow external components to directly manipulate `knex`\n  //       data structures?  Or, should we come up w/ a different\n  //       approach that avoids side-effects / mutation?\n  //\n  //      (FYI: I noticed this issue because I attempted to integrate\n  //       this logic directly into the `KNEX_PROPERTY_DEFINITIONS`\n  //       construction.  However, `KNEX_PROPERTY_DEFINITIONS` is\n  //       constructed before any `knex` instances are created.\n  //       As a result, the method extensions were missing from all\n  //       `knex` instances.)\n  for (let i = 0; i < QueryInterface.length; i++) {\n    const method = QueryInterface[i];\n    knex[method] = function () {\n      const builder = this.queryBuilder();\n      return builder[method].apply(builder, arguments);\n    };\n  }\n\n  Object.defineProperties(knex, KNEX_PROPERTY_DEFINITIONS);\n\n  initContext(knex);\n  knex.client = client;\n  knex.userParams = {};\n\n  // Hook up the \"knex\" object as an EventEmitter.\n  const ee = new EventEmitter();\n  for (const key in ee) {\n    knex[key] = ee[key];\n  }\n\n  // Unfortunately, something seems to be broken in Node 6 and removing events from a clone also mutates original Knex,\n  // which is highly undesirable\n  if (knex._internalListeners) {\n    knex._internalListeners.forEach(({ eventName, listener }) => {\n      knex.client.removeListener(eventName, listener); // Remove duplicates for copies\n    });\n  }\n  knex._internalListeners = [];\n\n  // Passthrough all \"start\" and \"query\" events to the knex object.\n  _addInternalListener(knex, 'start', (obj) => {\n    knex.emit('start', obj);\n  });\n  _addInternalListener(knex, 'query', (obj) => {\n    knex.emit('query', obj);\n  });\n  _addInternalListener(knex, 'query-error', (err, obj) => {\n    knex.emit('query-error', err, obj);\n  });\n  _addInternalListener(knex, 'query-response', (response, obj, builder) => {\n    knex.emit('query-response', response, obj, builder);\n  });\n}\n\nfunction _addInternalListener(knex, eventName, listener) {\n  knex.client.on(eventName, listener);\n  knex._internalListeners.push({\n    eventName,\n    listener,\n  });\n}\n\nfunction createQueryBuilder(knexContext, tableName, options) {\n  const qb = knexContext.queryBuilder();\n  if (!tableName)\n    knexContext.client.logger.warn(\n      'calling knex without a tableName is deprecated. Use knex.queryBuilder() instead.'\n    );\n  return tableName ? qb.table(tableName, options) : qb;\n}\n\nfunction shallowCloneFunction(originalFunction) {\n  const fnContext = Object.create(\n    Object.getPrototypeOf(originalFunction),\n    Object.getOwnPropertyDescriptors(originalFunction)\n  );\n\n  const knexContext = {};\n  const knexFnWrapper = (tableName, options) => {\n    return createQueryBuilder(knexContext, tableName, options);\n  };\n\n  const clonedFunction = knexFnWrapper.bind(fnContext);\n  Object.assign(clonedFunction, originalFunction);\n  clonedFunction.context = knexContext;\n  return clonedFunction;\n}\n\nmodule.exports = makeKnex;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2245, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/util/noop.js"],"sourcesContent":["module.exports = function () {};\n"],"names":[],"mappings":"AAAA,OAAO,OAAO,GAAG,YAAa","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2251, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/util/finally-mixin.js"],"sourcesContent":["const noop = require('./noop');\n\nconst finallyMixin = (prototype) =>\n  Object.assign(prototype, {\n    finally(onFinally) {\n      return this.then().finally(onFinally);\n    },\n  });\n\n// FYI: Support for `Promise.prototype.finally` was not introduced until Node 9.\n//      Therefore, Knex will need to conditionally inject support for `.finally(..)`\n//      until support for Node 8 is officially dropped.\nmodule.exports = Promise.prototype.finally ? finallyMixin : noop;\n"],"names":[],"mappings":"AAAA,MAAM;AAEN,MAAM,eAAe,CAAC,YACpB,OAAO,MAAM,CAAC,WAAW;QACvB,SAAQ,SAAS;YACf,OAAO,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QAC7B;IACF;AAEF,gFAAgF;AAChF,oFAAoF;AACpF,uDAAuD;AACvD,OAAO,OAAO,GAAG,QAAQ,SAAS,CAAC,OAAO,GAAG,eAAe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2266, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/execution/transaction.js"],"sourcesContent":["// Transaction\n// -------\nconst { EventEmitter } = require('events');\nconst Debug = require('debug');\nconst uniqueId = require('lodash/uniqueId');\nconst { callbackify } = require('util');\n\nconst makeKnex = require('../knex-builder/make-knex');\nconst { timeout, KnexTimeoutError } = require('../util/timeout');\nconst finallyMixin = require('../util/finally-mixin');\n\nconst debug = Debug('knex:tx');\n\n// FYI: This is defined as a function instead of a constant so that\n//      each Transactor can have its own copy of the default config.\n//      This will minimize the impact of bugs that might be introduced\n//      if a Transactor ever mutates its config.\nfunction DEFAULT_CONFIG() {\n  return {\n    userParams: {},\n    doNotRejectOnRollback: true,\n  };\n}\n// These aren't supported in sqlite3 which is serialized already so it's as\n// safe as reasonable, except for a special read_uncommitted pragma\nconst validIsolationLevels = [\n  // Doesn't really work in postgres, it treats it as read committed\n  'read uncommitted',\n  'read committed',\n  'snapshot',\n  // snapshot and repeatable read are basically the same, most \"repeatable\n  // read\" implementations are actually \"snapshot\" also known as Multi Version\n  // Concurrency Control (MVCC). Mssql's repeatable read doesn't stop\n  // repeated reads for inserts as it uses a pessimistic locking system so\n  // you should probably use 'snapshot' to stop read skew.\n  'repeatable read',\n  // mysql pretends to have serializable, but it is not\n  'serializable',\n];\n\n// Acts as a facade for a Promise, keeping the internal state\n// and managing any child transactions.\nclass Transaction extends EventEmitter {\n  constructor(client, container, config = DEFAULT_CONFIG(), outerTx = null) {\n    super();\n    this.userParams = config.userParams;\n    this.doNotRejectOnRollback = config.doNotRejectOnRollback;\n\n    const txid = (this.txid = uniqueId('trx'));\n\n    this.client = client;\n    this.logger = client.logger;\n    this.outerTx = outerTx;\n    this.trxClient = undefined;\n    this._completed = false;\n    this._debug = client.config && client.config.debug;\n\n    this.readOnly = config.readOnly;\n    if (config.isolationLevel) {\n      this.setIsolationLevel(config.isolationLevel);\n    }\n\n    debug(\n      '%s: Starting %s transaction',\n      txid,\n      outerTx ? 'nested' : 'top level'\n    );\n\n    // `this` can potentially serve as an `outerTx` for another\n    // Transaction.  So, go ahead and establish `_lastChild` now.\n    this._lastChild = Promise.resolve();\n\n    const _previousSibling = outerTx ? outerTx._lastChild : Promise.resolve();\n\n    // FYI: As you will see in a moment, this Promise will be used to construct\n    //      2 separate Promise Chains.  This ensures that each Promise Chain\n    //      can establish its error-handling semantics without interfering\n    //      with the other Promise Chain.\n    const basePromise = _previousSibling.then(() =>\n      this._evaluateContainer(config, container)\n    );\n\n    // FYI: This is the Promise Chain for EXTERNAL use.  It ensures that the\n    //      caller must handle any exceptions that result from `basePromise`.\n    this._promise = basePromise.then((x) => x);\n\n    if (outerTx) {\n      // FYI: This is the Promise Chain for INTERNAL use.  It serves as a signal\n      //      for when the next sibling should begin its execution.  Therefore,\n      //      exceptions are caught and ignored.\n      outerTx._lastChild = basePromise.catch(() => {});\n    }\n  }\n\n  isCompleted() {\n    return (\n      this._completed || (this.outerTx && this.outerTx.isCompleted()) || false\n    );\n  }\n\n  begin(conn) {\n    const trxMode = [\n      this.isolationLevel ? `ISOLATION LEVEL ${this.isolationLevel}` : '',\n      this.readOnly ? 'READ ONLY' : '',\n    ]\n      .join(' ')\n      .trim();\n\n    if (trxMode.length === 0) {\n      return this.query(conn, 'BEGIN;');\n    }\n\n    return this.query(conn, `SET TRANSACTION ${trxMode};`).then(() =>\n      this.query(conn, 'BEGIN;')\n    );\n  }\n\n  savepoint(conn) {\n    return this.query(conn, `SAVEPOINT ${this.txid};`);\n  }\n\n  commit(conn, value) {\n    return this.query(conn, 'COMMIT;', 1, value);\n  }\n\n  release(conn, value) {\n    return this.query(conn, `RELEASE SAVEPOINT ${this.txid};`, 1, value);\n  }\n\n  setIsolationLevel(isolationLevel) {\n    if (!validIsolationLevels.includes(isolationLevel)) {\n      throw new Error(\n        `Invalid isolationLevel, supported isolation levels are: ${JSON.stringify(\n          validIsolationLevels\n        )}`\n      );\n    }\n    this.isolationLevel = isolationLevel;\n    return this;\n  }\n\n  rollback(conn, error) {\n    return timeout(this.query(conn, 'ROLLBACK', 2, error), 5000).catch(\n      (err) => {\n        if (!(err instanceof KnexTimeoutError)) {\n          return Promise.reject(err);\n        }\n        this._rejecter(error);\n      }\n    );\n  }\n\n  rollbackTo(conn, error) {\n    return timeout(\n      this.query(conn, `ROLLBACK TO SAVEPOINT ${this.txid}`, 2, error),\n      5000\n    ).catch((err) => {\n      if (!(err instanceof KnexTimeoutError)) {\n        return Promise.reject(err);\n      }\n      this._rejecter(error);\n    });\n  }\n\n  query(conn, sql, status, value) {\n    const q = this.trxClient\n      .query(conn, sql)\n      .catch((err) => {\n        status = 2;\n        value = err;\n        this._completed = true;\n        debug('%s error running transaction query', this.txid);\n      })\n      .then((res) => {\n        if (status === 1) {\n          this._resolver(value);\n        }\n        if (status === 2) {\n          if (value === undefined) {\n            if (this.doNotRejectOnRollback && /^ROLLBACK\\b/i.test(sql)) {\n              this._resolver();\n              return;\n            }\n\n            value = new Error(`Transaction rejected with non-error: ${value}`);\n          }\n          this._rejecter(value);\n        }\n        return res;\n      });\n    if (status === 1 || status === 2) {\n      this._completed = true;\n    }\n    return q;\n  }\n\n  debug(enabled) {\n    this._debug = arguments.length ? enabled : true;\n    return this;\n  }\n\n  async _evaluateContainer(config, container) {\n    return this.acquireConnection(config, (connection) => {\n      const trxClient = (this.trxClient = makeTxClient(\n        this,\n        this.client,\n        connection\n      ));\n      const init = this.client.transacting\n        ? this.savepoint(connection)\n        : this.begin(connection);\n      const executionPromise = new Promise((resolver, rejecter) => {\n        this._resolver = resolver;\n        this._rejecter = rejecter;\n      });\n\n      init\n        .then(() => {\n          return makeTransactor(this, connection, trxClient);\n        })\n        .then((transactor) => {\n          this.transactor = transactor;\n          if (this.outerTx) {\n            transactor.parentTransaction = this.outerTx.transactor;\n          }\n          transactor.executionPromise = executionPromise;\n\n          // If we've returned a \"thenable\" from the transaction container, assume\n          // the rollback and commit are chained to this object's success / failure.\n          // Directly thrown errors are treated as automatic rollbacks.\n          let result;\n          try {\n            result = container(transactor);\n          } catch (err) {\n            result = Promise.reject(err);\n          }\n          if (result && result.then && typeof result.then === 'function') {\n            result\n              .then((val) => {\n                return transactor.commit(val);\n              })\n              .catch((err) => {\n                return transactor.rollback(err);\n              });\n          }\n          return null;\n        })\n        .catch((e) => {\n          return this._rejecter(e);\n        });\n\n      return executionPromise;\n    });\n  }\n\n  // Acquire a connection and create a disposer - either using the one passed\n  // via config or getting one off the client. The disposer will be called once\n  // the original promise is marked completed.\n  async acquireConnection(config, cb) {\n    const configConnection = config && config.connection;\n    const connection =\n      configConnection || (await this.client.acquireConnection());\n\n    try {\n      connection.__knexTxId = this.txid;\n      return await cb(connection);\n    } finally {\n      if (!configConnection) {\n        debug('%s: releasing connection', this.txid);\n        this.client.releaseConnection(connection);\n      } else {\n        debug('%s: not releasing external connection', this.txid);\n      }\n    }\n  }\n\n  then(onResolve, onReject) {\n    return this._promise.then(onResolve, onReject);\n  }\n\n  catch(...args) {\n    return this._promise.catch(...args);\n  }\n\n  asCallback(cb) {\n    callbackify(() => this._promise)(cb);\n    return this._promise;\n  }\n}\nfinallyMixin(Transaction.prototype);\n\n// The transactor is a full featured knex object, with a \"commit\", a \"rollback\"\n// and a \"savepoint\" function. The \"savepoint\" is just sugar for creating a new\n// transaction. If the rollback is run inside a savepoint, it rolls back to the\n// last savepoint - otherwise it rolls back the transaction.\nfunction makeTransactor(trx, connection, trxClient) {\n  const transactor = makeKnex(trxClient);\n\n  transactor.context.withUserParams = () => {\n    throw new Error(\n      'Cannot set user params on a transaction - it can only inherit params from main knex instance'\n    );\n  };\n\n  transactor.isTransaction = true;\n  transactor.userParams = trx.userParams || {};\n\n  transactor.context.transaction = function (container, options) {\n    if (!options) {\n      options = { doNotRejectOnRollback: true };\n    } else if (options.doNotRejectOnRollback === undefined) {\n      options.doNotRejectOnRollback = true;\n    }\n\n    return this._transaction(container, options, trx);\n  };\n\n  transactor.savepoint = function (container, options) {\n    return transactor.transaction(container, options);\n  };\n\n  if (trx.client.transacting) {\n    transactor.commit = (value) => trx.release(connection, value);\n    transactor.rollback = (error) => trx.rollbackTo(connection, error);\n  } else {\n    transactor.commit = (value) => trx.commit(connection, value);\n    transactor.rollback = (error) => trx.rollback(connection, error);\n  }\n\n  transactor.isCompleted = () => trx.isCompleted();\n\n  return transactor;\n}\n\n// We need to make a client object which always acquires the same\n// connection and does not release back into the pool.\nfunction makeTxClient(trx, client, connection) {\n  const trxClient = Object.create(client.constructor.prototype);\n  trxClient.version = client.version;\n  trxClient.config = client.config;\n  trxClient.driver = client.driver;\n  trxClient.connectionSettings = client.connectionSettings;\n  trxClient.transacting = true;\n  trxClient.valueForUndefined = client.valueForUndefined;\n  trxClient.logger = client.logger;\n\n  trxClient.on('start', function (arg) {\n    trx.emit('start', arg);\n    client.emit('start', arg);\n  });\n\n  trxClient.on('query', function (arg) {\n    trx.emit('query', arg);\n    client.emit('query', arg);\n  });\n\n  trxClient.on('query-error', function (err, obj) {\n    trx.emit('query-error', err, obj);\n    client.emit('query-error', err, obj);\n  });\n\n  trxClient.on('query-response', function (response, obj, builder) {\n    trx.emit('query-response', response, obj, builder);\n    client.emit('query-response', response, obj, builder);\n  });\n\n  const _query = trxClient.query;\n  trxClient.query = function (conn, obj) {\n    const completed = trx.isCompleted();\n    return new Promise(function (resolve, reject) {\n      try {\n        if (conn !== connection)\n          throw new Error('Invalid connection for transaction query.');\n        if (completed) completedError(trx, obj);\n        resolve(_query.call(trxClient, conn, obj));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  };\n  const _stream = trxClient.stream;\n  trxClient.stream = function (conn, obj, stream, options) {\n    const completed = trx.isCompleted();\n    return new Promise(function (resolve, reject) {\n      try {\n        if (conn !== connection)\n          throw new Error('Invalid connection for transaction query.');\n        if (completed) completedError(trx, obj);\n        resolve(_stream.call(trxClient, conn, obj, stream, options));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  };\n  trxClient.acquireConnection = function () {\n    return Promise.resolve(connection);\n  };\n  trxClient.releaseConnection = function () {\n    return Promise.resolve();\n  };\n\n  return trxClient;\n}\n\nfunction completedError(trx, obj) {\n  const sql = typeof obj === 'string' ? obj : obj && obj.sql;\n  debug('%s: Transaction completed: %s', trx.txid, sql);\n  throw new Error(\n    'Transaction query already complete, run with DEBUG=knex:tx for more info'\n  );\n}\n\nmodule.exports = Transaction;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2591, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/execution/internal/query-executioner.js"],"sourcesContent":["const _debugQuery = require('debug')('knex:query');\nconst debugBindings = require('debug')('knex:bindings');\nconst debugQuery = (sql, txId) => _debugQuery(sql.replace(/%/g, '%%'), txId);\nconst { isString } = require('../../util/is');\n\nfunction formatQuery(sql, bindings, timeZone, client) {\n  bindings = bindings == null ? [] : [].concat(bindings);\n  let index = 0;\n  return sql.replace(/\\\\?\\?/g, (match) => {\n    if (match === '\\\\?') {\n      return '?';\n    }\n    if (index === bindings.length) {\n      return match;\n    }\n    const value = bindings[index++];\n    return client._escapeBinding(value, { timeZone });\n  });\n}\n\nfunction enrichQueryObject(connection, queryParam, client) {\n  const queryObject = isString(queryParam) ? { sql: queryParam } : queryParam;\n\n  queryObject.bindings = client.prepBindings(queryObject.bindings);\n  queryObject.sql = client.positionBindings(queryObject.sql);\n\n  const { __knexUid, __knexTxId } = connection;\n\n  client.emit('query', Object.assign({ __knexUid, __knexTxId }, queryObject));\n  debugQuery(queryObject.sql, __knexTxId);\n  debugBindings(queryObject.bindings, __knexTxId);\n\n  return queryObject;\n}\n\nfunction executeQuery(connection, queryObject, client) {\n  return client._query(connection, queryObject).catch((err) => {\n    if (client.config && client.config.compileSqlOnError === false) {\n      err.message = queryObject.sql + ' - ' + err.message;\n    } else {\n      err.message =\n        formatQuery(queryObject.sql, queryObject.bindings, undefined, client) +\n        ' - ' +\n        err.message;\n    }\n    client.emit(\n      'query-error',\n      err,\n      Object.assign(\n        { __knexUid: connection.__knexUid, __knexTxId: connection.__knexUid },\n        queryObject\n      )\n    );\n    throw err;\n  });\n}\n\nmodule.exports = {\n  enrichQueryObject,\n  executeQuery,\n  formatQuery,\n};\n"],"names":[],"mappings":"AAAA,MAAM,cAAc,gHAAiB;AACrC,MAAM,gBAAgB,gHAAiB;AACvC,MAAM,aAAa,CAAC,KAAK,OAAS,YAAY,IAAI,OAAO,CAAC,MAAM,OAAO;AACvE,MAAM,EAAE,QAAQ,EAAE;AAElB,SAAS,YAAY,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM;IAClD,WAAW,YAAY,OAAO,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC;IAC7C,IAAI,QAAQ;IACZ,OAAO,IAAI,OAAO,CAAC,UAAU,CAAC;QAC5B,IAAI,UAAU,OAAO;YACnB,OAAO;QACT;QACA,IAAI,UAAU,SAAS,MAAM,EAAE;YAC7B,OAAO;QACT;QACA,MAAM,QAAQ,QAAQ,CAAC,QAAQ;QAC/B,OAAO,OAAO,cAAc,CAAC,OAAO;YAAE;QAAS;IACjD;AACF;AAEA,SAAS,kBAAkB,UAAU,EAAE,UAAU,EAAE,MAAM;IACvD,MAAM,cAAc,SAAS,cAAc;QAAE,KAAK;IAAW,IAAI;IAEjE,YAAY,QAAQ,GAAG,OAAO,YAAY,CAAC,YAAY,QAAQ;IAC/D,YAAY,GAAG,GAAG,OAAO,gBAAgB,CAAC,YAAY,GAAG;IAEzD,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,GAAG;IAElC,OAAO,IAAI,CAAC,SAAS,OAAO,MAAM,CAAC;QAAE;QAAW;IAAW,GAAG;IAC9D,WAAW,YAAY,GAAG,EAAE;IAC5B,cAAc,YAAY,QAAQ,EAAE;IAEpC,OAAO;AACT;AAEA,SAAS,aAAa,UAAU,EAAE,WAAW,EAAE,MAAM;IACnD,OAAO,OAAO,MAAM,CAAC,YAAY,aAAa,KAAK,CAAC,CAAC;QACnD,IAAI,OAAO,MAAM,IAAI,OAAO,MAAM,CAAC,iBAAiB,KAAK,OAAO;YAC9D,IAAI,OAAO,GAAG,YAAY,GAAG,GAAG,QAAQ,IAAI,OAAO;QACrD,OAAO;YACL,IAAI,OAAO,GACT,YAAY,YAAY,GAAG,EAAE,YAAY,QAAQ,EAAE,WAAW,UAC9D,QACA,IAAI,OAAO;QACf;QACA,OAAO,IAAI,CACT,eACA,KACA,OAAO,MAAM,CACX;YAAE,WAAW,WAAW,SAAS;YAAE,YAAY,WAAW,SAAS;QAAC,GACpE;QAGJ,MAAM;IACR;AACF;AAEA,OAAO,OAAO,GAAG;IACf;IACA;IACA;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2650, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/constants.js"],"sourcesContent":["// The client names we'll allow in the `{name: lib}` pairing.\nconst CLIENT_ALIASES = Object.freeze({\n  pg: 'postgres',\n  postgresql: 'postgres',\n  sqlite: 'sqlite3',\n});\n\nconst SUPPORTED_CLIENTS = Object.freeze(\n  [\n    'mssql',\n    'mysql',\n    'mysql2',\n    'oracledb',\n    'postgres',\n    'pgnative',\n    'redshift',\n    'sqlite3',\n    'cockroachdb',\n    'better-sqlite3',\n  ].concat(Object.keys(CLIENT_ALIASES))\n);\n\nconst DRIVER_NAMES = Object.freeze({\n  MsSQL: 'mssql',\n  MySQL: 'mysql',\n  MySQL2: 'mysql2',\n  Oracle: 'oracledb',\n  PostgreSQL: 'pg',\n  PgNative: 'pgnative',\n  Redshift: 'pg-redshift',\n  SQLite: 'sqlite3',\n  CockroachDB: 'cockroachdb',\n  BetterSQLite3: 'better-sqlite3',\n});\n\nconst POOL_CONFIG_OPTIONS = Object.freeze([\n  'maxWaitingClients',\n  'testOnBorrow',\n  'fifo',\n  'priorityRange',\n  'autostart',\n  'evictionRunIntervalMillis',\n  'numTestsPerRun',\n  'softIdleTimeoutMillis',\n  'Promise',\n]);\n\n/**\n * Regex that only matches comma's in strings that aren't wrapped in parentheses. Can be used to\n * safely split strings like `id int, name string, body text, primary key (id, name)` into definition\n * rows\n */\nconst COMMA_NO_PAREN_REGEX = /,[\\s](?![^(]*\\))/g;\n\nmodule.exports = {\n  CLIENT_ALIASES,\n  SUPPORTED_CLIENTS,\n  POOL_CONFIG_OPTIONS,\n  COMMA_NO_PAREN_REGEX,\n  DRIVER_NAMES,\n};\n"],"names":[],"mappings":"AAAA,6DAA6D;AAC7D,MAAM,iBAAiB,OAAO,MAAM,CAAC;IACnC,IAAI;IACJ,YAAY;IACZ,QAAQ;AACV;AAEA,MAAM,oBAAoB,OAAO,MAAM,CACrC;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD,CAAC,MAAM,CAAC,OAAO,IAAI,CAAC;AAGvB,MAAM,eAAe,OAAO,MAAM,CAAC;IACjC,OAAO;IACP,OAAO;IACP,QAAQ;IACR,QAAQ;IACR,YAAY;IACZ,UAAU;IACV,UAAU;IACV,QAAQ;IACR,aAAa;IACb,eAAe;AACjB;AAEA,MAAM,sBAAsB,OAAO,MAAM,CAAC;IACxC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED;;;;CAIC,GACD,MAAM,uBAAuB;AAE7B,OAAO,OAAO,GAAG;IACf;IACA;IACA;IACA;IACA;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2708, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/util/helpers.js"],"sourcesContent":["const isPlainObject = require('lodash/isPlainObject');\nconst isTypedArray = require('lodash/isTypedArray');\nconst { CLIENT_ALIASES } = require('../constants');\nconst { isFunction } = require('./is');\n\n// Check if the first argument is an array, otherwise uses all arguments as an\n// array.\nfunction normalizeArr(...args) {\n  if (Array.isArray(args[0])) {\n    return args[0];\n  }\n\n  return args;\n}\n\nfunction containsUndefined(mixed) {\n  let argContainsUndefined = false;\n\n  if (isTypedArray(mixed)) return false;\n\n  if (mixed && isFunction(mixed.toSQL)) {\n    //Any QueryBuilder or Raw will automatically be validated during compile.\n    return argContainsUndefined;\n  }\n\n  if (Array.isArray(mixed)) {\n    for (let i = 0; i < mixed.length; i++) {\n      if (argContainsUndefined) break;\n      argContainsUndefined = containsUndefined(mixed[i]);\n    }\n  } else if (isPlainObject(mixed)) {\n    Object.keys(mixed).forEach((key) => {\n      if (!argContainsUndefined) {\n        argContainsUndefined = containsUndefined(mixed[key]);\n      }\n    });\n  } else {\n    argContainsUndefined = mixed === undefined;\n  }\n\n  return argContainsUndefined;\n}\n\nfunction getUndefinedIndices(mixed) {\n  const indices = [];\n\n  if (Array.isArray(mixed)) {\n    mixed.forEach((item, index) => {\n      if (containsUndefined(item)) {\n        indices.push(index);\n      }\n    });\n  } else if (isPlainObject(mixed)) {\n    Object.keys(mixed).forEach((key) => {\n      if (containsUndefined(mixed[key])) {\n        indices.push(key);\n      }\n    });\n  } else {\n    indices.push(0);\n  }\n\n  return indices;\n}\n\nfunction addQueryContext(Target) {\n  // Stores or returns (if called with no arguments) context passed to\n  // wrapIdentifier and postProcessResponse hooks\n  Target.prototype.queryContext = function (context) {\n    if (context === undefined) {\n      return this._queryContext;\n    }\n    this._queryContext = context;\n    return this;\n  };\n}\n\nfunction resolveClientNameWithAliases(clientName) {\n  return CLIENT_ALIASES[clientName] || clientName;\n}\n\nfunction toNumber(val, fallback) {\n  if (val === undefined || val === null) return fallback;\n  const number = parseInt(val, 10);\n  return isNaN(number) ? fallback : number;\n}\n\nmodule.exports = {\n  addQueryContext,\n  containsUndefined,\n  getUndefinedIndices,\n  normalizeArr,\n  resolveClientNameWithAliases,\n  toNumber,\n};\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AACN,MAAM,EAAE,cAAc,EAAE;AACxB,MAAM,EAAE,UAAU,EAAE;AAEpB,8EAA8E;AAC9E,SAAS;AACT,SAAS,aAAa,GAAG,IAAI;IAC3B,IAAI,MAAM,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG;QAC1B,OAAO,IAAI,CAAC,EAAE;IAChB;IAEA,OAAO;AACT;AAEA,SAAS,kBAAkB,KAAK;IAC9B,IAAI,uBAAuB;IAE3B,IAAI,aAAa,QAAQ,OAAO;IAEhC,IAAI,SAAS,WAAW,MAAM,KAAK,GAAG;QACpC,yEAAyE;QACzE,OAAO;IACT;IAEA,IAAI,MAAM,OAAO,CAAC,QAAQ;QACxB,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;YACrC,IAAI,sBAAsB;YAC1B,uBAAuB,kBAAkB,KAAK,CAAC,EAAE;QACnD;IACF,OAAO,IAAI,cAAc,QAAQ;QAC/B,OAAO,IAAI,CAAC,OAAO,OAAO,CAAC,CAAC;YAC1B,IAAI,CAAC,sBAAsB;gBACzB,uBAAuB,kBAAkB,KAAK,CAAC,IAAI;YACrD;QACF;IACF,OAAO;QACL,uBAAuB,UAAU;IACnC;IAEA,OAAO;AACT;AAEA,SAAS,oBAAoB,KAAK;IAChC,MAAM,UAAU,EAAE;IAElB,IAAI,MAAM,OAAO,CAAC,QAAQ;QACxB,MAAM,OAAO,CAAC,CAAC,MAAM;YACnB,IAAI,kBAAkB,OAAO;gBAC3B,QAAQ,IAAI,CAAC;YACf;QACF;IACF,OAAO,IAAI,cAAc,QAAQ;QAC/B,OAAO,IAAI,CAAC,OAAO,OAAO,CAAC,CAAC;YAC1B,IAAI,kBAAkB,KAAK,CAAC,IAAI,GAAG;gBACjC,QAAQ,IAAI,CAAC;YACf;QACF;IACF,OAAO;QACL,QAAQ,IAAI,CAAC;IACf;IAEA,OAAO;AACT;AAEA,SAAS,gBAAgB,MAAM;IAC7B,oEAAoE;IACpE,+CAA+C;IAC/C,OAAO,SAAS,CAAC,YAAY,GAAG,SAAU,OAAO;QAC/C,IAAI,YAAY,WAAW;YACzB,OAAO,IAAI,CAAC,aAAa;QAC3B;QACA,IAAI,CAAC,aAAa,GAAG;QACrB,OAAO,IAAI;IACb;AACF;AAEA,SAAS,6BAA6B,UAAU;IAC9C,OAAO,cAAc,CAAC,WAAW,IAAI;AACvC;AAEA,SAAS,SAAS,GAAG,EAAE,QAAQ;IAC7B,IAAI,QAAQ,aAAa,QAAQ,MAAM,OAAO;IAC9C,MAAM,SAAS,SAAS,KAAK;IAC7B,OAAO,MAAM,UAAU,WAAW;AACpC;AAEA,OAAO,OAAO,GAAG;IACf;IACA;IACA;IACA;IACA;IACA;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2794, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/query/joinclause.js"],"sourcesContent":["const assert = require('assert');\n\n// JoinClause\n// -------\n\nfunction getClauseFromArguments(compilerType, bool, first, operator, second) {\n  if (typeof first === 'function') {\n    return {\n      type: 'onWrapped',\n      value: first,\n      bool: bool,\n    };\n  }\n\n  switch (arguments.length) {\n    case 3:\n      return { type: 'onRaw', value: first, bool };\n    case 4:\n      return {\n        type: compilerType,\n        column: first,\n        operator: '=',\n        value: operator,\n        bool,\n      };\n    default:\n      return {\n        type: compilerType,\n        column: first,\n        operator,\n        value: second,\n        bool,\n      };\n  }\n}\n\n// The \"JoinClause\" is an object holding any necessary info about a join,\n// including the type, and any associated tables & columns being joined.\nclass JoinClause {\n  constructor(table, type, schema) {\n    this.schema = schema;\n    this.table = table;\n    this.joinType = type;\n    this.and = this;\n    this.clauses = [];\n  }\n\n  get or() {\n    return this._bool('or');\n  }\n\n  // Adds an \"on\" clause to the current join object.\n  on(first) {\n    if (typeof first === 'object' && typeof first.toSQL !== 'function') {\n      const keys = Object.keys(first);\n      let i = -1;\n      const method = this._bool() === 'or' ? 'orOn' : 'on';\n      while (++i < keys.length) {\n        this[method](keys[i], first[keys[i]]);\n      }\n      return this;\n    }\n\n    const data = getClauseFromArguments('onBasic', this._bool(), ...arguments);\n\n    if (data) {\n      this.clauses.push(data);\n    }\n\n    return this;\n  }\n\n  // Adds an \"or on\" clause to the current join object.\n  orOn(first, operator, second) {\n    return this._bool('or').on.apply(this, arguments);\n  }\n\n  onJsonPathEquals(columnFirst, jsonPathFirst, columnSecond, jsonPathSecond) {\n    this.clauses.push({\n      type: 'onJsonPathEquals',\n      columnFirst: columnFirst,\n      jsonPathFirst: jsonPathFirst,\n      columnSecond: columnSecond,\n      jsonPathSecond: jsonPathSecond,\n      bool: this._bool(),\n      not: this._not(),\n    });\n    return this;\n  }\n\n  orOnJsonPathEquals(columnFirst, jsonPathFirst, columnSecond, jsonPathSecond) {\n    return this._bool('or').onJsonPathEquals.apply(this, arguments);\n  }\n\n  // Adds a \"using\" clause to the current join.\n  using(column) {\n    return this.clauses.push({ type: 'onUsing', column, bool: this._bool() });\n  }\n\n  onVal(first) {\n    if (typeof first === 'object' && typeof first.toSQL !== 'function') {\n      const keys = Object.keys(first);\n      let i = -1;\n      const method = this._bool() === 'or' ? 'orOnVal' : 'onVal';\n      while (++i < keys.length) {\n        this[method](keys[i], first[keys[i]]);\n      }\n      return this;\n    }\n\n    const data = getClauseFromArguments('onVal', this._bool(), ...arguments);\n\n    if (data) {\n      this.clauses.push(data);\n    }\n\n    return this;\n  }\n\n  andOnVal() {\n    return this.onVal(...arguments);\n  }\n\n  orOnVal() {\n    return this._bool('or').onVal(...arguments);\n  }\n\n  onBetween(column, values) {\n    assert(\n      Array.isArray(values),\n      'The second argument to onBetween must be an array.'\n    );\n    assert(\n      values.length === 2,\n      'You must specify 2 values for the onBetween clause'\n    );\n    this.clauses.push({\n      type: 'onBetween',\n      column,\n      value: values,\n      bool: this._bool(),\n      not: this._not(),\n    });\n    return this;\n  }\n\n  onNotBetween(column, values) {\n    return this._not(true).onBetween(column, values);\n  }\n\n  orOnBetween(column, values) {\n    return this._bool('or').onBetween(column, values);\n  }\n\n  orOnNotBetween(column, values) {\n    return this._bool('or')._not(true).onBetween(column, values);\n  }\n\n  onIn(column, values) {\n    if (Array.isArray(values) && values.length === 0) return this.on(1, '=', 0);\n    this.clauses.push({\n      type: 'onIn',\n      column,\n      value: values,\n      not: this._not(),\n      bool: this._bool(),\n    });\n    return this;\n  }\n\n  onNotIn(column, values) {\n    return this._not(true).onIn(column, values);\n  }\n\n  orOnIn(column, values) {\n    return this._bool('or').onIn(column, values);\n  }\n\n  orOnNotIn(column, values) {\n    return this._bool('or')._not(true).onIn(column, values);\n  }\n\n  onNull(column) {\n    this.clauses.push({\n      type: 'onNull',\n      column,\n      not: this._not(),\n      bool: this._bool(),\n    });\n    return this;\n  }\n\n  orOnNull(callback) {\n    return this._bool('or').onNull(callback);\n  }\n\n  onNotNull(callback) {\n    return this._not(true).onNull(callback);\n  }\n\n  orOnNotNull(callback) {\n    return this._not(true)._bool('or').onNull(callback);\n  }\n\n  onExists(callback) {\n    this.clauses.push({\n      type: 'onExists',\n      value: callback,\n      not: this._not(),\n      bool: this._bool(),\n    });\n    return this;\n  }\n\n  orOnExists(callback) {\n    return this._bool('or').onExists(callback);\n  }\n\n  onNotExists(callback) {\n    return this._not(true).onExists(callback);\n  }\n\n  orOnNotExists(callback) {\n    return this._not(true)._bool('or').onExists(callback);\n  }\n\n  // Explicitly set the type of join, useful within a function when creating a grouped join.\n  type(type) {\n    this.joinType = type;\n    return this;\n  }\n\n  _bool(bool) {\n    if (arguments.length === 1) {\n      this._boolFlag = bool;\n      return this;\n    }\n    const ret = this._boolFlag || 'and';\n    this._boolFlag = 'and';\n    return ret;\n  }\n\n  _not(val) {\n    if (arguments.length === 1) {\n      this._notFlag = val;\n      return this;\n    }\n    const ret = this._notFlag;\n    this._notFlag = false;\n    return ret;\n  }\n}\n\nObject.assign(JoinClause.prototype, {\n  grouping: 'join',\n});\n\nJoinClause.prototype.andOn = JoinClause.prototype.on;\nJoinClause.prototype.andOnIn = JoinClause.prototype.onIn;\nJoinClause.prototype.andOnNotIn = JoinClause.prototype.onNotIn;\nJoinClause.prototype.andOnNull = JoinClause.prototype.onNull;\nJoinClause.prototype.andOnNotNull = JoinClause.prototype.onNotNull;\nJoinClause.prototype.andOnExists = JoinClause.prototype.onExists;\nJoinClause.prototype.andOnNotExists = JoinClause.prototype.onNotExists;\nJoinClause.prototype.andOnBetween = JoinClause.prototype.onBetween;\nJoinClause.prototype.andOnNotBetween = JoinClause.prototype.onNotBetween;\nJoinClause.prototype.andOnJsonPathEquals =\n  JoinClause.prototype.onJsonPathEquals;\n\nmodule.exports = JoinClause;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3029, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/query/analytic.js"],"sourcesContent":["const assert = require('assert');\n\n// Analytic\n// -------\n\n// The \"Analytic\" is an object holding any necessary info about a analytic function\n// e.g row_number, rank, dense_rank,\nclass Analytic {\n  constructor(method, schema, alias, orderBy, partitions) {\n    this.schema = schema;\n    this.type = 'analytic';\n    this.method = method;\n    this.order = orderBy || [];\n    this.partitions = partitions || [];\n    this.alias = alias;\n    this.and = this;\n\n    this.grouping = 'columns';\n  }\n\n  partitionBy(column, direction) {\n    assert(\n      Array.isArray(column) || typeof column === 'string',\n      `The argument to an analytic partitionBy function must be either a string\n            or an array of string.`\n    );\n\n    if (Array.isArray(column)) {\n      this.partitions = this.partitions.concat(column);\n    } else {\n      this.partitions.push({ column: column, order: direction });\n    }\n    return this;\n  }\n\n  orderBy(column, direction) {\n    assert(\n      Array.isArray(column) || typeof column === 'string',\n      `The argument to an analytic orderBy function must be either a string\n            or an array of string.`\n    );\n\n    if (Array.isArray(column)) {\n      this.order = this.order.concat(column);\n    } else {\n      this.order.push({ column: column, order: direction });\n    }\n    return this;\n  }\n}\n\nmodule.exports = Analytic;\n"],"names":[],"mappings":"AAAA,MAAM;AAEN,WAAW;AACX,UAAU;AAEV,mFAAmF;AACnF,oCAAoC;AACpC,MAAM;IACJ,YAAY,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,UAAU,CAAE;QACtD,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,KAAK,GAAG,WAAW,EAAE;QAC1B,IAAI,CAAC,UAAU,GAAG,cAAc,EAAE;QAClC,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,GAAG,GAAG,IAAI;QAEf,IAAI,CAAC,QAAQ,GAAG;IAClB;IAEA,YAAY,MAAM,EAAE,SAAS,EAAE;QAC7B,OACE,MAAM,OAAO,CAAC,WAAW,OAAO,WAAW,UAC3C,CAAC;kCAC2B,CAAC;QAG/B,IAAI,MAAM,OAAO,CAAC,SAAS;YACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;QAC3C,OAAO;YACL,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;gBAAE,QAAQ;gBAAQ,OAAO;YAAU;QAC1D;QACA,OAAO,IAAI;IACb;IAEA,QAAQ,MAAM,EAAE,SAAS,EAAE;QACzB,OACE,MAAM,OAAO,CAAC,WAAW,OAAO,WAAW,UAC3C,CAAC;kCAC2B,CAAC;QAG/B,IAAI,MAAM,OAAO,CAAC,SAAS;YACzB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QACjC,OAAO;YACL,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;gBAAE,QAAQ;gBAAQ,OAAO;YAAU;QACrD;QACA,OAAO,IAAI;IACb;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3078, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/util/save-async-stack.js"],"sourcesContent":["module.exports = function saveAsyncStack(instance, lines) {\n  if (instance.client.config.asyncStackTraces) {\n    // a hack to get a callstack into the client code despite this\n    // node.js bug https://github.com/nodejs/node/issues/11865\n\n    // Save error here but not error trace\n    // reading trace with '--enable-source-maps' flag on node can be very costly\n\n    instance._asyncStack = {\n      error: new Error(),\n      lines,\n    };\n  }\n};\n"],"names":[],"mappings":"AAAA,OAAO,OAAO,GAAG,SAAS,eAAe,QAAQ,EAAE,KAAK;IACtD,IAAI,SAAS,MAAM,CAAC,MAAM,CAAC,gBAAgB,EAAE;QAC3C,8DAA8D;QAC9D,0DAA0D;QAE1D,sCAAsC;QACtC,4EAA4E;QAE5E,SAAS,WAAW,GAAG;YACrB,OAAO,IAAI;YACX;QACF;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3095, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/query/constants.js"],"sourcesContent":["/**\n * internal constants, do not use in application code\n */\nmodule.exports = {\n  lockMode: {\n    forShare: 'forShare',\n    forUpdate: 'forUpdate',\n    forNoKeyUpdate: 'forNoKeyUpdate',\n    forKeyShare: 'forKeyShare',\n  },\n  waitMode: {\n    skipLocked: 'skipLocked',\n    noWait: 'noWait',\n  },\n};\n"],"names":[],"mappings":"AAAA;;CAEC,GACD,OAAO,OAAO,GAAG;IACf,UAAU;QACR,UAAU;QACV,WAAW;QACX,gBAAgB;QAChB,aAAa;IACf;IACA,UAAU;QACR,YAAY;QACZ,QAAQ;IACV;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3114, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/builder-interface-augmenter.js"],"sourcesContent":["const clone = require('lodash/clone');\nconst isEmpty = require('lodash/isEmpty');\nconst { callbackify } = require('util');\nconst finallyMixin = require('./util/finally-mixin');\nconst { formatQuery } = require('./execution/internal/query-executioner');\n\nfunction augmentWithBuilderInterface(Target) {\n  Target.prototype.toQuery = function (tz) {\n    let data = this.toSQL(this._method, tz);\n    if (!Array.isArray(data)) data = [data];\n    if (!data.length) {\n      return '';\n    }\n\n    return data\n      .map((statement) => {\n        return formatQuery(statement.sql, statement.bindings, tz, this.client);\n      })\n      .reduce((a, c) => a.concat(a.endsWith(';') ? '\\n' : ';\\n', c));\n  };\n\n  // Create a new instance of the `Runner`, passing in the current object.\n  Target.prototype.then = function (/* onFulfilled, onRejected */) {\n    let result = this.client.runner(this).run();\n\n    if (this.client.config.asyncStackTraces) {\n      result = result.catch((err) => {\n        err.originalStack = err.stack;\n        const firstLine = err.stack.split('\\n')[0];\n\n        // a hack to get a callstack into the client code despite this\n        // node.js bug https://github.com/nodejs/node/issues/11865\n        // see lib/util/save-async-stack.js for more details\n        const { error, lines } = this._asyncStack;\n        const stackByLines = error.stack.split('\\n');\n        const asyncStack = stackByLines.slice(lines);\n        asyncStack.unshift(firstLine);\n\n        // put the fake more helpful \"async\" stack on the thrown error\n        err.stack = asyncStack.join('\\n');\n        throw err;\n      });\n    }\n\n    return result.then.apply(result, arguments);\n  };\n\n  // Add additional \"options\" to the builder. Typically used for client specific\n  // items, like the `mysql` and `sqlite3` drivers.\n  Target.prototype.options = function (opts) {\n    this._options = this._options || [];\n    this._options.push(clone(opts) || {});\n    return this;\n  };\n\n  // Sets an explicit \"connection\" we wish to use for this query.\n  Target.prototype.connection = function (connection) {\n    this._connection = connection;\n    this.client.processPassedConnection(connection);\n    return this;\n  };\n\n  // Set a debug flag for the current schema query stack.\n  Target.prototype.debug = function (enabled) {\n    this._debug = arguments.length ? enabled : true;\n    return this;\n  };\n\n  // Set the transaction object for this query.\n  Target.prototype.transacting = function (transaction) {\n    if (transaction && transaction.client) {\n      if (!transaction.client.transacting) {\n        transaction.client.logger.warn(\n          `Invalid transaction value: ${transaction.client}`\n        );\n      } else {\n        this.client = transaction.client;\n      }\n    }\n    if (isEmpty(transaction)) {\n      this.client.logger.error(\n        'Invalid value on transacting call, potential bug'\n      );\n      throw Error(\n        'Invalid transacting value (null, undefined or empty object)'\n      );\n    }\n    return this;\n  };\n\n  // Initializes a stream.\n  Target.prototype.stream = function (options) {\n    return this.client.runner(this).stream(options);\n  };\n\n  // Initialize a stream & pipe automatically.\n  Target.prototype.pipe = function (writable, options) {\n    return this.client.runner(this).pipe(writable, options);\n  };\n\n  Target.prototype.asCallback = function (cb) {\n    const promise = this.then();\n    callbackify(() => promise)(cb);\n    return promise;\n  };\n\n  Target.prototype.catch = function (onReject) {\n    return this.then().catch(onReject);\n  };\n\n  Object.defineProperty(Target.prototype, Symbol.toStringTag, {\n    get: () => 'object',\n  });\n\n  finallyMixin(Target.prototype);\n}\n\nmodule.exports = {\n  augmentWithBuilderInterface,\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3215, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/query/querybuilder.js"],"sourcesContent":["// Builder\n// -------\nconst assert = require('assert');\nconst { EventEmitter } = require('events');\nconst assign = require('lodash/assign');\nconst clone = require('lodash/clone');\nconst each = require('lodash/each');\nconst isEmpty = require('lodash/isEmpty');\nconst isPlainObject = require('lodash/isPlainObject');\nconst last = require('lodash/last');\nconst reject = require('lodash/reject');\nconst tail = require('lodash/tail');\nconst toArray = require('lodash/toArray');\n\nconst { addQueryContext, normalizeArr } = require('../util/helpers');\nconst JoinClause = require('./joinclause');\nconst Analytic = require('./analytic');\nconst saveAsyncStack = require('../util/save-async-stack');\nconst {\n  isBoolean,\n  isNumber,\n  isObject,\n  isString,\n  isFunction,\n} = require('../util/is');\n\nconst { lockMode, waitMode } = require('./constants');\nconst {\n  augmentWithBuilderInterface,\n} = require('../builder-interface-augmenter');\n\nconst SELECT_COMMANDS = new Set(['pluck', 'first', 'select']);\nconst CLEARABLE_STATEMENTS = new Set([\n  'with',\n  'select',\n  'columns',\n  'hintComments',\n  'where',\n  'union',\n  'join',\n  'group',\n  'order',\n  'having',\n  'limit',\n  'offset',\n  'counter',\n  'counters',\n]);\nconst LOCK_MODES = new Set([\n  lockMode.forShare,\n  lockMode.forUpdate,\n  lockMode.forNoKeyUpdate,\n  lockMode.forKeyShare,\n]);\n\n// Typically called from `knex.builder`,\n// start a new query building chain.\nclass Builder extends EventEmitter {\n  constructor(client) {\n    super();\n    this.client = client;\n    this.and = this;\n    this._single = {};\n    this._comments = [];\n    this._statements = [];\n    this._method = 'select';\n    if (client.config) {\n      saveAsyncStack(this, 5);\n      this._debug = client.config.debug;\n    }\n    // Internal flags used in the builder.\n    this._joinFlag = 'inner';\n    this._boolFlag = 'and';\n    this._notFlag = false;\n    this._asColumnFlag = false;\n  }\n\n  toString() {\n    return this.toQuery();\n  }\n\n  // Convert the current query \"toSQL\"\n  toSQL(method, tz) {\n    return this.client.queryCompiler(this).toSQL(method || this._method, tz);\n  }\n\n  // Create a shallow clone of the current query builder.\n  clone() {\n    const cloned = new this.constructor(this.client);\n    cloned._method = this._method;\n    cloned._single = clone(this._single);\n    cloned._comments = clone(this._comments);\n    cloned._statements = clone(this._statements);\n    cloned._debug = this._debug;\n\n    // `_option` is assigned by the `Interface` mixin.\n    if (this._options !== undefined) {\n      cloned._options = clone(this._options);\n    }\n    if (this._queryContext !== undefined) {\n      cloned._queryContext = clone(this._queryContext);\n    }\n    if (this._connection !== undefined) {\n      cloned._connection = this._connection;\n    }\n\n    return cloned;\n  }\n\n  timeout(ms, { cancel } = {}) {\n    if (isNumber(ms) && ms > 0) {\n      this._timeout = ms;\n      if (cancel) {\n        this.client.assertCanCancelQuery();\n        this._cancelOnTimeout = true;\n      }\n    }\n    return this;\n  }\n\n  // With\n  // ------\n  isValidStatementArg(statement) {\n    return (\n      typeof statement === 'function' ||\n      statement instanceof Builder ||\n      (statement && statement.isRawInstance)\n    );\n  }\n\n  _validateWithArgs(alias, statementOrColumnList, nothingOrStatement, method) {\n    const [query, columnList] =\n      typeof nothingOrStatement === 'undefined'\n        ? [statementOrColumnList, undefined]\n        : [nothingOrStatement, statementOrColumnList];\n    if (typeof alias !== 'string') {\n      throw new Error(`${method}() first argument must be a string`);\n    }\n\n    if (this.isValidStatementArg(query) && typeof columnList === 'undefined') {\n      // Validated as two-arg variant (alias, statement).\n      return;\n    }\n\n    // Attempt to interpret as three-arg variant (alias, columnList, statement).\n    const isNonEmptyNameList =\n      Array.isArray(columnList) &&\n      columnList.length > 0 &&\n      columnList.every((it) => typeof it === 'string');\n    if (!isNonEmptyNameList) {\n      throw new Error(\n        `${method}() second argument must be a statement or non-empty column name list.`\n      );\n    }\n\n    if (this.isValidStatementArg(query)) {\n      return;\n    }\n    throw new Error(\n      `${method}() third argument must be a function / QueryBuilder or a raw when its second argument is a column name list`\n    );\n  }\n\n  with(alias, statementOrColumnList, nothingOrStatement) {\n    this._validateWithArgs(\n      alias,\n      statementOrColumnList,\n      nothingOrStatement,\n      'with'\n    );\n    return this.withWrapped(alias, statementOrColumnList, nothingOrStatement);\n  }\n\n  withMaterialized(alias, statementOrColumnList, nothingOrStatement) {\n    throw new Error('With materialized is not supported by this dialect');\n  }\n\n  withNotMaterialized(alias, statementOrColumnList, nothingOrStatement) {\n    throw new Error('With materialized is not supported by this dialect');\n  }\n\n  // Helper for compiling any advanced `with` queries.\n  withWrapped(alias, statementOrColumnList, nothingOrStatement, materialized) {\n    const [query, columnList] =\n      typeof nothingOrStatement === 'undefined'\n        ? [statementOrColumnList, undefined]\n        : [nothingOrStatement, statementOrColumnList];\n    const statement = {\n      grouping: 'with',\n      type: 'withWrapped',\n      alias: alias,\n      columnList,\n      value: query,\n    };\n    if (materialized !== undefined) {\n      statement.materialized = materialized;\n    }\n    this._statements.push(statement);\n    return this;\n  }\n\n  // With Recursive\n  // ------\n\n  withRecursive(alias, statementOrColumnList, nothingOrStatement) {\n    this._validateWithArgs(\n      alias,\n      statementOrColumnList,\n      nothingOrStatement,\n      'withRecursive'\n    );\n    return this.withRecursiveWrapped(\n      alias,\n      statementOrColumnList,\n      nothingOrStatement\n    );\n  }\n\n  // Helper for compiling any advanced `withRecursive` queries.\n  withRecursiveWrapped(alias, statementOrColumnList, nothingOrStatement) {\n    this.withWrapped(alias, statementOrColumnList, nothingOrStatement);\n    this._statements[this._statements.length - 1].recursive = true;\n    return this;\n  }\n\n  // Select\n  // ------\n\n  // Adds a column or columns to the list of \"columns\"\n  // being selected on the query.\n  columns(column) {\n    if (!column && column !== 0) return this;\n    this._statements.push({\n      grouping: 'columns',\n      value: normalizeArr(...arguments),\n    });\n    return this;\n  }\n\n  // Adds a comment to the query\n  comment(txt) {\n    if (!isString(txt)) {\n      throw new Error('Comment must be a string');\n    }\n    const forbiddenChars = ['/*', '*/', '?'];\n    if (forbiddenChars.some((chars) => txt.includes(chars))) {\n      throw new Error(`Cannot include ${forbiddenChars.join(', ')} in comment`);\n    }\n    this._comments.push({\n      comment: txt,\n    });\n    return this;\n  }\n\n  // Allow for a sub-select to be explicitly aliased as a column,\n  // without needing to compile the query in a where.\n  as(column) {\n    this._single.as = column;\n    return this;\n  }\n\n  // Adds a single hint or an array of hits to the list of \"hintComments\" on the query.\n  hintComment(hints) {\n    hints = Array.isArray(hints) ? hints : [hints];\n    if (hints.some((hint) => !isString(hint))) {\n      throw new Error('Hint comment must be a string');\n    }\n    if (hints.some((hint) => hint.includes('/*') || hint.includes('*/'))) {\n      throw new Error('Hint comment cannot include \"/*\" or \"*/\"');\n    }\n    if (hints.some((hint) => hint.includes('?'))) {\n      throw new Error('Hint comment cannot include \"?\"');\n    }\n    this._statements.push({\n      grouping: 'hintComments',\n      value: hints,\n    });\n    return this;\n  }\n\n  // Prepends the `schemaName` on `tableName` defined by `.table` and `.join`.\n  withSchema(schemaName) {\n    this._single.schema = schemaName;\n    return this;\n  }\n\n  // Sets the `tableName` on the query.\n  // Alias to \"from\" for select and \"into\" for insert statements\n  // e.g. builder.insert({a: value}).into('tableName')\n  // `options`: options object containing keys:\n  //   - `only`: whether the query should use SQL's ONLY to not return\n  //           inheriting table data. Defaults to false.\n  table(tableName, options = {}) {\n    this._single.table = tableName;\n    this._single.only = options.only === true;\n    return this;\n  }\n\n  // Adds a `distinct` clause to the query.\n  distinct(...args) {\n    this._statements.push({\n      grouping: 'columns',\n      value: normalizeArr(...args),\n      distinct: true,\n    });\n    return this;\n  }\n\n  distinctOn(...args) {\n    if (isEmpty(args)) {\n      throw new Error('distinctOn requires at least on argument');\n    }\n    this._statements.push({\n      grouping: 'columns',\n      value: normalizeArr(...args),\n      distinctOn: true,\n    });\n    return this;\n  }\n\n  // Adds a join clause to the query, allowing for advanced joins\n  // with an anonymous function as the second argument.\n  join(table, first, ...args) {\n    let join;\n    const schema =\n      table instanceof Builder || typeof table === 'function'\n        ? undefined\n        : this._single.schema;\n    const joinType = this._joinType();\n    if (typeof first === 'function') {\n      join = new JoinClause(table, joinType, schema);\n      first.call(join, join);\n    } else if (joinType === 'raw') {\n      join = new JoinClause(this.client.raw(table, first), 'raw');\n    } else {\n      join = new JoinClause(table, joinType, schema);\n      if (first) {\n        join.on(first, ...args);\n      }\n    }\n    this._statements.push(join);\n    return this;\n  }\n\n  using(tables) {\n    throw new Error(\n      \"'using' function is only available in PostgreSQL dialect with Delete statements.\"\n    );\n  }\n\n  // JOIN blocks:\n  innerJoin(...args) {\n    return this._joinType('inner').join(...args);\n  }\n\n  leftJoin(...args) {\n    return this._joinType('left').join(...args);\n  }\n\n  leftOuterJoin(...args) {\n    return this._joinType('left outer').join(...args);\n  }\n\n  rightJoin(...args) {\n    return this._joinType('right').join(...args);\n  }\n\n  rightOuterJoin(...args) {\n    return this._joinType('right outer').join(...args);\n  }\n\n  outerJoin(...args) {\n    return this._joinType('outer').join(...args);\n  }\n\n  fullOuterJoin(...args) {\n    return this._joinType('full outer').join(...args);\n  }\n\n  crossJoin(...args) {\n    return this._joinType('cross').join(...args);\n  }\n\n  joinRaw(...args) {\n    return this._joinType('raw').join(...args);\n  }\n\n  // Where modifiers:\n  get or() {\n    return this._bool('or');\n  }\n\n  get not() {\n    return this._not(true);\n  }\n\n  // The where function can be used in several ways:\n  // The most basic is `where(key, value)`, which expands to\n  // where key = value.\n  where(column, operator, value) {\n    const argsLength = arguments.length;\n\n    // Support \"where true || where false\"\n    if (column === false || column === true) {\n      return this.where(1, '=', column ? 1 : 0);\n    }\n\n    // Check if the column is a function, in which case it's\n    // a where statement wrapped in parens.\n    if (typeof column === 'function') {\n      return this.whereWrapped(column);\n    }\n\n    // Allows `where({id: 2})` syntax.\n    if (isObject(column) && !column.isRawInstance)\n      return this._objectWhere(column);\n\n    // Allow a raw statement to be passed along to the query.\n    if (column && column.isRawInstance && argsLength === 1)\n      return this.whereRaw(column);\n\n    // Enable the where('key', value) syntax, only when there\n    // are explicitly two arguments passed, so it's not possible to\n    // do where('key', '!=') and have that turn into where key != null\n    if (argsLength === 2) {\n      value = operator;\n      operator = '=';\n\n      // If the value is null, and it's a two argument query,\n      // we assume we're going for a `whereNull`.\n      if (value === null) {\n        return this.whereNull(column);\n      }\n    }\n\n    // lower case the operator for comparison purposes\n    const checkOperator = `${operator}`.toLowerCase().trim();\n\n    // If there are 3 arguments, check whether 'in' is one of them.\n    if (argsLength === 3) {\n      if (checkOperator === 'in' || checkOperator === 'not in') {\n        return this._not(checkOperator === 'not in').whereIn(column, value);\n      }\n      if (checkOperator === 'between' || checkOperator === 'not between') {\n        return this._not(checkOperator === 'not between').whereBetween(\n          column,\n          value\n        );\n      }\n    }\n\n    // If the value is still null, check whether they're meaning\n    // where value is null\n    if (value === null) {\n      // Check for .where(key, 'is', null) or .where(key, 'is not', 'null');\n      if (checkOperator === 'is' || checkOperator === 'is not') {\n        return this._not(checkOperator === 'is not').whereNull(column);\n      }\n    }\n\n    // Push onto the where statement stack.\n    this._statements.push({\n      grouping: 'where',\n      type: 'whereBasic',\n      column,\n      operator,\n      value,\n      not: this._not(),\n      bool: this._bool(),\n      asColumn: this._asColumnFlag,\n    });\n    return this;\n  }\n\n  whereColumn(...args) {\n    this._asColumnFlag = true;\n    this.where(...args);\n    this._asColumnFlag = false;\n    return this;\n  }\n\n  // Adds an `or where` clause to the query.\n  orWhere(column, ...args) {\n    this._bool('or');\n    const obj = column;\n    if (isObject(obj) && !obj.isRawInstance) {\n      return this.whereWrapped(function () {\n        for (const key in obj) {\n          this.andWhere(key, obj[key]);\n        }\n      });\n    }\n    return this.where(column, ...args);\n  }\n\n  orWhereColumn(column, ...args) {\n    this._bool('or');\n    const obj = column;\n    if (isObject(obj) && !obj.isRawInstance) {\n      return this.whereWrapped(function () {\n        for (const key in obj) {\n          this.andWhereColumn(key, '=', obj[key]);\n        }\n      });\n    }\n    return this.whereColumn(column, ...args);\n  }\n\n  // Adds an `not where` clause to the query.\n  whereNot(column, ...args) {\n    if (args.length >= 2) {\n      if (args[0] === 'in' || args[0] === 'between') {\n        this.client.logger.warn(\n          'whereNot is not suitable for \"in\" and \"between\" type subqueries. You should use \"not in\" and \"not between\" instead.'\n        );\n      }\n    }\n    return this._not(true).where(column, ...args);\n  }\n\n  whereNotColumn(...args) {\n    return this._not(true).whereColumn(...args);\n  }\n\n  // Adds an `or not where` clause to the query.\n  orWhereNot(...args) {\n    return this._bool('or').whereNot(...args);\n  }\n\n  orWhereNotColumn(...args) {\n    return this._bool('or').whereNotColumn(...args);\n  }\n\n  // Processes an object literal provided in a \"where\" clause.\n  _objectWhere(obj) {\n    const boolVal = this._bool();\n    const notVal = this._not() ? 'Not' : '';\n    for (const key in obj) {\n      this[boolVal + 'Where' + notVal](key, obj[key]);\n    }\n    return this;\n  }\n\n  // Adds a raw `where` clause to the query.\n  whereRaw(sql, bindings) {\n    const raw = sql.isRawInstance ? sql : this.client.raw(sql, bindings);\n\n    this._statements.push({\n      grouping: 'where',\n      type: 'whereRaw',\n      value: raw,\n      not: this._not(),\n      bool: this._bool(),\n    });\n    return this;\n  }\n\n  orWhereRaw(sql, bindings) {\n    return this._bool('or').whereRaw(sql, bindings);\n  }\n\n  // Helper for compiling any advanced `where` queries.\n  whereWrapped(callback) {\n    this._statements.push({\n      grouping: 'where',\n      type: 'whereWrapped',\n      value: callback,\n      not: this._not(),\n      bool: this._bool(),\n    });\n    return this;\n  }\n\n  // Adds a `where exists` clause to the query.\n  whereExists(callback) {\n    this._statements.push({\n      grouping: 'where',\n      type: 'whereExists',\n      value: callback,\n      not: this._not(),\n      bool: this._bool(),\n    });\n    return this;\n  }\n\n  // Adds an `or where exists` clause to the query.\n  orWhereExists(callback) {\n    return this._bool('or').whereExists(callback);\n  }\n\n  // Adds a `where not exists` clause to the query.\n  whereNotExists(callback) {\n    return this._not(true).whereExists(callback);\n  }\n\n  // Adds a `or where not exists` clause to the query.\n  orWhereNotExists(callback) {\n    return this._bool('or').whereNotExists(callback);\n  }\n\n  // Adds a `where in` clause to the query.\n  whereIn(column, values) {\n    if (Array.isArray(values) && isEmpty(values))\n      return this.where(this._not());\n    this._statements.push({\n      grouping: 'where',\n      type: 'whereIn',\n      column,\n      value: values,\n      not: this._not(),\n      bool: this._bool(),\n    });\n    return this;\n  }\n\n  // Adds a `or where in` clause to the query.\n  orWhereIn(column, values) {\n    return this._bool('or').whereIn(column, values);\n  }\n\n  // Adds a `where not in` clause to the query.\n  whereNotIn(column, values) {\n    return this._not(true).whereIn(column, values);\n  }\n\n  // Adds a `or where not in` clause to the query.\n  orWhereNotIn(column, values) {\n    return this._bool('or')._not(true).whereIn(column, values);\n  }\n\n  // Adds a `where null` clause to the query.\n  whereNull(column) {\n    this._statements.push({\n      grouping: 'where',\n      type: 'whereNull',\n      column,\n      not: this._not(),\n      bool: this._bool(),\n    });\n    return this;\n  }\n\n  // Adds a `or where null` clause to the query.\n  orWhereNull(column) {\n    return this._bool('or').whereNull(column);\n  }\n\n  // Adds a `where not null` clause to the query.\n  whereNotNull(column) {\n    return this._not(true).whereNull(column);\n  }\n\n  // Adds a `or where not null` clause to the query.\n  orWhereNotNull(column) {\n    return this._bool('or').whereNotNull(column);\n  }\n\n  // Adds a `where between` clause to the query.\n  whereBetween(column, values) {\n    assert(\n      Array.isArray(values),\n      'The second argument to whereBetween must be an array.'\n    );\n    assert(\n      values.length === 2,\n      'You must specify 2 values for the whereBetween clause'\n    );\n    this._statements.push({\n      grouping: 'where',\n      type: 'whereBetween',\n      column,\n      value: values,\n      not: this._not(),\n      bool: this._bool(),\n    });\n    return this;\n  }\n\n  // Adds a `where not between` clause to the query.\n  whereNotBetween(column, values) {\n    return this._not(true).whereBetween(column, values);\n  }\n\n  // Adds a `or where between` clause to the query.\n  orWhereBetween(column, values) {\n    return this._bool('or').whereBetween(column, values);\n  }\n\n  // Adds a `or where not between` clause to the query.\n  orWhereNotBetween(column, values) {\n    return this._bool('or').whereNotBetween(column, values);\n  }\n\n  _whereLike(type, column, value) {\n    this._statements.push({\n      grouping: 'where',\n      type: type,\n      column,\n      value: value,\n      not: this._not(),\n      bool: this._bool(),\n      asColumn: this._asColumnFlag,\n    });\n    return this;\n  }\n\n  // Adds a `where like` clause to the query.\n  whereLike(column, value) {\n    return this._whereLike('whereLike', column, value);\n  }\n\n  // Adds a `or where like` clause to the query.\n  orWhereLike(column, value) {\n    return this._bool('or')._whereLike('whereLike', column, value);\n  }\n\n  // Adds a `where ilike` clause to the query.\n  whereILike(column, value) {\n    return this._whereLike('whereILike', column, value);\n  }\n\n  // Adds a `or where ilike` clause to the query.\n  orWhereILike(column, value) {\n    return this._bool('or')._whereLike('whereILike', column, value);\n  }\n\n  // Adds a `group by` clause to the query.\n  groupBy(item) {\n    if (item && item.isRawInstance) {\n      return this.groupByRaw.apply(this, arguments);\n    }\n    this._statements.push({\n      grouping: 'group',\n      type: 'groupByBasic',\n      value: normalizeArr(...arguments),\n    });\n    return this;\n  }\n\n  // Adds a raw `group by` clause to the query.\n  groupByRaw(sql, bindings) {\n    const raw = sql.isRawInstance ? sql : this.client.raw(sql, bindings);\n    this._statements.push({\n      grouping: 'group',\n      type: 'groupByRaw',\n      value: raw,\n    });\n    return this;\n  }\n\n  // Adds a `order by` clause to the query.\n  orderBy(column, direction, nulls = '') {\n    if (Array.isArray(column)) {\n      return this._orderByArray(column);\n    }\n    this._statements.push({\n      grouping: 'order',\n      type: 'orderByBasic',\n      value: column,\n      direction,\n      nulls,\n    });\n    return this;\n  }\n\n  // Adds a `order by` with multiple columns to the query.\n  _orderByArray(columnDefs) {\n    for (let i = 0; i < columnDefs.length; i++) {\n      const columnInfo = columnDefs[i];\n      if (isObject(columnInfo)) {\n        this._statements.push({\n          grouping: 'order',\n          type: 'orderByBasic',\n          value: columnInfo['column'],\n          direction: columnInfo['order'],\n          nulls: columnInfo['nulls'],\n        });\n      } else if (isString(columnInfo) || isNumber(columnInfo)) {\n        this._statements.push({\n          grouping: 'order',\n          type: 'orderByBasic',\n          value: columnInfo,\n        });\n      }\n    }\n    return this;\n  }\n\n  // Add a raw `order by` clause to the query.\n  orderByRaw(sql, bindings) {\n    const raw = sql.isRawInstance ? sql : this.client.raw(sql, bindings);\n    this._statements.push({\n      grouping: 'order',\n      type: 'orderByRaw',\n      value: raw,\n    });\n    return this;\n  }\n\n  _union(clause, args) {\n    let callbacks = args[0];\n    let wrap = args[1];\n    if (args.length === 1 || (args.length === 2 && isBoolean(wrap))) {\n      if (!Array.isArray(callbacks)) {\n        callbacks = [callbacks];\n      }\n      for (let i = 0, l = callbacks.length; i < l; i++) {\n        this._statements.push({\n          grouping: 'union',\n          clause: clause,\n          value: callbacks[i],\n          wrap: wrap || false,\n        });\n      }\n    } else {\n      callbacks = toArray(args).slice(0, args.length - 1);\n      wrap = args[args.length - 1];\n      if (!isBoolean(wrap)) {\n        callbacks.push(wrap);\n        wrap = false;\n      }\n      this._union(clause, [callbacks, wrap]);\n    }\n    return this;\n  }\n\n  // Add a union statement to the query.\n  union(...args) {\n    return this._union('union', args);\n  }\n\n  // Adds a union all statement to the query.\n  unionAll(...args) {\n    return this._union('union all', args);\n  }\n\n  intersect(...args) {\n    return this._union('intersect', args);\n  }\n\n  except(...args) {\n    return this._union('except', args);\n  }\n\n  // Adds a `having` clause to the query.\n  having(column, operator, value) {\n    if (column.isRawInstance && arguments.length === 1) {\n      return this.havingRaw(column);\n    }\n\n    // Check if the column is a function, in which case it's\n    // a having statement wrapped in parens.\n    if (typeof column === 'function') {\n      return this.havingWrapped(column);\n    }\n\n    this._statements.push({\n      grouping: 'having',\n      type: 'havingBasic',\n      column,\n      operator,\n      value,\n      bool: this._bool(),\n      not: this._not(),\n    });\n    return this;\n  }\n\n  orHaving(column, ...args) {\n    this._bool('or');\n    const obj = column;\n    if (isObject(obj) && !obj.isRawInstance) {\n      return this.havingWrapped(function () {\n        for (const key in obj) {\n          this.andHaving(key, obj[key]);\n        }\n      });\n    }\n    return this.having(column, ...args);\n  }\n\n  // Helper for compiling any advanced `having` queries.\n  havingWrapped(callback) {\n    this._statements.push({\n      grouping: 'having',\n      type: 'havingWrapped',\n      value: callback,\n      bool: this._bool(),\n      not: this._not(),\n    });\n    return this;\n  }\n\n  havingNull(column) {\n    this._statements.push({\n      grouping: 'having',\n      type: 'havingNull',\n      column,\n      not: this._not(),\n      bool: this._bool(),\n    });\n    return this;\n  }\n\n  orHavingNull(callback) {\n    return this._bool('or').havingNull(callback);\n  }\n\n  havingNotNull(callback) {\n    return this._not(true).havingNull(callback);\n  }\n\n  orHavingNotNull(callback) {\n    return this._not(true)._bool('or').havingNull(callback);\n  }\n\n  havingExists(callback) {\n    this._statements.push({\n      grouping: 'having',\n      type: 'havingExists',\n      value: callback,\n      not: this._not(),\n      bool: this._bool(),\n    });\n    return this;\n  }\n\n  orHavingExists(callback) {\n    return this._bool('or').havingExists(callback);\n  }\n\n  havingNotExists(callback) {\n    return this._not(true).havingExists(callback);\n  }\n\n  orHavingNotExists(callback) {\n    return this._not(true)._bool('or').havingExists(callback);\n  }\n\n  havingBetween(column, values) {\n    assert(\n      Array.isArray(values),\n      'The second argument to havingBetween must be an array.'\n    );\n    assert(\n      values.length === 2,\n      'You must specify 2 values for the havingBetween clause'\n    );\n    this._statements.push({\n      grouping: 'having',\n      type: 'havingBetween',\n      column,\n      value: values,\n      not: this._not(),\n      bool: this._bool(),\n    });\n    return this;\n  }\n\n  orHavingBetween(column, values) {\n    return this._bool('or').havingBetween(column, values);\n  }\n\n  havingNotBetween(column, values) {\n    return this._not(true).havingBetween(column, values);\n  }\n\n  orHavingNotBetween(column, values) {\n    return this._not(true)._bool('or').havingBetween(column, values);\n  }\n\n  havingIn(column, values) {\n    if (Array.isArray(values) && isEmpty(values))\n      return this.where(this._not());\n    this._statements.push({\n      grouping: 'having',\n      type: 'havingIn',\n      column,\n      value: values,\n      not: this._not(),\n      bool: this._bool(),\n    });\n    return this;\n  }\n\n  // Adds a `or where in` clause to the query.\n  orHavingIn(column, values) {\n    return this._bool('or').havingIn(column, values);\n  }\n\n  // Adds a `where not in` clause to the query.\n  havingNotIn(column, values) {\n    return this._not(true).havingIn(column, values);\n  }\n\n  // Adds a `or where not in` clause to the query.\n  orHavingNotIn(column, values) {\n    return this._bool('or')._not(true).havingIn(column, values);\n  }\n\n  // Adds a raw `having` clause to the query.\n  havingRaw(sql, bindings) {\n    const raw = sql.isRawInstance ? sql : this.client.raw(sql, bindings);\n    this._statements.push({\n      grouping: 'having',\n      type: 'havingRaw',\n      value: raw,\n      bool: this._bool(),\n      not: this._not(),\n    });\n    return this;\n  }\n\n  orHavingRaw(sql, bindings) {\n    return this._bool('or').havingRaw(sql, bindings);\n  }\n\n  // set the skip binding parameter (= insert the raw value in the query) for an attribute.\n  _setSkipBinding(attribute, options) {\n    let skipBinding = options;\n    if (isObject(options)) {\n      skipBinding = options.skipBinding;\n    }\n    this._single.skipBinding = this._single.skipBinding || {};\n    this._single.skipBinding[attribute] = skipBinding;\n  }\n\n  // Only allow a single \"offset\" to be set for the current query.\n  offset(value, options) {\n    if (value == null || value.isRawInstance || value instanceof Builder) {\n      // Builder for backward compatibility\n      this._single.offset = value;\n    } else {\n      const val = parseInt(value, 10);\n      if (isNaN(val)) {\n        this.client.logger.warn('A valid integer must be provided to offset');\n      } else if (val < 0) {\n        throw new Error(`A non-negative integer must be provided to offset.`);\n      } else {\n        this._single.offset = val;\n      }\n    }\n    this._setSkipBinding('offset', options);\n    return this;\n  }\n\n  // Only allow a single \"limit\" to be set for the current query.\n  limit(value, options) {\n    const val = parseInt(value, 10);\n    if (isNaN(val)) {\n      this.client.logger.warn('A valid integer must be provided to limit');\n    } else {\n      this._single.limit = val;\n      this._setSkipBinding('limit', options);\n    }\n    return this;\n  }\n\n  // Retrieve the \"count\" result of the query.\n  count(column, options) {\n    return this._aggregate('count', column || '*', options);\n  }\n\n  // Retrieve the minimum value of a given column.\n  min(column, options) {\n    return this._aggregate('min', column, options);\n  }\n\n  // Retrieve the maximum value of a given column.\n  max(column, options) {\n    return this._aggregate('max', column, options);\n  }\n\n  // Retrieve the sum of the values of a given column.\n  sum(column, options) {\n    return this._aggregate('sum', column, options);\n  }\n\n  // Retrieve the average of the values of a given column.\n  avg(column, options) {\n    return this._aggregate('avg', column, options);\n  }\n\n  // Retrieve the \"count\" of the distinct results of the query.\n  countDistinct(...columns) {\n    let options;\n    if (columns.length > 1 && isPlainObject(last(columns))) {\n      [options] = columns.splice(columns.length - 1, 1);\n    }\n\n    if (!columns.length) {\n      columns = '*';\n    } else if (columns.length === 1) {\n      columns = columns[0];\n    }\n\n    return this._aggregate('count', columns, { ...options, distinct: true });\n  }\n\n  // Retrieve the sum of the distinct values of a given column.\n  sumDistinct(column, options) {\n    return this._aggregate('sum', column, { ...options, distinct: true });\n  }\n\n  // Retrieve the vg of the distinct results of the query.\n  avgDistinct(column, options) {\n    return this._aggregate('avg', column, { ...options, distinct: true });\n  }\n\n  // Increments a column's value by the specified amount.\n  increment(column, amount = 1) {\n    if (isObject(column)) {\n      for (const key in column) {\n        this._counter(key, column[key]);\n      }\n\n      return this;\n    }\n\n    return this._counter(column, amount);\n  }\n\n  // Decrements a column's value by the specified amount.\n  decrement(column, amount = 1) {\n    if (isObject(column)) {\n      for (const key in column) {\n        this._counter(key, -column[key]);\n      }\n\n      return this;\n    }\n\n    return this._counter(column, -amount);\n  }\n\n  // Clears increments/decrements\n  clearCounters() {\n    this._single.counter = {};\n    return this;\n  }\n\n  // Sets the values for a `select` query, informing that only the first\n  // row should be returned (limit 1).\n  first(...args) {\n    if (this._method && this._method !== 'select') {\n      throw new Error(`Cannot chain .first() on \"${this._method}\" query`);\n    }\n\n    this.select(normalizeArr(...args));\n    this._method = 'first';\n    this.limit(1);\n    return this;\n  }\n\n  // Use existing connection to execute the query\n  // Same value that client.acquireConnection() for an according client returns should be passed\n  connection(_connection) {\n    this._connection = _connection;\n    this.client.processPassedConnection(_connection);\n    return this;\n  }\n\n  // Pluck a column from a query.\n  pluck(column) {\n    if (this._method && this._method !== 'select') {\n      throw new Error(`Cannot chain .pluck() on \"${this._method}\" query`);\n    }\n\n    this._method = 'pluck';\n    this._single.pluck = column;\n    this._statements.push({\n      grouping: 'columns',\n      type: 'pluck',\n      value: column,\n    });\n    return this;\n  }\n\n  // Deprecated. Remove everything from select clause\n  clearSelect() {\n    this._clearGrouping('columns');\n    return this;\n  }\n\n  // Deprecated. Remove everything from where clause\n  clearWhere() {\n    this._clearGrouping('where');\n    return this;\n  }\n\n  // Deprecated. Remove everything from group clause\n  clearGroup() {\n    this._clearGrouping('group');\n    return this;\n  }\n\n  // Deprecated. Remove everything from order clause\n  clearOrder() {\n    this._clearGrouping('order');\n    return this;\n  }\n\n  // Deprecated. Remove everything from having clause\n  clearHaving() {\n    this._clearGrouping('having');\n    return this;\n  }\n\n  // Remove everything from statement clause\n  clear(statement) {\n    if (!CLEARABLE_STATEMENTS.has(statement))\n      throw new Error(`Knex Error: unknown statement '${statement}'`);\n    if (statement.startsWith('counter')) return this.clearCounters();\n    if (statement === 'select') {\n      statement = 'columns';\n    }\n    this._clearGrouping(statement);\n    return this;\n  }\n\n  // Insert & Update\n  // ------\n\n  // Sets the values for an `insert` query.\n  insert(values, returning, options) {\n    this._method = 'insert';\n    if (!isEmpty(returning)) this.returning(returning, options);\n    this._single.insert = values;\n    return this;\n  }\n\n  // Sets the values for an `update`, allowing for both\n  // `.update(key, value, [returning])` and `.update(obj, [returning])` syntaxes.\n  update(values, returning, options) {\n    let ret;\n    const obj = this._single.update || {};\n    this._method = 'update';\n    if (isString(values)) {\n      if (isPlainObject(returning)) {\n        obj[values] = JSON.stringify(returning);\n      } else {\n        obj[values] = returning;\n      }\n      if (arguments.length > 2) {\n        ret = arguments[2];\n      }\n    } else {\n      const keys = Object.keys(values);\n      if (this._single.update) {\n        this.client.logger.warn('Update called multiple times with objects.');\n      }\n      let i = -1;\n      while (++i < keys.length) {\n        obj[keys[i]] = values[keys[i]];\n      }\n      ret = arguments[1];\n    }\n    if (!isEmpty(ret)) this.returning(ret, options);\n    this._single.update = obj;\n    return this;\n  }\n\n  // Sets the returning value for the query.\n  returning(returning, options) {\n    this._single.returning = returning;\n    this._single.options = options;\n    return this;\n  }\n\n  onConflict(columns) {\n    if (typeof columns === 'string') {\n      columns = [columns];\n    }\n    return new OnConflictBuilder(this, columns || true);\n  }\n\n  // Delete\n  // ------\n\n  // Executes a delete statement on the query;\n  delete(ret, options) {\n    this._method = 'del';\n    if (!isEmpty(ret)) this.returning(ret, options);\n    return this;\n  }\n\n  // Truncates a table, ends the query chain.\n  truncate(tableName) {\n    this._method = 'truncate';\n    if (tableName) {\n      this._single.table = tableName;\n    }\n    return this;\n  }\n\n  // Retrieves columns for the table specified by `knex(tableName)`\n  columnInfo(column) {\n    this._method = 'columnInfo';\n    this._single.columnInfo = column;\n    return this;\n  }\n\n  // Set a lock for update constraint.\n  forUpdate(...tables) {\n    this._single.lock = lockMode.forUpdate;\n    if (tables.length === 1 && Array.isArray(tables[0])) {\n      this._single.lockTables = tables[0];\n    } else {\n      this._single.lockTables = tables;\n    }\n    return this;\n  }\n\n  // Set a lock for share constraint.\n  forShare(...tables) {\n    this._single.lock = lockMode.forShare;\n    this._single.lockTables = tables;\n    return this;\n  }\n\n  // Set a lock for no key update constraint.\n  forNoKeyUpdate(...tables) {\n    this._single.lock = lockMode.forNoKeyUpdate;\n    this._single.lockTables = tables;\n    return this;\n  }\n\n  // Set a lock for key share constraint.\n  forKeyShare(...tables) {\n    this._single.lock = lockMode.forKeyShare;\n    this._single.lockTables = tables;\n    return this;\n  }\n\n  // Skips locked rows when using a lock constraint.\n  skipLocked() {\n    if (!this._isSelectQuery()) {\n      throw new Error(`Cannot chain .skipLocked() on \"${this._method}\" query!`);\n    }\n    if (!this._hasLockMode()) {\n      throw new Error(\n        '.skipLocked() can only be used after a call to .forShare() or .forUpdate()!'\n      );\n    }\n    if (this._single.waitMode === waitMode.noWait) {\n      throw new Error('.skipLocked() cannot be used together with .noWait()!');\n    }\n    this._single.waitMode = waitMode.skipLocked;\n    return this;\n  }\n\n  // Causes error when acessing a locked row instead of waiting for it to be released.\n  noWait() {\n    if (!this._isSelectQuery()) {\n      throw new Error(`Cannot chain .noWait() on \"${this._method}\" query!`);\n    }\n    if (!this._hasLockMode()) {\n      throw new Error(\n        '.noWait() can only be used after a call to .forShare() or .forUpdate()!'\n      );\n    }\n    if (this._single.waitMode === waitMode.skipLocked) {\n      throw new Error('.noWait() cannot be used together with .skipLocked()!');\n    }\n    this._single.waitMode = waitMode.noWait;\n    return this;\n  }\n\n  // Takes a JS object of methods to call and calls them\n  fromJS(obj) {\n    each(obj, (val, key) => {\n      if (typeof this[key] !== 'function') {\n        this.client.logger.warn(`Knex Error: unknown key ${key}`);\n      }\n      if (Array.isArray(val)) {\n        this[key].apply(this, val);\n      } else {\n        this[key](val);\n      }\n    });\n    return this;\n  }\n\n  fromRaw(sql, bindings) {\n    const raw = sql.isRawInstance ? sql : this.client.raw(sql, bindings);\n    return this.from(raw);\n  }\n\n  // Passes query to provided callback function, useful for e.g. composing\n  // domain-specific helpers\n  modify(callback) {\n    callback.apply(this, [this].concat(tail(arguments)));\n    return this;\n  }\n\n  upsert(values, returning, options) {\n    throw new Error(\n      `Upsert is not yet supported for dialect ${this.client.dialect}`\n    );\n  }\n\n  // JSON support functions\n  _json(nameFunction, params) {\n    this._statements.push({\n      grouping: 'columns',\n      type: 'json',\n      method: nameFunction,\n      params: params,\n    });\n    return this;\n  }\n\n  jsonExtract() {\n    const column = arguments[0];\n    let path;\n    let alias;\n    let singleValue = true;\n\n    // We use arguments to have the signatures :\n    // - column (string or array)\n    // - column + path\n    // - column + path + alias\n    // - column + path + alias + singleValue\n    // - column array + singleValue\n    if (arguments.length >= 2) {\n      path = arguments[1];\n    }\n    if (arguments.length >= 3) {\n      alias = arguments[2];\n    }\n    if (arguments.length === 4) {\n      singleValue = arguments[3];\n    }\n    if (\n      arguments.length === 2 &&\n      Array.isArray(arguments[0]) &&\n      isBoolean(arguments[1])\n    ) {\n      singleValue = arguments[1];\n    }\n    return this._json('jsonExtract', {\n      column: column,\n      path: path,\n      alias: alias,\n      singleValue, // boolean used only in MSSQL to use function for extract value instead of object/array.\n    });\n  }\n\n  jsonSet(column, path, value, alias) {\n    return this._json('jsonSet', {\n      column: column,\n      path: path,\n      value: value,\n      alias: alias,\n    });\n  }\n\n  jsonInsert(column, path, value, alias) {\n    return this._json('jsonInsert', {\n      column: column,\n      path: path,\n      value: value,\n      alias: alias,\n    });\n  }\n\n  jsonRemove(column, path, alias) {\n    return this._json('jsonRemove', {\n      column: column,\n      path: path,\n      alias: alias,\n    });\n  }\n\n  // Wheres for JSON\n  _isJsonObject(jsonValue) {\n    return isObject(jsonValue) && !(jsonValue instanceof Builder);\n  }\n\n  _whereJsonWrappedValue(type, column, value) {\n    const whereJsonClause = {\n      grouping: 'where',\n      type: type,\n      column,\n      value: value,\n      not: this._not(),\n      bool: this._bool(),\n      asColumn: this._asColumnFlag,\n    };\n    if (arguments[3]) {\n      whereJsonClause.operator = arguments[3];\n    }\n    if (arguments[4]) {\n      whereJsonClause.jsonPath = arguments[4];\n    }\n    this._statements.push(whereJsonClause);\n  }\n\n  whereJsonObject(column, value) {\n    this._whereJsonWrappedValue('whereJsonObject', column, value);\n    return this;\n  }\n\n  orWhereJsonObject(column, value) {\n    return this._bool('or').whereJsonObject(column, value);\n  }\n\n  whereNotJsonObject(column, value) {\n    return this._not(true).whereJsonObject(column, value);\n  }\n\n  orWhereNotJsonObject(column, value) {\n    return this._bool('or').whereNotJsonObject(column, value);\n  }\n\n  whereJsonPath(column, path, operator, value) {\n    this._whereJsonWrappedValue('whereJsonPath', column, value, operator, path);\n    return this;\n  }\n\n  orWhereJsonPath(column, path, operator, value) {\n    return this._bool('or').whereJsonPath(column, path, operator, value);\n  }\n\n  // Json superset wheres\n  whereJsonSupersetOf(column, value) {\n    this._whereJsonWrappedValue('whereJsonSupersetOf', column, value);\n    return this;\n  }\n\n  whereJsonNotSupersetOf(column, value) {\n    return this._not(true).whereJsonSupersetOf(column, value);\n  }\n\n  orWhereJsonSupersetOf(column, value) {\n    return this._bool('or').whereJsonSupersetOf(column, value);\n  }\n\n  orWhereJsonNotSupersetOf(column, value) {\n    return this._bool('or').whereJsonNotSupersetOf(column, value);\n  }\n\n  // Json subset wheres\n  whereJsonSubsetOf(column, value) {\n    this._whereJsonWrappedValue('whereJsonSubsetOf', column, value);\n    return this;\n  }\n\n  whereJsonNotSubsetOf(column, value) {\n    return this._not(true).whereJsonSubsetOf(column, value);\n  }\n\n  orWhereJsonSubsetOf(column, value) {\n    return this._bool('or').whereJsonSubsetOf(column, value);\n  }\n\n  orWhereJsonNotSubsetOf(column, value) {\n    return this._bool('or').whereJsonNotSubsetOf(column, value);\n  }\n\n  whereJsonHasNone(column, values) {\n    this._not(true).whereJsonHasAll(column, values);\n    return this;\n  }\n\n  // end of wheres for JSON\n\n  _analytic(alias, second, third) {\n    let analytic;\n    const { schema } = this._single;\n    const method = this._analyticMethod();\n    alias = typeof alias === 'string' ? alias : null;\n\n    assert(\n      typeof second === 'function' ||\n        second.isRawInstance ||\n        Array.isArray(second) ||\n        typeof second === 'string' ||\n        typeof second === 'object',\n      `The second argument to an analytic function must be either a function, a raw,\n       an array of string or object, an object or a single string.`\n    );\n\n    if (third) {\n      assert(\n        Array.isArray(third) ||\n          typeof third === 'string' ||\n          typeof third === 'object',\n        'The third argument to an analytic function must be either a string, an array of string or object or an object.'\n      );\n    }\n\n    if (isFunction(second)) {\n      analytic = new Analytic(method, schema, alias);\n      second.call(analytic, analytic);\n    } else if (second.isRawInstance) {\n      const raw = second;\n      analytic = {\n        grouping: 'columns',\n        type: 'analytic',\n        method: method,\n        raw: raw,\n        alias: alias,\n      };\n    } else {\n      const order = !Array.isArray(second) ? [second] : second;\n      let partitions = third || [];\n      partitions = !Array.isArray(partitions) ? [partitions] : partitions;\n      analytic = {\n        grouping: 'columns',\n        type: 'analytic',\n        method: method,\n        order: order,\n        alias: alias,\n        partitions: partitions,\n      };\n    }\n    this._statements.push(analytic);\n    return this;\n  }\n\n  rank(...args) {\n    return this._analyticMethod('rank')._analytic(...args);\n  }\n\n  denseRank(...args) {\n    return this._analyticMethod('dense_rank')._analytic(...args);\n  }\n\n  rowNumber(...args) {\n    return this._analyticMethod('row_number')._analytic(...args);\n  }\n\n  // ----------------------------------------------------------------------\n\n  // Helper for the incrementing/decrementing queries.\n  _counter(column, amount) {\n    amount = parseFloat(amount);\n\n    this._method = 'update';\n\n    this._single.counter = this._single.counter || {};\n\n    this._single.counter[column] = amount;\n\n    return this;\n  }\n\n  // Helper to get or set the \"boolFlag\" value.\n  _bool(val) {\n    if (arguments.length === 1) {\n      this._boolFlag = val;\n      return this;\n    }\n    const ret = this._boolFlag;\n    this._boolFlag = 'and';\n    return ret;\n  }\n\n  // Helper to get or set the \"notFlag\" value.\n  _not(val) {\n    if (arguments.length === 1) {\n      this._notFlag = val;\n      return this;\n    }\n    const ret = this._notFlag;\n    this._notFlag = false;\n    return ret;\n  }\n\n  // Helper to get or set the \"joinFlag\" value.\n  _joinType(val) {\n    if (arguments.length === 1) {\n      this._joinFlag = val;\n      return this;\n    }\n    const ret = this._joinFlag || 'inner';\n    this._joinFlag = 'inner';\n    return ret;\n  }\n\n  _analyticMethod(val) {\n    if (arguments.length === 1) {\n      this._analyticFlag = val;\n      return this;\n    }\n    return this._analyticFlag || 'row_number';\n  }\n\n  // Helper for compiling any aggregate queries.\n  _aggregate(method, column, options = {}) {\n    this._statements.push({\n      grouping: 'columns',\n      type: column.isRawInstance ? 'aggregateRaw' : 'aggregate',\n      method,\n      value: column,\n      aggregateDistinct: options.distinct || false,\n      alias: options.as,\n    });\n    return this;\n  }\n\n  // Helper function for clearing or reseting a grouping type from the builder\n  _clearGrouping(grouping) {\n    if (grouping in this._single) {\n      this._single[grouping] = undefined;\n    } else {\n      this._statements = reject(this._statements, { grouping });\n    }\n  }\n\n  // Helper function that checks if the builder will emit a select query\n  _isSelectQuery() {\n    return SELECT_COMMANDS.has(this._method);\n  }\n\n  // Helper function that checks if the query has a lock mode set\n  _hasLockMode() {\n    return LOCK_MODES.has(this._single.lock);\n  }\n}\n\nBuilder.prototype.select = Builder.prototype.columns;\nBuilder.prototype.column = Builder.prototype.columns;\nBuilder.prototype.andWhereNot = Builder.prototype.whereNot;\nBuilder.prototype.andWhereNotColumn = Builder.prototype.whereNotColumn;\nBuilder.prototype.andWhere = Builder.prototype.where;\nBuilder.prototype.andWhereColumn = Builder.prototype.whereColumn;\nBuilder.prototype.andWhereRaw = Builder.prototype.whereRaw;\nBuilder.prototype.andWhereBetween = Builder.prototype.whereBetween;\nBuilder.prototype.andWhereNotBetween = Builder.prototype.whereNotBetween;\nBuilder.prototype.andWhereJsonObject = Builder.prototype.whereJsonObject;\nBuilder.prototype.andWhereNotJsonObject = Builder.prototype.whereNotJsonObject;\nBuilder.prototype.andWhereJsonPath = Builder.prototype.whereJsonPath;\nBuilder.prototype.andWhereLike = Builder.prototype.whereLike;\nBuilder.prototype.andWhereILike = Builder.prototype.whereILike;\nBuilder.prototype.andHaving = Builder.prototype.having;\nBuilder.prototype.andHavingIn = Builder.prototype.havingIn;\nBuilder.prototype.andHavingNotIn = Builder.prototype.havingNotIn;\nBuilder.prototype.andHavingNull = Builder.prototype.havingNull;\nBuilder.prototype.andHavingNotNull = Builder.prototype.havingNotNull;\nBuilder.prototype.andHavingExists = Builder.prototype.havingExists;\nBuilder.prototype.andHavingNotExists = Builder.prototype.havingNotExists;\nBuilder.prototype.andHavingBetween = Builder.prototype.havingBetween;\nBuilder.prototype.andHavingNotBetween = Builder.prototype.havingNotBetween;\nBuilder.prototype.from = Builder.prototype.table;\nBuilder.prototype.into = Builder.prototype.table;\nBuilder.prototype.del = Builder.prototype.delete;\n\n// Attach all of the top level promise methods that should be chainable.\naugmentWithBuilderInterface(Builder);\naddQueryContext(Builder);\n\nBuilder.extend = (methodName, fn) => {\n  if (Object.prototype.hasOwnProperty.call(Builder.prototype, methodName)) {\n    throw new Error(\n      `Can't extend QueryBuilder with existing method ('${methodName}').`\n    );\n  }\n\n  assign(Builder.prototype, { [methodName]: fn });\n};\n\n// Sub-builder for onConflict clauses\nclass OnConflictBuilder {\n  constructor(builder, columns) {\n    this.builder = builder;\n    this._columns = columns;\n  }\n\n  // Sets insert query to ignore conflicts\n  ignore() {\n    this.builder._single.onConflict = this._columns;\n    this.builder._single.ignore = true;\n    return this.builder;\n  }\n\n  // Sets insert query to update on conflict\n  merge(updates) {\n    this.builder._single.onConflict = this._columns;\n    this.builder._single.merge = { updates };\n    return this.builder;\n  }\n\n  // Prevent\n  then() {\n    throw new Error(\n      'Incomplete onConflict clause. .onConflict() must be directly followed by either .merge() or .ignore()'\n    );\n  }\n}\n\nmodule.exports = Builder;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4746, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/formatter/formatterUtils.js"],"sourcesContent":["const { isObject } = require('../util/is');\n\n// Compiles a callback using the query builder.\nfunction compileCallback(callback, method, client, bindingsHolder) {\n  // Build the callback\n  const builder = client.queryBuilder();\n  callback.call(builder, builder);\n\n  // Compile the callback, using the current formatter (to track all bindings).\n  const compiler = client.queryCompiler(builder, bindingsHolder.bindings);\n\n  // Return the compiled & parameterized sql.\n  return compiler.toSQL(method || builder._method || 'select');\n}\n\nfunction wrapAsIdentifier(value, builder, client) {\n  const queryContext = builder.queryContext();\n  return client.wrapIdentifier((value || '').trim(), queryContext);\n}\n\nfunction formatDefault(value, type, client) {\n  if (value === void 0) {\n    return '';\n  } else if (value === null) {\n    return 'null';\n  } else if (value && value.isRawInstance) {\n    return value.toQuery();\n  } else if (type === 'bool') {\n    if (value === 'false') value = 0;\n    return `'${value ? 1 : 0}'`;\n  } else if ((type === 'json' || type === 'jsonb') && isObject(value)) {\n    return `'${JSON.stringify(value)}'`;\n  } else {\n    return client._escapeBinding(value.toString());\n  }\n}\n\nmodule.exports = {\n  compileCallback,\n  wrapAsIdentifier,\n  formatDefault,\n};\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,QAAQ,EAAE;AAElB,+CAA+C;AAC/C,SAAS,gBAAgB,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,cAAc;IAC/D,qBAAqB;IACrB,MAAM,UAAU,OAAO,YAAY;IACnC,SAAS,IAAI,CAAC,SAAS;IAEvB,6EAA6E;IAC7E,MAAM,WAAW,OAAO,aAAa,CAAC,SAAS,eAAe,QAAQ;IAEtE,2CAA2C;IAC3C,OAAO,SAAS,KAAK,CAAC,UAAU,QAAQ,OAAO,IAAI;AACrD;AAEA,SAAS,iBAAiB,KAAK,EAAE,OAAO,EAAE,MAAM;IAC9C,MAAM,eAAe,QAAQ,YAAY;IACzC,OAAO,OAAO,cAAc,CAAC,CAAC,SAAS,EAAE,EAAE,IAAI,IAAI;AACrD;AAEA,SAAS,cAAc,KAAK,EAAE,IAAI,EAAE,MAAM;IACxC,IAAI,UAAU,KAAK,GAAG;QACpB,OAAO;IACT,OAAO,IAAI,UAAU,MAAM;QACzB,OAAO;IACT,OAAO,IAAI,SAAS,MAAM,aAAa,EAAE;QACvC,OAAO,MAAM,OAAO;IACtB,OAAO,IAAI,SAAS,QAAQ;QAC1B,IAAI,UAAU,SAAS,QAAQ;QAC/B,OAAO,CAAC,CAAC,EAAE,QAAQ,IAAI,EAAE,CAAC,CAAC;IAC7B,OAAO,IAAI,CAAC,SAAS,UAAU,SAAS,OAAO,KAAK,SAAS,QAAQ;QACnE,OAAO,CAAC,CAAC,EAAE,KAAK,SAAS,CAAC,OAAO,CAAC,CAAC;IACrC,OAAO;QACL,OAAO,OAAO,cAAc,CAAC,MAAM,QAAQ;IAC7C;AACF;AAEA,OAAO,OAAO,GAAG;IACf;IACA;IACA;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4787, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/formatter/wrappingFormatter.js"],"sourcesContent":["const transform = require('lodash/transform');\nconst QueryBuilder = require('../query/querybuilder');\nconst { compileCallback, wrapAsIdentifier } = require('./formatterUtils');\n\n// Valid values for the `order by` clause generation.\nconst orderBys = ['asc', 'desc'];\n\n// Turn this into a lookup map\nconst operators = transform(\n  [\n    '=',\n    '<',\n    '>',\n    '<=',\n    '>=',\n    '<>',\n    '!=',\n    'like',\n    'not like',\n    'between',\n    'not between',\n    'ilike',\n    'not ilike',\n    'exists',\n    'not exist',\n    'rlike',\n    'not rlike',\n    'regexp',\n    'not regexp',\n    'match',\n    '&',\n    '|',\n    '^',\n    '<<',\n    '>>',\n    '~',\n    '~=',\n    '~*',\n    '!~',\n    '!~*',\n    '#',\n    '&&',\n    '@>',\n    '<@',\n    '||',\n    '&<',\n    '&>',\n    '-|-',\n    '@@',\n    '!!',\n    ['?', '\\\\?'],\n    ['?|', '\\\\?|'],\n    ['?&', '\\\\?&'],\n  ],\n  (result, key) => {\n    if (Array.isArray(key)) {\n      result[key[0]] = key[1];\n    } else {\n      result[key] = key;\n    }\n  },\n  {}\n);\n\n// Accepts a string or array of columns to wrap as appropriate. Column can be raw\nfunction columnize(target, builder, client, bindingHolder) {\n  const columns = Array.isArray(target) ? target : [target];\n  let str = '',\n    i = -1;\n  while (++i < columns.length) {\n    if (i > 0) str += ', ';\n    str += wrap(columns[i], undefined, builder, client, bindingHolder);\n  }\n  return str;\n}\n\n// Puts the appropriate wrapper around a value depending on the database\n// engine, unless it's a knex.raw value, in which case it's left alone.\nfunction wrap(value, isParameter, builder, client, bindingHolder) {\n  const raw = unwrapRaw(value, isParameter, builder, client, bindingHolder);\n  if (raw) return raw;\n  switch (typeof value) {\n    case 'function':\n      return outputQuery(\n        compileCallback(value, undefined, client, bindingHolder),\n        true,\n        builder,\n        client\n      );\n    case 'object':\n      return parseObject(value, builder, client, bindingHolder);\n    case 'number':\n      return value;\n    default:\n      return wrapString(value + '', builder, client);\n  }\n}\n\nfunction unwrapRaw(value, isParameter, builder, client, bindingsHolder) {\n  let query;\n  if (value instanceof QueryBuilder) {\n    query = client.queryCompiler(value).toSQL();\n    if (query.bindings) {\n      bindingsHolder.bindings.push(...query.bindings);\n    }\n    return outputQuery(query, isParameter, builder, client);\n  }\n  if (value && value.isRawInstance) {\n    value.client = client;\n    if (builder._queryContext) {\n      value.queryContext = () => {\n        return builder._queryContext;\n      };\n    }\n\n    query = value.toSQL();\n    if (query.bindings) {\n      bindingsHolder.bindings.push(...query.bindings);\n    }\n    return query.sql;\n  }\n  if (isParameter) {\n    bindingsHolder.bindings.push(value);\n  }\n}\n\nfunction operator(value, builder, client, bindingsHolder) {\n  const raw = unwrapRaw(value, undefined, builder, client, bindingsHolder);\n  if (raw) return raw;\n  const operator = operators[(value || '').toLowerCase()];\n  if (!operator) {\n    throw new TypeError(`The operator \"${value}\" is not permitted`);\n  }\n  return operator;\n}\n\n// Coerce to string to prevent strange errors when it's not a string.\nfunction wrapString(value, builder, client) {\n  const asIndex = value.toLowerCase().indexOf(' as ');\n  if (asIndex !== -1) {\n    const first = value.slice(0, asIndex);\n    const second = value.slice(asIndex + 4);\n    return client.alias(\n      wrapString(first, builder, client),\n      wrapAsIdentifier(second, builder, client)\n    );\n  }\n  const wrapped = [];\n  let i = -1;\n  const segments = value.split('.');\n  while (++i < segments.length) {\n    value = segments[i];\n    if (i === 0 && segments.length > 1) {\n      wrapped.push(wrapString((value || '').trim(), builder, client));\n    } else {\n      wrapped.push(wrapAsIdentifier(value, builder, client));\n    }\n  }\n  return wrapped.join('.');\n}\n\n// Key-value notation for alias\nfunction parseObject(obj, builder, client, formatter) {\n  const ret = [];\n  for (const alias in obj) {\n    const queryOrIdentifier = obj[alias];\n    // Avoids double aliasing for subqueries\n    if (typeof queryOrIdentifier === 'function') {\n      const compiled = compileCallback(\n        queryOrIdentifier,\n        undefined,\n        client,\n        formatter\n      );\n      compiled.as = alias; // enforces the object's alias\n      ret.push(outputQuery(compiled, true, builder, client));\n    } else if (queryOrIdentifier instanceof QueryBuilder) {\n      ret.push(\n        client.alias(\n          `(${wrap(queryOrIdentifier, undefined, builder, client, formatter)})`,\n          wrapAsIdentifier(alias, builder, client)\n        )\n      );\n    } else {\n      ret.push(\n        client.alias(\n          wrap(queryOrIdentifier, undefined, builder, client, formatter),\n          wrapAsIdentifier(alias, builder, client)\n        )\n      );\n    }\n  }\n  return ret.join(', ');\n}\n\n// Ensures the query is aliased if necessary.\nfunction outputQuery(compiled, isParameter, builder, client) {\n  let sql = compiled.sql || '';\n  if (sql) {\n    if (\n      (compiled.method === 'select' || compiled.method === 'first') &&\n      (isParameter || compiled.as)\n    ) {\n      sql = `(${sql})`;\n      if (compiled.as)\n        return client.alias(sql, wrapString(compiled.as, builder, client));\n    }\n  }\n  return sql;\n}\n\n/**\n * Creates SQL for a parameter, which might be passed to where() or .with() or\n * pretty much anywhere in API.\n *\n * @param value\n * @param method Optional at least 'select' or 'update' are valid\n * @param builder\n * @param client\n * @param bindingHolder\n */\nfunction rawOrFn(value, method, builder, client, bindingHolder) {\n  if (typeof value === 'function') {\n    return outputQuery(\n      compileCallback(value, method, client, bindingHolder),\n      undefined,\n      builder,\n      client\n    );\n  }\n  return unwrapRaw(value, undefined, builder, client, bindingHolder) || '';\n}\n\n// Specify the direction of the ordering.\nfunction direction(value, builder, client, bindingsHolder) {\n  const raw = unwrapRaw(value, undefined, builder, client, bindingsHolder);\n  if (raw) return raw;\n  return orderBys.indexOf((value || '').toLowerCase()) !== -1 ? value : 'asc';\n}\n\nmodule.exports = {\n  columnize,\n  direction,\n  operator,\n  outputQuery,\n  rawOrFn,\n  unwrapRaw,\n  wrap,\n  wrapString,\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5005, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/formatter/rawFormatter.js"],"sourcesContent":["const { columnize } = require('./wrappingFormatter');\n\nfunction replaceRawArrBindings(raw, client) {\n  const bindingsHolder = {\n    bindings: [],\n  };\n  const builder = raw;\n\n  const expectedBindings = raw.bindings.length;\n  const values = raw.bindings;\n  let index = 0;\n\n  const sql = raw.sql.replace(/\\\\?\\?\\??/g, function (match) {\n    if (match === '\\\\?') {\n      return match;\n    }\n\n    const value = values[index++];\n\n    if (match === '??') {\n      return columnize(value, builder, client, bindingsHolder);\n    }\n    return client.parameter(value, builder, bindingsHolder);\n  });\n\n  if (expectedBindings !== index) {\n    throw new Error(`Expected ${expectedBindings} bindings, saw ${index}`);\n  }\n\n  return {\n    method: 'raw',\n    sql,\n    bindings: bindingsHolder.bindings,\n  };\n}\n\nfunction replaceKeyBindings(raw, client) {\n  const bindingsHolder = {\n    bindings: [],\n  };\n  const builder = raw;\n\n  const values = raw.bindings;\n  const regex = /\\\\?(:(\\w+):(?=::)|:(\\w+):(?!:)|:(\\w+))/g;\n\n  const sql = raw.sql.replace(regex, function (match, p1, p2, p3, p4) {\n    if (match !== p1) {\n      return p1;\n    }\n\n    const part = p2 || p3 || p4;\n    const key = match.trim();\n    const isIdentifier = key[key.length - 1] === ':';\n    const value = values[part];\n\n    if (value === undefined) {\n      if (Object.prototype.hasOwnProperty.call(values, part)) {\n        bindingsHolder.bindings.push(value);\n      }\n\n      return match;\n    }\n\n    if (isIdentifier) {\n      return match.replace(\n        p1,\n        columnize(value, builder, client, bindingsHolder)\n      );\n    }\n\n    return match.replace(p1, client.parameter(value, builder, bindingsHolder));\n  });\n\n  return {\n    method: 'raw',\n    sql,\n    bindings: bindingsHolder.bindings,\n  };\n}\n\nmodule.exports = {\n  replaceKeyBindings,\n  replaceRawArrBindings,\n};\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,SAAS,EAAE;AAEnB,SAAS,sBAAsB,GAAG,EAAE,MAAM;IACxC,MAAM,iBAAiB;QACrB,UAAU,EAAE;IACd;IACA,MAAM,UAAU;IAEhB,MAAM,mBAAmB,IAAI,QAAQ,CAAC,MAAM;IAC5C,MAAM,SAAS,IAAI,QAAQ;IAC3B,IAAI,QAAQ;IAEZ,MAAM,MAAM,IAAI,GAAG,CAAC,OAAO,CAAC,aAAa,SAAU,KAAK;QACtD,IAAI,UAAU,OAAO;YACnB,OAAO;QACT;QAEA,MAAM,QAAQ,MAAM,CAAC,QAAQ;QAE7B,IAAI,UAAU,MAAM;YAClB,OAAO,UAAU,OAAO,SAAS,QAAQ;QAC3C;QACA,OAAO,OAAO,SAAS,CAAC,OAAO,SAAS;IAC1C;IAEA,IAAI,qBAAqB,OAAO;QAC9B,MAAM,IAAI,MAAM,CAAC,SAAS,EAAE,iBAAiB,eAAe,EAAE,OAAO;IACvE;IAEA,OAAO;QACL,QAAQ;QACR;QACA,UAAU,eAAe,QAAQ;IACnC;AACF;AAEA,SAAS,mBAAmB,GAAG,EAAE,MAAM;IACrC,MAAM,iBAAiB;QACrB,UAAU,EAAE;IACd;IACA,MAAM,UAAU;IAEhB,MAAM,SAAS,IAAI,QAAQ;IAC3B,MAAM,QAAQ;IAEd,MAAM,MAAM,IAAI,GAAG,CAAC,OAAO,CAAC,OAAO,SAAU,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;QAChE,IAAI,UAAU,IAAI;YAChB,OAAO;QACT;QAEA,MAAM,OAAO,MAAM,MAAM;QACzB,MAAM,MAAM,MAAM,IAAI;QACtB,MAAM,eAAe,GAAG,CAAC,IAAI,MAAM,GAAG,EAAE,KAAK;QAC7C,MAAM,QAAQ,MAAM,CAAC,KAAK;QAE1B,IAAI,UAAU,WAAW;YACvB,IAAI,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,OAAO;gBACtD,eAAe,QAAQ,CAAC,IAAI,CAAC;YAC/B;YAEA,OAAO;QACT;QAEA,IAAI,cAAc;YAChB,OAAO,MAAM,OAAO,CAClB,IACA,UAAU,OAAO,SAAS,QAAQ;QAEtC;QAEA,OAAO,MAAM,OAAO,CAAC,IAAI,OAAO,SAAS,CAAC,OAAO,SAAS;IAC5D;IAEA,OAAO;QACL,QAAQ;QACR;QACA,UAAU,eAAe,QAAQ;IACnC;AACF;AAEA,OAAO,OAAO,GAAG;IACf;IACA;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5074, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/util/nanoid.js"],"sourcesContent":["// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nconst urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW';\n\nconst numberAlphabet = '0123456789';\n\n/**\n * Generate URL-friendly unique ID. This method uses the non-secure\n * predictable random generator with bigger collision probability.\n * Based on https://github.com/ai/nanoid\n *\n * ```js\n * model.id = nanoid() //=> \"Uakgb_J5m9g-0JDMbcJqL\"\n * ```\n *\n * @param size Size of the ID. The default size is 21.\n * @returns A random string.\n */\nfunction nanoid(size = 21) {\n  let id = '';\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size;\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[(Math.random() * 64) | 0];\n  }\n  return id;\n}\n\nfunction nanonum(size = 21) {\n  let id = '';\n  let i = size;\n  while (i--) {\n    id += numberAlphabet[(Math.random() * 10) | 0];\n  }\n  return id;\n}\n\nmodule.exports = { nanoid, nanonum };\n"],"names":[],"mappings":"AAAA,yEAAyE;AACzE,mDAAmD;AACnD,MAAM,cACJ;AAEF,MAAM,iBAAiB;AAEvB;;;;;;;;;;;CAWC,GACD,SAAS,OAAO,OAAO,EAAE;IACvB,IAAI,KAAK;IACT,8DAA8D;IAC9D,IAAI,IAAI;IACR,MAAO,IAAK;QACV,wDAAwD;QACxD,MAAM,WAAW,CAAC,AAAC,KAAK,MAAM,KAAK,KAAM,EAAE;IAC7C;IACA,OAAO;AACT;AAEA,SAAS,QAAQ,OAAO,EAAE;IACxB,IAAI,KAAK;IACT,IAAI,IAAI;IACR,MAAO,IAAK;QACV,MAAM,cAAc,CAAC,AAAC,KAAK,MAAM,KAAK,KAAM,EAAE;IAChD;IACA,OAAO;AACT;AAEA,OAAO,OAAO,GAAG;IAAE;IAAQ;AAAQ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5116, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/raw.js"],"sourcesContent":["// Raw\n// -------\nconst { EventEmitter } = require('events');\nconst debug = require('debug');\nconst assign = require('lodash/assign');\nconst isPlainObject = require('lodash/isPlainObject');\nconst reduce = require('lodash/reduce');\n\nconst {\n  replaceRawArrBindings,\n  replaceKeyBindings,\n} = require('./formatter/rawFormatter');\nconst helpers = require('./util/helpers');\nconst saveAsyncStack = require('./util/save-async-stack');\nconst { nanoid } = require('./util/nanoid');\nconst { isNumber, isObject } = require('./util/is');\nconst {\n  augmentWithBuilderInterface,\n} = require('./builder-interface-augmenter');\n\nconst debugBindings = debug('knex:bindings');\n\nclass Raw extends EventEmitter {\n  constructor(client) {\n    super();\n\n    this.client = client;\n\n    this.sql = '';\n    this.bindings = [];\n\n    // Todo: Deprecate\n    this._wrappedBefore = undefined;\n    this._wrappedAfter = undefined;\n    if (client && client.config) {\n      this._debug = client.config.debug;\n      saveAsyncStack(this, 4);\n    }\n  }\n  set(sql, bindings) {\n    this.sql = sql;\n    this.bindings =\n      (isObject(bindings) && !bindings.toSQL) || bindings === undefined\n        ? bindings\n        : [bindings];\n\n    return this;\n  }\n\n  timeout(ms, { cancel } = {}) {\n    if (isNumber(ms) && ms > 0) {\n      this._timeout = ms;\n      if (cancel) {\n        this.client.assertCanCancelQuery();\n        this._cancelOnTimeout = true;\n      }\n    }\n    return this;\n  }\n\n  // Wraps the current sql with `before` and `after`.\n  wrap(before, after) {\n    this._wrappedBefore = before;\n    this._wrappedAfter = after;\n    return this;\n  }\n\n  // Calls `toString` on the Knex object.\n  toString() {\n    return this.toQuery();\n  }\n\n  // Returns the raw sql for the query.\n  toSQL(method, tz) {\n    let obj;\n    if (Array.isArray(this.bindings)) {\n      obj = replaceRawArrBindings(this, this.client);\n    } else if (this.bindings && isPlainObject(this.bindings)) {\n      obj = replaceKeyBindings(this, this.client);\n    } else {\n      obj = {\n        method: 'raw',\n        sql: this.sql,\n        bindings: this.bindings === undefined ? [] : [this.bindings],\n      };\n    }\n\n    if (this._wrappedBefore) {\n      obj.sql = this._wrappedBefore + obj.sql;\n    }\n    if (this._wrappedAfter) {\n      obj.sql = obj.sql + this._wrappedAfter;\n    }\n\n    obj.options = reduce(this._options, assign, {});\n\n    if (this._timeout) {\n      obj.timeout = this._timeout;\n      if (this._cancelOnTimeout) {\n        obj.cancelOnTimeout = this._cancelOnTimeout;\n      }\n    }\n\n    obj.bindings = obj.bindings || [];\n    if (helpers.containsUndefined(obj.bindings)) {\n      const undefinedBindingIndices = helpers.getUndefinedIndices(\n        this.bindings\n      );\n      debugBindings(obj.bindings);\n      throw new Error(\n        `Undefined binding(s) detected for keys [${undefinedBindingIndices}] when compiling RAW query: ${obj.sql}`\n      );\n    }\n\n    obj.__knexQueryUid = nanoid();\n\n    Object.defineProperties(obj, {\n      toNative: {\n        value: () => ({\n          sql: this.client.positionBindings(obj.sql),\n          bindings: this.client.prepBindings(obj.bindings),\n        }),\n        enumerable: false,\n      },\n    });\n\n    return obj;\n  }\n}\n\n// Workaround to avoid circular dependency between wrappingFormatter.unwrapRaw and rawFormatter\nRaw.prototype.isRawInstance = true;\n\n// Allow the `Raw` object to be utilized with full access to the relevant\n// promise API.\naugmentWithBuilderInterface(Raw);\nhelpers.addQueryContext(Raw);\n\nmodule.exports = Raw;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5231, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/query/querycompiler.js"],"sourcesContent":["// Query Compiler\n// -------\nconst helpers = require('../util/helpers');\nconst Raw = require('../raw');\nconst QueryBuilder = require('./querybuilder');\nconst JoinClause = require('./joinclause');\nconst debug = require('debug');\n\nconst assign = require('lodash/assign');\nconst compact = require('lodash/compact');\nconst groupBy = require('lodash/groupBy');\nconst has = require('lodash/has');\nconst isEmpty = require('lodash/isEmpty');\nconst map = require('lodash/map');\nconst omitBy = require('lodash/omitBy');\nconst reduce = require('lodash/reduce');\nconst { nanoid } = require('../util/nanoid');\nconst { isString, isUndefined } = require('../util/is');\nconst {\n  columnize: columnize_,\n  direction: direction_,\n  operator: operator_,\n  wrap: wrap_,\n  unwrapRaw: unwrapRaw_,\n  rawOrFn: rawOrFn_,\n} = require('../formatter/wrappingFormatter');\n\nconst debugBindings = debug('knex:bindings');\n\nconst components = [\n  'comments',\n  'columns',\n  'join',\n  'where',\n  'union',\n  'group',\n  'having',\n  'order',\n  'limit',\n  'offset',\n  'lock',\n  'waitMode',\n];\n\n// The \"QueryCompiler\" takes all of the query statements which\n// have been gathered in the \"QueryBuilder\" and turns them into a\n// properly formatted / bound query string.\nclass QueryCompiler {\n  constructor(client, builder, bindings) {\n    this.client = client;\n    this.method = builder._method || 'select';\n    this.options = builder._options;\n    this.single = builder._single;\n    this.queryComments = builder._comments;\n    this.timeout = builder._timeout || false;\n    this.cancelOnTimeout = builder._cancelOnTimeout || false;\n    this.grouped = groupBy(builder._statements, 'grouping');\n    this.formatter = client.formatter(builder);\n    // Used when the insert call is empty.\n    this._emptyInsertValue = 'default values';\n    this.first = this.select;\n\n    this.bindings = bindings || [];\n    this.formatter.bindings = this.bindings;\n    this.bindingsHolder = this;\n    this.builder = this.formatter.builder;\n  }\n\n  // Collapse the builder into a single object\n  toSQL(method, tz) {\n    this._undefinedInWhereClause = false;\n    this.undefinedBindingsInfo = [];\n\n    method = method || this.method;\n    const val = this[method]() || '';\n\n    const query = {\n      method,\n      options: reduce(this.options, assign, {}),\n      timeout: this.timeout,\n      cancelOnTimeout: this.cancelOnTimeout,\n      bindings: this.bindingsHolder.bindings || [],\n      __knexQueryUid: nanoid(),\n    };\n\n    Object.defineProperties(query, {\n      toNative: {\n        value: () => {\n          return {\n            sql: this.client.positionBindings(query.sql),\n            bindings: this.client.prepBindings(query.bindings),\n          };\n        },\n        enumerable: false,\n      },\n    });\n\n    if (isString(val)) {\n      query.sql = val;\n    } else {\n      assign(query, val);\n    }\n\n    if (method === 'select' || method === 'first') {\n      if (this.single.as) {\n        query.as = this.single.as;\n      }\n    }\n\n    if (this._undefinedInWhereClause) {\n      debugBindings(query.bindings);\n      throw new Error(\n        `Undefined binding(s) detected when compiling ` +\n          `${method.toUpperCase()}. Undefined column(s): [${this.undefinedBindingsInfo.join(\n            ', '\n          )}] query: ${query.sql}`\n      );\n    }\n\n    return query;\n  }\n\n  // Compiles the `select` statement, or nested sub-selects by calling each of\n  // the component compilers, trimming out the empties, and returning a\n  // generated query string.\n  select() {\n    let sql = this.with();\n\n    let unionStatement = '';\n\n    const firstStatements = [];\n    const endStatements = [];\n\n    components.forEach((component) => {\n      const statement = this[component](this);\n      // We store the 'union' statement to append it at the end.\n      // We still need to call the component sequentially because of\n      // order of bindings.\n      switch (component) {\n        case 'union':\n          unionStatement = statement;\n          break;\n        case 'comments':\n        case 'columns':\n        case 'join':\n        case 'where':\n          firstStatements.push(statement);\n          break;\n        default:\n          endStatements.push(statement);\n          break;\n      }\n    });\n\n    // Check if we need to wrap the main query.\n    // We need to wrap main query if one of union have wrap options to true\n    // to avoid error syntax (in PostgreSQL for example).\n    const wrapMainQuery =\n      this.grouped.union &&\n      this.grouped.union.map((u) => u.wrap).some((u) => u);\n\n    if (this.onlyUnions()) {\n      const statements = compact(firstStatements.concat(endStatements)).join(\n        ' '\n      );\n      sql += unionStatement + (statements ? ' ' + statements : '');\n    } else {\n      const allStatements =\n        (wrapMainQuery ? '(' : '') +\n        compact(firstStatements).join(' ') +\n        (wrapMainQuery ? ')' : '');\n      const endStat = compact(endStatements).join(' ');\n      sql +=\n        allStatements +\n        (unionStatement ? ' ' + unionStatement : '') +\n        (endStat ? ' ' + endStat : endStat);\n    }\n    return sql;\n  }\n\n  pluck() {\n    let toPluck = this.single.pluck;\n    if (toPluck.indexOf('.') !== -1) {\n      toPluck = toPluck.split('.').slice(-1)[0];\n    }\n    return {\n      sql: this.select(),\n      pluck: toPluck,\n    };\n  }\n\n  // Compiles an \"insert\" query, allowing for multiple\n  // inserts using a single query statement.\n  insert() {\n    const insertValues = this.single.insert || [];\n    const sql = this.with() + `insert into ${this.tableName} `;\n    const body = this._insertBody(insertValues);\n    return body === '' ? '' : sql + body;\n  }\n\n  _onConflictClause(columns) {\n    return columns instanceof Raw\n      ? this.formatter.wrap(columns)\n      : `(${this.formatter.columnize(columns)})`;\n  }\n\n  _buildInsertValues(insertData) {\n    let sql = '';\n    let i = -1;\n    while (++i < insertData.values.length) {\n      if (i !== 0) sql += '), (';\n      sql += this.client.parameterize(\n        insertData.values[i],\n        this.client.valueForUndefined,\n        this.builder,\n        this.bindingsHolder\n      );\n    }\n    return sql;\n  }\n\n  _insertBody(insertValues) {\n    let sql = '';\n    if (Array.isArray(insertValues)) {\n      if (insertValues.length === 0) {\n        return '';\n      }\n    } else if (typeof insertValues === 'object' && isEmpty(insertValues)) {\n      return sql + this._emptyInsertValue;\n    }\n\n    const insertData = this._prepInsert(insertValues);\n    if (typeof insertData === 'string') {\n      sql += insertData;\n    } else {\n      if (insertData.columns.length) {\n        sql += `(${columnize_(\n          insertData.columns,\n          this.builder,\n          this.client,\n          this.bindingsHolder\n        )}`;\n        sql += ') values (' + this._buildInsertValues(insertData) + ')';\n      } else if (insertValues.length === 1 && insertValues[0]) {\n        sql += this._emptyInsertValue;\n      } else {\n        sql = '';\n      }\n    }\n    return sql;\n  }\n\n  // Compiles the \"update\" query.\n  update() {\n    // Make sure tableName is processed by the formatter first.\n    const withSQL = this.with();\n    const { tableName } = this;\n    const updateData = this._prepUpdate(this.single.update);\n    const wheres = this.where();\n    return (\n      withSQL +\n      `update ${this.single.only ? 'only ' : ''}${tableName}` +\n      ' set ' +\n      updateData.join(', ') +\n      (wheres ? ` ${wheres}` : '')\n    );\n  }\n\n  _hintComments() {\n    let hints = this.grouped.hintComments || [];\n    hints = hints.map((hint) => compact(hint.value).join(' '));\n    hints = compact(hints).join(' ');\n    return hints ? `/*+ ${hints} */ ` : '';\n  }\n\n  // Compiles the columns in the query, specifying if an item was distinct.\n  columns() {\n    let distinctClause = '';\n    if (this.onlyUnions()) return '';\n    const hints = this._hintComments();\n    const columns = this.grouped.columns || [];\n    let i = -1,\n      sql = [];\n    if (columns) {\n      while (++i < columns.length) {\n        const stmt = columns[i];\n        if (stmt.distinct) distinctClause = 'distinct ';\n        if (stmt.distinctOn) {\n          distinctClause = this.distinctOn(stmt.value);\n          continue;\n        }\n        if (stmt.type === 'aggregate') {\n          sql.push(...this.aggregate(stmt));\n        } else if (stmt.type === 'aggregateRaw') {\n          sql.push(this.aggregateRaw(stmt));\n        } else if (stmt.type === 'analytic') {\n          sql.push(this.analytic(stmt));\n        } else if (stmt.type === 'json') {\n          sql.push(this.json(stmt));\n        } else if (stmt.value && stmt.value.length > 0) {\n          sql.push(\n            columnize_(\n              stmt.value,\n              this.builder,\n              this.client,\n              this.bindingsHolder\n            )\n          );\n        }\n      }\n    }\n    if (sql.length === 0) sql = ['*'];\n    const select = this.onlyJson() ? '' : 'select ';\n    return (\n      `${select}${hints}${distinctClause}` +\n      sql.join(', ') +\n      (this.tableName\n        ? ` from ${this.single.only ? 'only ' : ''}${this.tableName}`\n        : '')\n    );\n  }\n\n  // Add comments to the query\n  comments() {\n    if (!this.queryComments.length) return '';\n    return this.queryComments\n      .map((comment) => `/* ${comment.comment} */`)\n      .join(' ');\n  }\n\n  _aggregate(stmt, { aliasSeparator = ' as ', distinctParentheses } = {}) {\n    const value = stmt.value;\n    const method = stmt.method;\n    const distinct = stmt.aggregateDistinct ? 'distinct ' : '';\n    const wrap = (identifier) =>\n      wrap_(\n        identifier,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      );\n    const addAlias = (value, alias) => {\n      if (alias) {\n        return value + aliasSeparator + wrap(alias);\n      }\n      return value;\n    };\n    const aggregateArray = (value, alias) => {\n      let columns = value.map(wrap).join(', ');\n      if (distinct) {\n        const openParen = distinctParentheses ? '(' : ' ';\n        const closeParen = distinctParentheses ? ')' : '';\n        columns = distinct.trim() + openParen + columns + closeParen;\n      }\n      const aggregated = `${method}(${columns})`;\n      return addAlias(aggregated, alias);\n    };\n    const aggregateString = (value, alias) => {\n      const aggregated = `${method}(${distinct + wrap(value)})`;\n      return addAlias(aggregated, alias);\n    };\n\n    if (Array.isArray(value)) {\n      return [aggregateArray(value)];\n    }\n\n    if (typeof value === 'object') {\n      if (stmt.alias) {\n        throw new Error('When using an object explicit alias can not be used');\n      }\n      return Object.entries(value).map(([alias, column]) => {\n        if (Array.isArray(column)) {\n          return aggregateArray(column, alias);\n        }\n        return aggregateString(column, alias);\n      });\n    }\n\n    // Allows us to speciy an alias for the aggregate types.\n    const splitOn = value.toLowerCase().indexOf(' as ');\n    let column = value;\n    let { alias } = stmt;\n    if (splitOn !== -1) {\n      column = value.slice(0, splitOn);\n      if (alias) {\n        throw new Error(`Found multiple aliases for same column: ${column}`);\n      }\n      alias = value.slice(splitOn + 4);\n    }\n    return [aggregateString(column, alias)];\n  }\n\n  aggregate(stmt) {\n    return this._aggregate(stmt);\n  }\n\n  aggregateRaw(stmt) {\n    const distinct = stmt.aggregateDistinct ? 'distinct ' : '';\n    return `${stmt.method}(${\n      distinct +\n      unwrapRaw_(\n        stmt.value,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      )\n    })`;\n  }\n\n  _joinTable(join) {\n    return join.schema && !(join.table instanceof Raw)\n      ? `${join.schema}.${join.table}`\n      : join.table;\n  }\n\n  // Compiles all each of the `join` clauses on the query,\n  // including any nested join queries.\n  join() {\n    let sql = '';\n    let i = -1;\n    const joins = this.grouped.join;\n    if (!joins) return '';\n    while (++i < joins.length) {\n      const join = joins[i];\n      const table = this._joinTable(join);\n      if (i > 0) sql += ' ';\n      if (join.joinType === 'raw') {\n        sql += unwrapRaw_(\n          join.table,\n          undefined,\n          this.builder,\n          this.client,\n          this.bindingsHolder\n        );\n      } else {\n        sql +=\n          join.joinType +\n          ' join ' +\n          wrap_(\n            table,\n            undefined,\n            this.builder,\n            this.client,\n            this.bindingsHolder\n          );\n        let ii = -1;\n        while (++ii < join.clauses.length) {\n          const clause = join.clauses[ii];\n          if (ii > 0) {\n            sql += ` ${clause.bool} `;\n          } else {\n            sql += ` ${clause.type === 'onUsing' ? 'using' : 'on'} `;\n          }\n          const val = this[clause.type](clause);\n          if (val) {\n            sql += val;\n          }\n        }\n      }\n    }\n    return sql;\n  }\n\n  onBetween(statement) {\n    return (\n      wrap_(\n        statement.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' ' +\n      this._not(statement, 'between') +\n      ' ' +\n      statement.value\n        .map((value) =>\n          this.client.parameter(value, this.builder, this.bindingsHolder)\n        )\n        .join(' and ')\n    );\n  }\n\n  onNull(statement) {\n    return (\n      wrap_(\n        statement.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' is ' +\n      this._not(statement, 'null')\n    );\n  }\n\n  onExists(statement) {\n    return (\n      this._not(statement, 'exists') +\n      ' (' +\n      rawOrFn_(\n        statement.value,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ')'\n    );\n  }\n\n  onIn(statement) {\n    if (Array.isArray(statement.column)) return this.multiOnIn(statement);\n\n    let values;\n    if (statement.value instanceof Raw) {\n      values = this.client.parameter(\n        statement.value,\n        this.builder,\n        this.formatter\n      );\n    } else {\n      values = this.client.parameterize(\n        statement.value,\n        undefined,\n        this.builder,\n        this.bindingsHolder\n      );\n    }\n\n    return (\n      wrap_(\n        statement.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' ' +\n      this._not(statement, 'in ') +\n      this.wrap(values)\n    );\n  }\n\n  multiOnIn(statement) {\n    let i = -1,\n      sql = `(${columnize_(\n        statement.column,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      )}) `;\n    sql += this._not(statement, 'in ') + '((';\n    while (++i < statement.value.length) {\n      if (i !== 0) sql += '),(';\n      sql += this.client.parameterize(\n        statement.value[i],\n        undefined,\n        this.builder,\n        this.bindingsHolder\n      );\n    }\n    return sql + '))';\n  }\n\n  // Compiles all `where` statements on the query.\n  where() {\n    const wheres = this.grouped.where;\n    if (!wheres) return;\n    const sql = [];\n    let i = -1;\n    while (++i < wheres.length) {\n      const stmt = wheres[i];\n      if (\n        Object.prototype.hasOwnProperty.call(stmt, 'value') &&\n        helpers.containsUndefined(stmt.value)\n      ) {\n        this.undefinedBindingsInfo.push(stmt.column);\n        this._undefinedInWhereClause = true;\n      }\n      const val = this[stmt.type](stmt);\n      if (val) {\n        if (sql.length === 0) {\n          sql[0] = 'where';\n        } else {\n          sql.push(stmt.bool);\n        }\n        sql.push(val);\n      }\n    }\n    return sql.length > 1 ? sql.join(' ') : '';\n  }\n\n  group() {\n    return this._groupsOrders('group');\n  }\n\n  order() {\n    return this._groupsOrders('order');\n  }\n\n  // Compiles the `having` statements.\n  having() {\n    const havings = this.grouped.having;\n    if (!havings) return '';\n    const sql = ['having'];\n    for (let i = 0, l = havings.length; i < l; i++) {\n      const s = havings[i];\n      const val = this[s.type](s);\n      if (val) {\n        if (sql.length === 0) {\n          sql[0] = 'where';\n        }\n        if (sql.length > 1 || (sql.length === 1 && sql[0] !== 'having')) {\n          sql.push(s.bool);\n        }\n        sql.push(val);\n      }\n    }\n    return sql.length > 1 ? sql.join(' ') : '';\n  }\n\n  havingRaw(statement) {\n    return (\n      this._not(statement, '') +\n      unwrapRaw_(\n        statement.value,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      )\n    );\n  }\n\n  havingWrapped(statement) {\n    const val = rawOrFn_(\n      statement.value,\n      'where',\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    );\n    return (val && this._not(statement, '') + '(' + val.slice(6) + ')') || '';\n  }\n\n  havingBasic(statement) {\n    return (\n      this._not(statement, '') +\n      wrap_(\n        statement.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' ' +\n      operator_(\n        statement.operator,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' ' +\n      this.client.parameter(statement.value, this.builder, this.bindingsHolder)\n    );\n  }\n\n  havingNull(statement) {\n    return (\n      wrap_(\n        statement.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' is ' +\n      this._not(statement, 'null')\n    );\n  }\n\n  havingExists(statement) {\n    return (\n      this._not(statement, 'exists') +\n      ' (' +\n      rawOrFn_(\n        statement.value,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ')'\n    );\n  }\n\n  havingBetween(statement) {\n    return (\n      wrap_(\n        statement.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' ' +\n      this._not(statement, 'between') +\n      ' ' +\n      statement.value\n        .map((value) =>\n          this.client.parameter(value, this.builder, this.bindingsHolder)\n        )\n        .join(' and ')\n    );\n  }\n\n  havingIn(statement) {\n    if (Array.isArray(statement.column)) return this.multiHavingIn(statement);\n    return (\n      wrap_(\n        statement.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' ' +\n      this._not(statement, 'in ') +\n      this.wrap(\n        this.client.parameterize(\n          statement.value,\n          undefined,\n          this.builder,\n          this.bindingsHolder\n        )\n      )\n    );\n  }\n\n  multiHavingIn(statement) {\n    return this.multiOnIn(statement);\n  }\n\n  // Compile the \"union\" queries attached to the main query.\n  union() {\n    const onlyUnions = this.onlyUnions();\n    const unions = this.grouped.union;\n    if (!unions) return '';\n    let sql = '';\n    for (let i = 0, l = unions.length; i < l; i++) {\n      const union = unions[i];\n      if (i > 0) sql += ' ';\n      if (i > 0 || !onlyUnions) sql += union.clause + ' ';\n      const statement = rawOrFn_(\n        union.value,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      );\n      if (statement) {\n        const wrap = union.wrap;\n        if (wrap) sql += '(';\n        sql += statement;\n        if (wrap) sql += ')';\n      }\n    }\n    return sql;\n  }\n\n  // If we haven't specified any columns or a `tableName`, we're assuming this\n  // is only being used for unions.\n  onlyUnions() {\n    return (\n      (!this.grouped.columns || !!this.grouped.columns[0].value) &&\n      this.grouped.union &&\n      !this.tableName\n    );\n  }\n\n  _getValueOrParameterFromAttribute(attribute, rawValue) {\n    if (this.single.skipBinding[attribute] === true) {\n      return rawValue !== undefined && rawValue !== null\n        ? rawValue\n        : this.single[attribute];\n    }\n    return this.client.parameter(\n      this.single[attribute],\n      this.builder,\n      this.bindingsHolder\n    );\n  }\n\n  onlyJson() {\n    return (\n      !this.tableName &&\n      this.grouped.columns &&\n      this.grouped.columns.length === 1 &&\n      this.grouped.columns[0].type === 'json'\n    );\n  }\n\n  limit() {\n    const noLimit = !this.single.limit && this.single.limit !== 0;\n    if (noLimit) return '';\n    return `limit ${this._getValueOrParameterFromAttribute('limit')}`;\n  }\n\n  offset() {\n    if (!this.single.offset) return '';\n    return `offset ${this._getValueOrParameterFromAttribute('offset')}`;\n  }\n\n  // Compiles a `delete` query.\n  del() {\n    // Make sure tableName is processed by the formatter first.\n    const { tableName } = this;\n    const withSQL = this.with();\n    const wheres = this.where();\n    const joins = this.join();\n    // When using joins, delete the \"from\" table values as a default\n    const deleteSelector = joins ? tableName + ' ' : '';\n    return (\n      withSQL +\n      `delete ${deleteSelector}from ${\n        this.single.only ? 'only ' : ''\n      }${tableName}` +\n      (joins ? ` ${joins}` : '') +\n      (wheres ? ` ${wheres}` : '')\n    );\n  }\n\n  // Compiles a `truncate` query.\n  truncate() {\n    return `truncate ${this.tableName}`;\n  }\n\n  // Compiles the \"locks\".\n  lock() {\n    if (this.single.lock) {\n      return this[this.single.lock]();\n    }\n  }\n\n  // Compiles the wait mode on the locks.\n  waitMode() {\n    if (this.single.waitMode) {\n      return this[this.single.waitMode]();\n    }\n  }\n\n  // Fail on unsupported databases\n  skipLocked() {\n    throw new Error(\n      '.skipLocked() is currently only supported on MySQL 8.0+ and PostgreSQL 9.5+'\n    );\n  }\n\n  // Fail on unsupported databases\n  noWait() {\n    throw new Error(\n      '.noWait() is currently only supported on MySQL 8.0+, MariaDB 10.3.0+ and PostgreSQL 9.5+'\n    );\n  }\n\n  distinctOn(value) {\n    throw new Error('.distinctOn() is currently only supported on PostgreSQL');\n  }\n\n  // On Clause\n  // ------\n\n  onWrapped(clause) {\n    const self = this;\n\n    const wrapJoin = new JoinClause();\n    clause.value.call(wrapJoin, wrapJoin);\n\n    let sql = '';\n\n    for (let ii = 0; ii < wrapJoin.clauses.length; ii++) {\n      const wrapClause = wrapJoin.clauses[ii];\n      if (ii > 0) {\n        sql += ` ${wrapClause.bool} `;\n      }\n      const val = self[wrapClause.type](wrapClause);\n      if (val) {\n        sql += val;\n      }\n    }\n\n    if (sql.length) {\n      return `(${sql})`;\n    }\n    return '';\n  }\n\n  onBasic(clause) {\n    const toWrap = clause.value instanceof QueryBuilder;\n    return (\n      wrap_(\n        clause.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' ' +\n      operator_(\n        clause.operator,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' ' +\n      (toWrap ? '(' : '') +\n      wrap_(\n        clause.value,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      (toWrap ? ')' : '')\n    );\n  }\n\n  onVal(clause) {\n    return (\n      wrap_(\n        clause.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' ' +\n      operator_(\n        clause.operator,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' ' +\n      this.client.parameter(clause.value, this.builder, this.bindingsHolder)\n    );\n  }\n\n  onRaw(clause) {\n    return unwrapRaw_(\n      clause.value,\n      undefined,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    );\n  }\n\n  onUsing(clause) {\n    return (\n      '(' +\n      columnize_(\n        clause.column,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ')'\n    );\n  }\n\n  // Where Clause\n  // ------\n\n  _valueClause(statement) {\n    return statement.asColumn\n      ? wrap_(\n          statement.value,\n          undefined,\n          this.builder,\n          this.client,\n          this.bindingsHolder\n        )\n      : this.client.parameter(\n          statement.value,\n          this.builder,\n          this.bindingsHolder\n        );\n  }\n\n  _columnClause(statement) {\n    let columns;\n    if (Array.isArray(statement.column)) {\n      columns = `(${columnize_(\n        statement.column,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      )})`;\n    } else {\n      columns = wrap_(\n        statement.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      );\n    }\n    return columns;\n  }\n\n  whereIn(statement) {\n    const values = this.client.values(\n      statement.value,\n      this.builder,\n      this.bindingsHolder\n    );\n    return `${this._columnClause(statement)} ${this._not(\n      statement,\n      'in '\n    )}${values}`;\n  }\n\n  whereLike(statement) {\n    return `${this._columnClause(statement)} ${this._not(\n      statement,\n      'like '\n    )}${this._valueClause(statement)}`;\n  }\n\n  whereILike(statement) {\n    return `${this._columnClause(statement)} ${this._not(\n      statement,\n      'ilike '\n    )}${this._valueClause(statement)}`;\n  }\n\n  whereNull(statement) {\n    return (\n      wrap_(\n        statement.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' is ' +\n      this._not(statement, 'null')\n    );\n  }\n\n  // Compiles a basic \"where\" clause.\n  whereBasic(statement) {\n    return (\n      this._not(statement, '') +\n      wrap_(\n        statement.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' ' +\n      operator_(\n        statement.operator,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' ' +\n      this._valueClause(statement)\n    );\n  }\n\n  whereExists(statement) {\n    return (\n      this._not(statement, 'exists') +\n      ' (' +\n      rawOrFn_(\n        statement.value,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ')'\n    );\n  }\n\n  whereWrapped(statement) {\n    const val = rawOrFn_(\n      statement.value,\n      'where',\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    );\n    return (val && this._not(statement, '') + '(' + val.slice(6) + ')') || '';\n  }\n\n  whereBetween(statement) {\n    return (\n      wrap_(\n        statement.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ' ' +\n      this._not(statement, 'between') +\n      ' ' +\n      statement.value\n        .map((value) =>\n          this.client.parameter(value, this.builder, this.bindingsHolder)\n        )\n        .join(' and ')\n    );\n  }\n\n  // Compiles a \"whereRaw\" query.\n  whereRaw(statement) {\n    return (\n      this._not(statement, '') +\n      unwrapRaw_(\n        statement.value,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      )\n    );\n  }\n\n  _jsonWrapValue(jsonValue) {\n    if (!this.builder._isJsonObject(jsonValue)) {\n      try {\n        return JSON.stringify(JSON.parse(jsonValue.replace(/\\n|\\t/g, '')));\n      } catch (e) {\n        return jsonValue;\n      }\n    }\n    return JSON.stringify(jsonValue);\n  }\n\n  _jsonValueClause(statement) {\n    statement.value = this._jsonWrapValue(statement.value);\n    return this._valueClause(statement);\n  }\n\n  whereJsonObject(statement) {\n    return `${this._columnClause(statement)} ${\n      statement.not ? '!=' : '='\n    } ${this._jsonValueClause(statement)}`;\n  }\n\n  wrap(str) {\n    if (str.charAt(0) !== '(') return `(${str})`;\n    return str;\n  }\n\n  json(stmt) {\n    return this[stmt.method](stmt.params);\n  }\n\n  analytic(stmt) {\n    let sql = '';\n    const self = this;\n    sql += stmt.method + '() over (';\n\n    if (stmt.raw) {\n      sql += stmt.raw;\n    } else {\n      if (stmt.partitions.length) {\n        sql += 'partition by ';\n        sql +=\n          map(stmt.partitions, function (partition) {\n            if (isString(partition)) {\n              return self.formatter.columnize(partition);\n            } else return self.formatter.columnize(partition.column) + (partition.order ? ' ' + partition.order : '');\n          }).join(', ') + ' ';\n      }\n\n      sql += 'order by ';\n      sql += map(stmt.order, function (order) {\n        if (isString(order)) {\n          return self.formatter.columnize(order);\n        } else return self.formatter.columnize(order.column) + (order.order ? ' ' + order.order : '');\n      }).join(', ');\n    }\n\n    sql += ')';\n\n    if (stmt.alias) {\n      sql += ' as ' + stmt.alias;\n    }\n\n    return sql;\n  }\n\n  // Compiles all `with` statements on the query.\n  with() {\n    if (!this.grouped.with || !this.grouped.with.length) {\n      return '';\n    }\n    const withs = this.grouped.with;\n    if (!withs) return;\n    const sql = [];\n    let i = -1;\n    let isRecursive = false;\n    while (++i < withs.length) {\n      const stmt = withs[i];\n      if (stmt.recursive) {\n        isRecursive = true;\n      }\n      const val = this[stmt.type](stmt);\n      sql.push(val);\n    }\n    return `with ${isRecursive ? 'recursive ' : ''}${sql.join(', ')} `;\n  }\n\n  withWrapped(statement) {\n    const val = rawOrFn_(\n      statement.value,\n      undefined,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    );\n    const columnList = statement.columnList\n      ? '(' +\n        columnize_(\n          statement.columnList,\n          this.builder,\n          this.client,\n          this.bindingsHolder\n        ) +\n        ')'\n      : '';\n    const materialized =\n      statement.materialized === undefined\n        ? ''\n        : statement.materialized\n        ? 'materialized '\n        : 'not materialized ';\n    return (\n      (val &&\n        columnize_(\n          statement.alias,\n          this.builder,\n          this.client,\n          this.bindingsHolder\n        ) +\n          columnList +\n          ' as ' +\n          materialized +\n          '(' +\n          val +\n          ')') ||\n      ''\n    );\n  }\n\n  // Determines whether to add a \"not\" prefix to the where clause.\n  _not(statement, str) {\n    if (statement.not) return `not ${str}`;\n    return str;\n  }\n\n  _prepInsert(data) {\n    const isRaw = rawOrFn_(\n      data,\n      undefined,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    );\n    if (isRaw) return isRaw;\n    let columns = [];\n    const values = [];\n    if (!Array.isArray(data)) data = data ? [data] : [];\n    let i = -1;\n    while (++i < data.length) {\n      if (data[i] == null) break;\n      if (i === 0) columns = Object.keys(data[i]).sort();\n      const row = new Array(columns.length);\n      const keys = Object.keys(data[i]);\n      let j = -1;\n      while (++j < keys.length) {\n        const key = keys[j];\n        let idx = columns.indexOf(key);\n        if (idx === -1) {\n          columns = columns.concat(key).sort();\n          idx = columns.indexOf(key);\n          let k = -1;\n          while (++k < values.length) {\n            values[k].splice(idx, 0, undefined);\n          }\n          row.splice(idx, 0, undefined);\n        }\n        row[idx] = data[i][key];\n      }\n      values.push(row);\n    }\n    return {\n      columns,\n      values,\n    };\n  }\n\n  // \"Preps\" the update.\n  _prepUpdate(data = {}) {\n    const { counter = {} } = this.single;\n\n    for (const column of Object.keys(counter)) {\n      //Skip?\n      if (has(data, column)) {\n        //Needed?\n        this.client.logger.warn(\n          `increment/decrement called for a column that has already been specified in main .update() call. Ignoring increment/decrement and using value from .update() call.`\n        );\n        continue;\n      }\n\n      let value = counter[column];\n\n      const symbol = value < 0 ? '-' : '+';\n\n      if (symbol === '-') {\n        value = -value;\n      }\n\n      data[column] = this.client.raw(`?? ${symbol} ?`, [column, value]);\n    }\n\n    data = omitBy(data, isUndefined);\n\n    const vals = [];\n    const columns = Object.keys(data);\n    let i = -1;\n\n    while (++i < columns.length) {\n      vals.push(\n        wrap_(\n          columns[i],\n          undefined,\n          this.builder,\n          this.client,\n          this.bindingsHolder\n        ) +\n          ' = ' +\n          this.client.parameter(\n            data[columns[i]],\n            this.builder,\n            this.bindingsHolder\n          )\n      );\n    }\n\n    if (isEmpty(vals)) {\n      throw new Error(\n        [\n          'Empty .update() call detected!',\n          'Update data does not contain any values to update.',\n          'This will result in a faulty query.',\n          this.single.table ? `Table: ${this.single.table}.` : '',\n          this.single.update\n            ? `Columns: ${Object.keys(this.single.update)}.`\n            : '',\n        ].join(' ')\n      );\n    }\n\n    return vals;\n  }\n\n  _formatGroupsItemValue(value, nulls) {\n    const { formatter } = this;\n    let nullOrder = '';\n    if (nulls === 'last') {\n      nullOrder = ' is null';\n    } else if (nulls === 'first') {\n      nullOrder = ' is not null';\n    }\n\n    let groupOrder;\n    if (value instanceof Raw) {\n      groupOrder = unwrapRaw_(\n        value,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      );\n    } else if (value instanceof QueryBuilder || nulls) {\n      groupOrder = '(' + formatter.columnize(value) + nullOrder + ')';\n    } else {\n      groupOrder = formatter.columnize(value);\n    }\n    return groupOrder;\n  }\n\n  _basicGroupOrder(item, type) {\n    const column = this._formatGroupsItemValue(item.value, item.nulls);\n    const direction =\n      type === 'order' && item.type !== 'orderByRaw'\n        ? ` ${direction_(\n            item.direction,\n            this.builder,\n            this.client,\n            this.bindingsHolder\n          )}`\n        : '';\n    return column + direction;\n  }\n\n  _groupOrder(item, type) {\n    return this._basicGroupOrder(item, type);\n  }\n\n  _groupOrderNulls(item, type) {\n    const column = this._formatGroupsItemValue(item.value);\n    const direction =\n      type === 'order' && item.type !== 'orderByRaw'\n        ? ` ${direction_(\n            item.direction,\n            this.builder,\n            this.client,\n            this.bindingsHolder\n          )}`\n        : '';\n    if (item.nulls && !(item.value instanceof Raw)) {\n      return `${column}${direction ? direction : ''} nulls ${item.nulls}`;\n    }\n    return column + direction;\n  }\n\n  // Compiles the `order by` statements.\n  _groupsOrders(type) {\n    const items = this.grouped[type];\n    if (!items) return '';\n    const sql = items.map((item) => {\n      return this._groupOrder(item, type);\n    });\n    return sql.length ? type + ' by ' + sql.join(', ') : '';\n  }\n\n  // Get the table name, wrapping it if necessary.\n  // Implemented as a property to prevent ordering issues as described in #704.\n  get tableName() {\n    if (!this._tableName) {\n      // Only call this.formatter.wrap() the first time this property is accessed.\n      let tableName = this.single.table;\n      const schemaName = this.single.schema;\n\n      if (tableName && schemaName) {\n        const isQueryBuilder = tableName instanceof QueryBuilder;\n        const isRawQuery = tableName instanceof Raw;\n        const isFunction = typeof tableName === 'function';\n\n        if (!isQueryBuilder && !isRawQuery && !isFunction) {\n          tableName = `${schemaName}.${tableName}`;\n        }\n      }\n\n      this._tableName = tableName\n        ? // Wrap subQuery with parenthesis, #3485\n          wrap_(\n            tableName,\n            tableName instanceof QueryBuilder,\n            this.builder,\n            this.client,\n            this.bindingsHolder\n          )\n        : '';\n    }\n    return this._tableName;\n  }\n\n  _jsonPathWrap(extraction) {\n    return this.client.parameter(\n      extraction.path || extraction[1],\n      this.builder,\n      this.bindingsHolder\n    );\n  }\n\n  // Json common functions\n  _jsonExtract(nameFunction, params) {\n    let extractions;\n    if (Array.isArray(params.column)) {\n      extractions = params.column;\n    } else {\n      extractions = [params];\n    }\n    if (!Array.isArray(nameFunction)) {\n      nameFunction = [nameFunction];\n    }\n    return extractions\n      .map((extraction) => {\n        let jsonCol = `${columnize_(\n          extraction.column || extraction[0],\n          this.builder,\n          this.client,\n          this.bindingsHolder\n        )}, ${this._jsonPathWrap(extraction)}`;\n        nameFunction.forEach((f) => {\n          jsonCol = f + '(' + jsonCol + ')';\n        });\n        const alias = extraction.alias || extraction[2];\n        return alias\n          ? this.client.alias(jsonCol, this.formatter.wrap(alias))\n          : jsonCol;\n      })\n      .join(', ');\n  }\n\n  _jsonSet(nameFunction, params) {\n    const jsonSet = `${nameFunction}(${columnize_(\n      params.column,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    )}, ${this.client.parameter(\n      params.path,\n      this.builder,\n      this.bindingsHolder\n    )}, ${this.client.parameter(\n      params.value,\n      this.builder,\n      this.bindingsHolder\n    )})`;\n    return params.alias\n      ? this.client.alias(jsonSet, this.formatter.wrap(params.alias))\n      : jsonSet;\n  }\n\n  _whereJsonPath(nameFunction, statement) {\n    return `${nameFunction}(${this._columnClause(\n      statement\n    )}, ${this._jsonPathWrap({ path: statement.jsonPath })}) ${operator_(\n      statement.operator,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    )} ${this._jsonValueClause(statement)}`;\n  }\n\n  _onJsonPathEquals(nameJoinFunction, clause) {\n    return (\n      nameJoinFunction +\n      '(' +\n      wrap_(\n        clause.columnFirst,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ', ' +\n      this.client.parameter(\n        clause.jsonPathFirst,\n        this.builder,\n        this.bindingsHolder\n      ) +\n      ') = ' +\n      nameJoinFunction +\n      '(' +\n      wrap_(\n        clause.columnSecond,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ', ' +\n      this.client.parameter(\n        clause.jsonPathSecond,\n        this.builder,\n        this.bindingsHolder\n      ) +\n      ')'\n    );\n  }\n}\n\nmodule.exports = QueryCompiler;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6107, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/schema/builder.js"],"sourcesContent":["const { EventEmitter } = require('events');\nconst toArray = require('lodash/toArray');\nconst assign = require('lodash/assign');\nconst { addQueryContext } = require('../util/helpers');\nconst saveAsyncStack = require('../util/save-async-stack');\nconst {\n  augmentWithBuilderInterface,\n} = require('../builder-interface-augmenter');\n\n// Constructor for the builder instance, typically called from\n// `knex.builder`, accepting the current `knex` instance,\n// and pulling out the `client` and `grammar` from the current\n// knex instance.\nclass SchemaBuilder extends EventEmitter {\n  constructor(client) {\n    super();\n    this.client = client;\n    this._sequence = [];\n\n    if (client.config) {\n      this._debug = client.config.debug;\n      saveAsyncStack(this, 4);\n    }\n  }\n\n  withSchema(schemaName) {\n    this._schema = schemaName;\n    return this;\n  }\n\n  toString() {\n    return this.toQuery();\n  }\n\n  toSQL() {\n    return this.client.schemaCompiler(this).toSQL();\n  }\n\n  async generateDdlCommands() {\n    return await this.client.schemaCompiler(this).generateDdlCommands();\n  }\n}\n\n// Each of the schema builder methods just add to the\n// \"_sequence\" array for consistency.\n[\n  'createTable',\n  'createTableIfNotExists',\n  'createTableLike',\n  'createView',\n  'createViewOrReplace',\n  'createMaterializedView',\n  'refreshMaterializedView',\n  'dropView',\n  'dropViewIfExists',\n  'dropMaterializedView',\n  'dropMaterializedViewIfExists',\n  'createSchema',\n  'createSchemaIfNotExists',\n  'dropSchema',\n  'dropSchemaIfExists',\n  'createExtension',\n  'createExtensionIfNotExists',\n  'dropExtension',\n  'dropExtensionIfExists',\n  'table',\n  'alterTable',\n  'view',\n  'alterView',\n  'hasTable',\n  'hasColumn',\n  'dropTable',\n  'renameTable',\n  'renameView',\n  'dropTableIfExists',\n  'raw',\n].forEach(function (method) {\n  SchemaBuilder.prototype[method] = function () {\n    if (method === 'createTableIfNotExists') {\n      this.client.logger.warn(\n        [\n          'Use async .hasTable to check if table exists and then use plain .createTable. Since ',\n          '.createTableIfNotExists actually just generates plain \"CREATE TABLE IF NOT EXIST...\" ',\n          'query it will not work correctly if there are any alter table queries generated for ',\n          'columns afterwards. To not break old migrations this function is left untouched for now',\n          ', but it should not be used when writing new code and it is removed from documentation.',\n        ].join('')\n      );\n    }\n    if (method === 'table') method = 'alterTable';\n    if (method === 'view') method = 'alterView';\n    this._sequence.push({\n      method,\n      args: toArray(arguments),\n    });\n    return this;\n  };\n});\n\nSchemaBuilder.extend = (methodName, fn) => {\n  if (\n    Object.prototype.hasOwnProperty.call(SchemaBuilder.prototype, methodName)\n  ) {\n    throw new Error(\n      `Can't extend SchemaBuilder with existing method ('${methodName}').`\n    );\n  }\n\n  assign(SchemaBuilder.prototype, { [methodName]: fn });\n};\n\naugmentWithBuilderInterface(SchemaBuilder);\naddQueryContext(SchemaBuilder);\n\nmodule.exports = SchemaBuilder;\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,YAAY,EAAE;AACtB,MAAM;AACN,MAAM;AACN,MAAM,EAAE,eAAe,EAAE;AACzB,MAAM;AACN,MAAM,EACJ,2BAA2B,EAC5B;AAED,8DAA8D;AAC9D,yDAAyD;AACzD,8DAA8D;AAC9D,iBAAiB;AACjB,MAAM,sBAAsB;IAC1B,YAAY,MAAM,CAAE;QAClB,KAAK;QACL,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,SAAS,GAAG,EAAE;QAEnB,IAAI,OAAO,MAAM,EAAE;YACjB,IAAI,CAAC,MAAM,GAAG,OAAO,MAAM,CAAC,KAAK;YACjC,eAAe,IAAI,EAAE;QACvB;IACF;IAEA,WAAW,UAAU,EAAE;QACrB,IAAI,CAAC,OAAO,GAAG;QACf,OAAO,IAAI;IACb;IAEA,WAAW;QACT,OAAO,IAAI,CAAC,OAAO;IACrB;IAEA,QAAQ;QACN,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,KAAK;IAC/C;IAEA,MAAM,sBAAsB;QAC1B,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,mBAAmB;IACnE;AACF;AAEA,qDAAqD;AACrD,qCAAqC;AACrC;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD,CAAC,OAAO,CAAC,SAAU,MAAM;IACxB,cAAc,SAAS,CAAC,OAAO,GAAG;QAChC,IAAI,WAAW,0BAA0B;YACvC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CACrB;gBACE;gBACA;gBACA;gBACA;gBACA;aACD,CAAC,IAAI,CAAC;QAEX;QACA,IAAI,WAAW,SAAS,SAAS;QACjC,IAAI,WAAW,QAAQ,SAAS;QAChC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YAClB;YACA,MAAM,QAAQ;QAChB;QACA,OAAO,IAAI;IACb;AACF;AAEA,cAAc,MAAM,GAAG,CAAC,YAAY;IAClC,IACE,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,SAAS,EAAE,aAC9D;QACA,MAAM,IAAI,MACR,CAAC,kDAAkD,EAAE,WAAW,GAAG,CAAC;IAExE;IAEA,OAAO,cAAc,SAAS,EAAE;QAAE,CAAC,WAAW,EAAE;IAAG;AACrD;AAEA,4BAA4B;AAC5B,gBAAgB;AAEhB,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6210, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/schema/internal/helpers.js"],"sourcesContent":["const tail = require('lodash/tail');\nconst { isString } = require('../../util/is');\n\n// Push a new query onto the compiled \"sequence\" stack,\n// creating a new formatter, returning the compiler.\nfunction pushQuery(query) {\n  if (!query) return;\n  if (isString(query)) {\n    query = { sql: query };\n  }\n  if (!query.bindings) {\n    query.bindings = this.bindingsHolder.bindings;\n  }\n  this.sequence.push(query);\n\n  this.formatter = this.client.formatter(this._commonBuilder);\n  this.bindings = [];\n  this.formatter.bindings = this.bindings;\n}\n\n// Used in cases where we need to push some additional column specific statements.\nfunction pushAdditional(fn) {\n  const child = new this.constructor(\n    this.client,\n    this.tableCompiler,\n    this.columnBuilder\n  );\n  fn.call(child, tail(arguments));\n  this.sequence.additional = (this.sequence.additional || []).concat(\n    child.sequence\n  );\n}\n\n// Unshift a new query onto the compiled \"sequence\" stack,\n// creating a new formatter, returning the compiler.\nfunction unshiftQuery(query) {\n  if (!query) return;\n  if (isString(query)) {\n    query = { sql: query };\n  }\n  if (!query.bindings) {\n    query.bindings = this.bindingsHolder.bindings;\n  }\n  this.sequence.unshift(query);\n\n  this.formatter = this.client.formatter(this._commonBuilder);\n  this.bindings = [];\n  this.formatter.bindings = this.bindings;\n}\n\nmodule.exports = {\n  pushAdditional,\n  pushQuery,\n  unshiftQuery,\n};\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,EAAE,QAAQ,EAAE;AAElB,uDAAuD;AACvD,oDAAoD;AACpD,SAAS,UAAU,KAAK;IACtB,IAAI,CAAC,OAAO;IACZ,IAAI,SAAS,QAAQ;QACnB,QAAQ;YAAE,KAAK;QAAM;IACvB;IACA,IAAI,CAAC,MAAM,QAAQ,EAAE;QACnB,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ;IAC/C;IACA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;IAEnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc;IAC1D,IAAI,CAAC,QAAQ,GAAG,EAAE;IAClB,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ;AACzC;AAEA,kFAAkF;AAClF,SAAS,eAAe,EAAE;IACxB,MAAM,QAAQ,IAAI,IAAI,CAAC,WAAW,CAChC,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,aAAa,EAClB,IAAI,CAAC,aAAa;IAEpB,GAAG,IAAI,CAAC,OAAO,KAAK;IACpB,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,IAAI,EAAE,EAAE,MAAM,CAChE,MAAM,QAAQ;AAElB;AAEA,0DAA0D;AAC1D,oDAAoD;AACpD,SAAS,aAAa,KAAK;IACzB,IAAI,CAAC,OAAO;IACZ,IAAI,SAAS,QAAQ;QACnB,QAAQ;YAAE,KAAK;QAAM;IACvB;IACA,IAAI,CAAC,MAAM,QAAQ,EAAE;QACnB,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ;IAC/C;IACA,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;IAEtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc;IAC1D,IAAI,CAAC,QAAQ,GAAG,EAAE;IAClB,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ;AACzC;AAEA,OAAO,OAAO,GAAG;IACf;IACA;IACA;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6262, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/schema/compiler.js"],"sourcesContent":["const {\n  pushQuery,\n  pushAdditional,\n  unshiftQuery,\n} = require('./internal/helpers');\n\n// The \"SchemaCompiler\" takes all of the query statements which have been\n// gathered in the \"SchemaBuilder\" and turns them into an array of\n// properly formatted / bound query strings.\nclass SchemaCompiler {\n  constructor(client, builder) {\n    this.builder = builder;\n    this._commonBuilder = this.builder;\n    this.client = client;\n    this.schema = builder._schema;\n\n    this.bindings = [];\n    this.bindingsHolder = this;\n    this.formatter = client.formatter(builder);\n    this.formatter.bindings = this.bindings;\n    this.sequence = [];\n  }\n\n  createSchema() {\n    throwOnlyPGError('createSchema');\n  }\n\n  createSchemaIfNotExists() {\n    throwOnlyPGError('createSchemaIfNotExists');\n  }\n\n  dropSchema() {\n    throwOnlyPGError('dropSchema');\n  }\n\n  dropSchemaIfExists() {\n    throwOnlyPGError('dropSchemaIfExists');\n  }\n\n  dropTable(tableName) {\n    this.pushQuery(\n      this.dropTablePrefix +\n        this.formatter.wrap(prefixedTableName(this.schema, tableName))\n    );\n  }\n\n  dropTableIfExists(tableName) {\n    this.pushQuery(\n      this.dropTablePrefix +\n        'if exists ' +\n        this.formatter.wrap(prefixedTableName(this.schema, tableName))\n    );\n  }\n\n  dropView(viewName) {\n    this._dropView(viewName, false, false);\n  }\n\n  dropViewIfExists(viewName) {\n    this._dropView(viewName, true, false);\n  }\n\n  dropMaterializedView(viewName) {\n    throw new Error('materialized views are not supported by this dialect.');\n  }\n\n  dropMaterializedViewIfExists(viewName) {\n    throw new Error('materialized views are not supported by this dialect.');\n  }\n\n  renameView(from, to) {\n    throw new Error(\n      'rename view is not supported by this dialect (instead drop then create another view).'\n    );\n  }\n\n  refreshMaterializedView() {\n    throw new Error('materialized views are not supported by this dialect.');\n  }\n\n  _dropView(viewName, ifExists, materialized) {\n    this.pushQuery(\n      (materialized ? this.dropMaterializedViewPrefix : this.dropViewPrefix) +\n        (ifExists ? 'if exists ' : '') +\n        this.formatter.wrap(prefixedTableName(this.schema, viewName))\n    );\n  }\n\n  raw(sql, bindings) {\n    this.sequence.push(this.client.raw(sql, bindings).toSQL());\n  }\n\n  toSQL() {\n    const sequence = this.builder._sequence;\n    for (let i = 0, l = sequence.length; i < l; i++) {\n      const query = sequence[i];\n      this[query.method].apply(this, query.args);\n    }\n    return this.sequence;\n  }\n\n  async generateDdlCommands() {\n    const generatedCommands = this.toSQL();\n    return {\n      pre: [],\n      sql: Array.isArray(generatedCommands)\n        ? generatedCommands\n        : [generatedCommands],\n      check: null,\n      post: [],\n    };\n  }\n}\n\nSchemaCompiler.prototype.dropTablePrefix = 'drop table ';\nSchemaCompiler.prototype.dropViewPrefix = 'drop view ';\nSchemaCompiler.prototype.dropMaterializedViewPrefix = 'drop materialized view ';\nSchemaCompiler.prototype.alterViewPrefix = 'alter view ';\n\nSchemaCompiler.prototype.alterTable = buildTable('alter');\nSchemaCompiler.prototype.createTable = buildTable('create');\nSchemaCompiler.prototype.createTableIfNotExists = buildTable('createIfNot');\nSchemaCompiler.prototype.createTableLike = buildTable('createLike');\n\nSchemaCompiler.prototype.createView = buildView('create');\nSchemaCompiler.prototype.createViewOrReplace = buildView('createOrReplace');\nSchemaCompiler.prototype.createMaterializedView = buildView(\n  'createMaterializedView'\n);\nSchemaCompiler.prototype.alterView = buildView('alter');\n\nSchemaCompiler.prototype.pushQuery = pushQuery;\nSchemaCompiler.prototype.pushAdditional = pushAdditional;\nSchemaCompiler.prototype.unshiftQuery = unshiftQuery;\n\nfunction build(builder) {\n  // pass queryContext down to tableBuilder but do not overwrite it if already set\n  const queryContext = this.builder.queryContext();\n  if (queryContext !== undefined && builder.queryContext() === undefined) {\n    builder.queryContext(queryContext);\n  }\n\n  builder.setSchema(this.schema);\n  const sql = builder.toSQL();\n\n  for (let i = 0, l = sql.length; i < l; i++) {\n    this.sequence.push(sql[i]);\n  }\n}\n\nfunction buildTable(type) {\n  if (type === 'createLike') {\n    return function (tableName, tableNameLike, fn) {\n      const builder = this.client.tableBuilder(\n        type,\n        tableName,\n        tableNameLike,\n        fn\n      );\n      build.call(this, builder);\n    };\n  } else {\n    return function (tableName, fn) {\n      const builder = this.client.tableBuilder(type, tableName, null, fn);\n      build.call(this, builder);\n    };\n  }\n}\n\nfunction buildView(type) {\n  return function (viewName, fn) {\n    const builder = this.client.viewBuilder(type, viewName, fn);\n    build.call(this, builder);\n  };\n}\n\nfunction prefixedTableName(prefix, table) {\n  return prefix ? `${prefix}.${table}` : table;\n}\n\nfunction throwOnlyPGError(operationName) {\n  throw new Error(\n    `${operationName} is not supported for this dialect (only PostgreSQL supports it currently).`\n  );\n}\n\nmodule.exports = SchemaCompiler;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6398, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/schema/tablebuilder.js"],"sourcesContent":["// TableBuilder\n\n// Takes the function passed to the \"createTable\" or \"table/editTable\"\n// functions and calls it with the \"TableBuilder\" as both the context and\n// the first argument. Inside this function we can specify what happens to the\n// method, pushing everything we want to do onto the \"allStatements\" array,\n// which is then compiled into sql.\n// ------\nconst each = require('lodash/each');\nconst extend = require('lodash/extend');\nconst assign = require('lodash/assign');\nconst toArray = require('lodash/toArray');\nconst helpers = require('../util/helpers');\nconst { isString, isFunction, isObject } = require('../util/is');\n\nclass TableBuilder {\n  constructor(client, method, tableName, tableNameLike, fn) {\n    this.client = client;\n    this._fn = fn;\n    this._method = method;\n    this._schemaName = undefined;\n    this._tableName = tableName;\n    this._tableNameLike = tableNameLike;\n    this._statements = [];\n    this._single = {};\n\n    if (!tableNameLike && !isFunction(this._fn)) {\n      throw new TypeError(\n        'A callback function must be supplied to calls against `.createTable` ' +\n          'and `.table`'\n      );\n    }\n  }\n\n  setSchema(schemaName) {\n    this._schemaName = schemaName;\n  }\n\n  // Convert the current tableBuilder object \"toSQL\"\n  // giving us additional methods if we're altering\n  // rather than creating the table.\n  toSQL() {\n    if (this._method === 'alter') {\n      extend(this, AlterMethods);\n    }\n    // With 'create table ... like' callback function is useless.\n    if (this._fn) {\n      this._fn.call(this, this);\n    }\n    return this.client.tableCompiler(this).toSQL();\n  }\n\n  // The \"timestamps\" call is really just sets the `created_at` and `updated_at` columns.\n\n  timestamps(useTimestamps, defaultToNow, useCamelCase) {\n    if (isObject(useTimestamps)) {\n      ({ useTimestamps, defaultToNow, useCamelCase } = useTimestamps);\n    }\n    const method = useTimestamps === true ? 'timestamp' : 'datetime';\n    const createdAt = this[method](useCamelCase ? 'createdAt' : 'created_at');\n    const updatedAt = this[method](useCamelCase ? 'updatedAt' : 'updated_at');\n\n    if (defaultToNow === true) {\n      const now = this.client.raw('CURRENT_TIMESTAMP');\n      createdAt.notNullable().defaultTo(now);\n      updatedAt.notNullable().defaultTo(now);\n    }\n  }\n\n  // Set the comment value for a table, they're only allowed to be called\n  // once per table.\n  comment(value) {\n    if (typeof value !== 'string') {\n      throw new TypeError('Table comment must be string');\n    }\n    this._single.comment = value;\n  }\n\n  // Set a foreign key on the table, calling\n  // `table.foreign('column_name').references('column').on('table').onDelete()...\n  // Also called from the ColumnBuilder context when chaining.\n  foreign(column, keyName) {\n    const foreignData = { column: column, keyName: keyName };\n    this._statements.push({\n      grouping: 'alterTable',\n      method: 'foreign',\n      args: [foreignData],\n    });\n    let returnObj = {\n      references(tableColumn) {\n        let pieces;\n        if (isString(tableColumn)) {\n          pieces = tableColumn.split('.');\n        }\n        if (!pieces || pieces.length === 1) {\n          foreignData.references = pieces ? pieces[0] : tableColumn;\n          return {\n            on(tableName) {\n              if (typeof tableName !== 'string') {\n                throw new TypeError(\n                  `Expected tableName to be a string, got: ${typeof tableName}`\n                );\n              }\n              foreignData.inTable = tableName;\n              return returnObj;\n            },\n            inTable() {\n              return this.on.apply(this, arguments);\n            },\n          };\n        }\n        foreignData.inTable = pieces[0];\n        foreignData.references = pieces[1];\n        return returnObj;\n      },\n      withKeyName(keyName) {\n        foreignData.keyName = keyName;\n        return returnObj;\n      },\n      onUpdate(statement) {\n        foreignData.onUpdate = statement;\n        return returnObj;\n      },\n      onDelete(statement) {\n        foreignData.onDelete = statement;\n        return returnObj;\n      },\n      deferrable: (type) => {\n        const unSupported = [\n          'mysql',\n          'mssql',\n          'redshift',\n          'mysql2',\n          'oracledb',\n        ];\n        if (unSupported.indexOf(this.client.dialect) !== -1) {\n          throw new Error(`${this.client.dialect} does not support deferrable`);\n        }\n        foreignData.deferrable = type;\n        return returnObj;\n      },\n      _columnBuilder(builder) {\n        extend(builder, returnObj);\n        returnObj = builder;\n        return builder;\n      },\n    };\n    return returnObj;\n  }\n\n  check(checkPredicate, bindings, constraintName) {\n    this._statements.push({\n      grouping: 'checks',\n      args: [checkPredicate, bindings, constraintName],\n    });\n    return this;\n  }\n}\n\n[\n  // Each of the index methods can be called individually, with the\n  // column name to be used, e.g. table.unique('column').\n  'index',\n  'primary',\n  'unique',\n\n  // Key specific\n  'dropPrimary',\n  'dropUnique',\n  'dropIndex',\n  'dropForeign',\n].forEach((method) => {\n  TableBuilder.prototype[method] = function () {\n    this._statements.push({\n      grouping: 'alterTable',\n      method,\n      args: toArray(arguments),\n    });\n    return this;\n  };\n});\n\n// Warn for dialect-specific table methods, since that's the\n// only time these are supported.\nconst specialMethods = {\n  mysql: ['engine', 'charset', 'collate'],\n  postgresql: ['inherits'],\n};\neach(specialMethods, function (methods, dialect) {\n  methods.forEach(function (method) {\n    TableBuilder.prototype[method] = function (value) {\n      if (this.client.dialect !== dialect) {\n        throw new Error(\n          `Knex only supports ${method} statement with ${dialect}.`\n        );\n      }\n      if (this._method === 'alter') {\n        throw new Error(\n          `Knex does not support altering the ${method} outside of create ` +\n            `table, please use knex.raw statement.`\n        );\n      }\n      this._single[method] = value;\n    };\n  });\n});\n\nhelpers.addQueryContext(TableBuilder);\n\n// Each of the column types that we can add, we create a new ColumnBuilder\n// instance and push it onto the statements array.\nconst columnTypes = [\n  // Numeric\n  'tinyint',\n  'smallint',\n  'mediumint',\n  'int',\n  'bigint',\n  'decimal',\n  'float',\n  'double',\n  'real',\n  'bit',\n  'boolean',\n  'serial',\n\n  // Date / Time\n  'date',\n  'datetime',\n  'timestamp',\n  'time',\n  'year',\n\n  // Geometry\n  'geometry',\n  'geography',\n  'point',\n\n  // String\n  'char',\n  'varchar',\n  'tinytext',\n  'tinyText',\n  'text',\n  'mediumtext',\n  'mediumText',\n  'longtext',\n  'longText',\n  'binary',\n  'varbinary',\n  'tinyblob',\n  'tinyBlob',\n  'mediumblob',\n  'mediumBlob',\n  'blob',\n  'longblob',\n  'longBlob',\n  'enum',\n  'set',\n\n  // Increments, Aliases, and Additional\n  'bool',\n  'dateTime',\n  'increments',\n  'bigincrements',\n  'bigIncrements',\n  'integer',\n  'biginteger',\n  'bigInteger',\n  'string',\n  'json',\n  'jsonb',\n  'uuid',\n  'enu',\n  'specificType',\n];\n\n// For each of the column methods, create a new \"ColumnBuilder\" interface,\n// push it onto the \"allStatements\" stack, and then return the interface,\n// with which we can add indexes, etc.\ncolumnTypes.forEach((type) => {\n  TableBuilder.prototype[type] = function () {\n    const args = toArray(arguments);\n    const builder = this.client.columnBuilder(this, type, args);\n    this._statements.push({\n      grouping: 'columns',\n      builder,\n    });\n    return builder;\n  };\n});\n\nconst AlterMethods = {\n  // Renames the current column `from` the current\n  // TODO: this.column(from).rename(to)\n  renameColumn(from, to) {\n    this._statements.push({\n      grouping: 'alterTable',\n      method: 'renameColumn',\n      args: [from, to],\n    });\n    return this;\n  },\n\n  dropTimestamps() {\n    // arguments[0] = useCamelCase\n    return this.dropColumns(\n      arguments[0] === true\n        ? ['createdAt', 'updatedAt']\n        : ['created_at', 'updated_at']\n    );\n  },\n\n  setNullable(column) {\n    this._statements.push({\n      grouping: 'alterTable',\n      method: 'setNullable',\n      args: [column],\n    });\n\n    return this;\n  },\n\n  check(checkPredicate, bindings, constraintName) {\n    this._statements.push({\n      grouping: 'alterTable',\n      method: 'check',\n      args: [checkPredicate, bindings, constraintName],\n    });\n  },\n\n  dropChecks() {\n    this._statements.push({\n      grouping: 'alterTable',\n      method: 'dropChecks',\n      args: toArray(arguments),\n    });\n  },\n\n  dropNullable(column) {\n    this._statements.push({\n      grouping: 'alterTable',\n      method: 'dropNullable',\n      args: [column],\n    });\n\n    return this;\n  },\n\n  // TODO: changeType\n};\n\n// Drop a column from the current table.\n// TODO: Enable this.column(columnName).drop();\nAlterMethods.dropColumn = AlterMethods.dropColumns = function () {\n  this._statements.push({\n    grouping: 'alterTable',\n    method: 'dropColumn',\n    args: toArray(arguments),\n  });\n  return this;\n};\n\nTableBuilder.extend = (methodName, fn) => {\n  if (\n    Object.prototype.hasOwnProperty.call(TableBuilder.prototype, methodName)\n  ) {\n    throw new Error(\n      `Can't extend TableBuilder with existing method ('${methodName}').`\n    );\n  }\n\n  assign(TableBuilder.prototype, { [methodName]: fn });\n};\n\nmodule.exports = TableBuilder;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6760, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/schema/tablecompiler.js"],"sourcesContent":["/* eslint max-len:0 */\n\n// Table Compiler\n// -------\nconst {\n  pushAdditional,\n  pushQuery,\n  unshiftQuery,\n} = require('./internal/helpers');\nconst helpers = require('../util/helpers');\nconst groupBy = require('lodash/groupBy');\nconst indexOf = require('lodash/indexOf');\nconst isEmpty = require('lodash/isEmpty');\nconst tail = require('lodash/tail');\nconst { normalizeArr } = require('../util/helpers');\n\nclass TableCompiler {\n  constructor(client, tableBuilder) {\n    this.client = client;\n    this.tableBuilder = tableBuilder;\n    this._commonBuilder = this.tableBuilder;\n    this.method = tableBuilder._method;\n    this.schemaNameRaw = tableBuilder._schemaName;\n    this.tableNameRaw = tableBuilder._tableName;\n    this.tableNameLikeRaw = tableBuilder._tableNameLike;\n    this.single = tableBuilder._single;\n    this.grouped = groupBy(tableBuilder._statements, 'grouping');\n\n    this.formatter = client.formatter(tableBuilder);\n    this.bindings = [];\n    this.formatter.bindings = this.bindings;\n    this.bindingsHolder = this;\n\n    this.sequence = [];\n    this._formatting = client.config && client.config.formatting;\n\n    this.checksCount = 0;\n  }\n\n  // Convert the tableCompiler toSQL\n  toSQL() {\n    this[this.method]();\n    return this.sequence;\n  }\n\n  // Column Compilation\n  // -------\n\n  // If this is a table \"creation\", we need to first run through all\n  // of the columns to build them into a single string,\n  // and then run through anything else and push it to the query sequence.\n  create(ifNot, like) {\n    const columnBuilders = this.getColumns();\n    const columns = columnBuilders.map((col) => col.toSQL());\n    const columnTypes = this.getColumnTypes(columns);\n    if (this.createAlterTableMethods) {\n      this.alterTableForCreate(columnTypes);\n    }\n    this.createQuery(columnTypes, ifNot, like);\n    this.columnQueries(columns);\n    delete this.single.comment;\n    this.alterTable();\n  }\n\n  // Only create the table if it doesn't exist.\n  createIfNot() {\n    this.create(true);\n  }\n\n  createLike() {\n    this.create(false, true);\n  }\n\n  createLikeIfNot() {\n    this.create(true, true);\n  }\n\n  // If we're altering the table, we need to one-by-one\n  // go through and handle each of the queries associated\n  // with altering the table's schema.\n  alter() {\n    const addColBuilders = this.getColumns();\n    const addColumns = addColBuilders.map((col) => col.toSQL());\n    const alterColBuilders = this.getColumns('alter');\n    const alterColumns = alterColBuilders.map((col) => col.toSQL());\n    const addColumnTypes = this.getColumnTypes(addColumns);\n    const alterColumnTypes = this.getColumnTypes(alterColumns);\n\n    this.addColumns(addColumnTypes);\n    this.alterColumns(alterColumnTypes, alterColBuilders);\n    this.columnQueries(addColumns);\n    this.columnQueries(alterColumns);\n    this.alterTable();\n  }\n\n  foreign(foreignData) {\n    if (foreignData.inTable && foreignData.references) {\n      const keyName = foreignData.keyName\n        ? this.formatter.wrap(foreignData.keyName)\n        : this._indexCommand('foreign', this.tableNameRaw, foreignData.column);\n      const column = this.formatter.columnize(foreignData.column);\n      const references = this.formatter.columnize(foreignData.references);\n      const inTable = this.formatter.wrap(foreignData.inTable);\n      const onUpdate = foreignData.onUpdate\n        ? (this.lowerCase ? ' on update ' : ' ON UPDATE ') +\n          foreignData.onUpdate\n        : '';\n      const onDelete = foreignData.onDelete\n        ? (this.lowerCase ? ' on delete ' : ' ON DELETE ') +\n          foreignData.onDelete\n        : '';\n      const deferrable = foreignData.deferrable\n        ? this.lowerCase\n          ? ` deferrable initially ${foreignData.deferrable.toLowerCase()} `\n          : ` DEFERRABLE INITIALLY ${foreignData.deferrable.toUpperCase()} `\n        : '';\n      if (this.lowerCase) {\n        this.pushQuery(\n          (!this.forCreate ? `alter table ${this.tableName()} add ` : '') +\n            'constraint ' +\n            keyName +\n            ' ' +\n            'foreign key (' +\n            column +\n            ') references ' +\n            inTable +\n            ' (' +\n            references +\n            ')' +\n            onUpdate +\n            onDelete +\n            deferrable\n        );\n      } else {\n        this.pushQuery(\n          (!this.forCreate ? `ALTER TABLE ${this.tableName()} ADD ` : '') +\n            'CONSTRAINT ' +\n            keyName +\n            ' ' +\n            'FOREIGN KEY (' +\n            column +\n            ') REFERENCES ' +\n            inTable +\n            ' (' +\n            references +\n            ')' +\n            onUpdate +\n            onDelete +\n            deferrable\n        );\n      }\n    }\n  }\n\n  // Get all of the column sql & bindings individually for building the table queries.\n  getColumnTypes(columns) {\n    return columns.reduce(\n      function (memo, columnSQL) {\n        const column = columnSQL[0];\n        memo.sql.push(column.sql);\n        memo.bindings.concat(column.bindings);\n        return memo;\n      },\n      { sql: [], bindings: [] }\n    );\n  }\n\n  // Adds all of the additional queries from the \"column\"\n  columnQueries(columns) {\n    const queries = columns.reduce(function (memo, columnSQL) {\n      const column = tail(columnSQL);\n      if (!isEmpty(column)) return memo.concat(column);\n      return memo;\n    }, []);\n    for (const q of queries) {\n      this.pushQuery(q);\n    }\n  }\n\n  // All of the columns to \"add\" for the query\n  addColumns(columns, prefix) {\n    prefix = prefix || this.addColumnsPrefix;\n\n    if (columns.sql.length > 0) {\n      const columnSql = columns.sql.map((column) => {\n        return prefix + column;\n      });\n      this.pushQuery({\n        sql:\n          (this.lowerCase ? 'alter table ' : 'ALTER TABLE ') +\n          this.tableName() +\n          ' ' +\n          columnSql.join(', '),\n        bindings: columns.bindings,\n      });\n    }\n  }\n\n  alterColumns(columns, colBuilders) {\n    if (columns.sql.length > 0) {\n      this.addColumns(columns, this.alterColumnsPrefix, colBuilders);\n    }\n  }\n\n  // Compile the columns as needed for the current create or alter table\n  getColumns(method) {\n    const columns = this.grouped.columns || [];\n    method = method || 'add';\n\n    const queryContext = this.tableBuilder.queryContext();\n\n    return columns\n      .filter((column) => column.builder._method === method)\n      .map((column) => {\n        // pass queryContext down to columnBuilder but do not overwrite it if already set\n        if (\n          queryContext !== undefined &&\n          column.builder.queryContext() === undefined\n        ) {\n          column.builder.queryContext(queryContext);\n        }\n        return this.client.columnCompiler(this, column.builder);\n      });\n  }\n\n  tableName() {\n    const name = this.schemaNameRaw\n      ? `${this.schemaNameRaw}.${this.tableNameRaw}`\n      : this.tableNameRaw;\n\n    return this.formatter.wrap(name);\n  }\n\n  tableNameLike() {\n    const name = this.schemaNameRaw\n      ? `${this.schemaNameRaw}.${this.tableNameLikeRaw}`\n      : this.tableNameLikeRaw;\n\n    return this.formatter.wrap(name);\n  }\n\n  // Generate all of the alter column statements necessary for the query.\n  alterTable() {\n    const alterTable = this.grouped.alterTable || [];\n    for (let i = 0, l = alterTable.length; i < l; i++) {\n      const statement = alterTable[i];\n      if (this[statement.method]) {\n        this[statement.method].apply(this, statement.args);\n      } else {\n        this.client.logger.error(`Debug: ${statement.method} does not exist`);\n      }\n    }\n    for (const item in this.single) {\n      if (typeof this[item] === 'function') this[item](this.single[item]);\n    }\n  }\n\n  alterTableForCreate(columnTypes) {\n    this.forCreate = true;\n    const savedSequence = this.sequence;\n    const alterTable = this.grouped.alterTable || [];\n    this.grouped.alterTable = [];\n    for (let i = 0, l = alterTable.length; i < l; i++) {\n      const statement = alterTable[i];\n      if (indexOf(this.createAlterTableMethods, statement.method) < 0) {\n        this.grouped.alterTable.push(statement);\n        continue;\n      }\n      if (this[statement.method]) {\n        this.sequence = [];\n        this[statement.method].apply(this, statement.args);\n        columnTypes.sql.push(this.sequence[0].sql);\n      } else {\n        this.client.logger.error(`Debug: ${statement.method} does not exist`);\n      }\n    }\n    this.sequence = savedSequence;\n    this.forCreate = false;\n  }\n\n  // Drop the index on the current table.\n  dropIndex(value) {\n    this.pushQuery(`drop index${value}`);\n  }\n\n  dropUnique() {\n    throw new Error('Method implemented in the dialect driver');\n  }\n\n  dropForeign() {\n    throw new Error('Method implemented in the dialect driver');\n  }\n\n  dropColumn() {\n    const columns = helpers.normalizeArr.apply(null, arguments);\n    const drops = (Array.isArray(columns) ? columns : [columns]).map(\n      (column) => {\n        return this.dropColumnPrefix + this.formatter.wrap(column);\n      }\n    );\n    this.pushQuery(\n      (this.lowerCase ? 'alter table ' : 'ALTER TABLE ') +\n        this.tableName() +\n        ' ' +\n        drops.join(', ')\n    );\n  }\n\n  //Default implementation of setNullable. Overwrite on dialect-specific tablecompiler when needed\n  //(See postgres/mssql for reference)\n  _setNullableState(column, nullable) {\n    const tableName = this.tableName();\n    const columnName = this.formatter.columnize(column);\n    const alterColumnPrefix = this.alterColumnsPrefix;\n    return this.pushQuery({\n      sql: 'SELECT 1',\n      output: () => {\n        return this.client\n          .queryBuilder()\n          .from(this.tableNameRaw)\n          .columnInfo(column)\n          .then((columnInfo) => {\n            if (isEmpty(columnInfo)) {\n              throw new Error(\n                `.setNullable: Column ${columnName} does not exist in table ${tableName}.`\n              );\n            }\n            const nullableType = nullable ? 'null' : 'not null';\n            const columnType =\n              columnInfo.type +\n              (columnInfo.maxLength ? `(${columnInfo.maxLength})` : '');\n            const defaultValue =\n              columnInfo.defaultValue !== null &&\n              columnInfo.defaultValue !== void 0\n                ? `default '${columnInfo.defaultValue}'`\n                : '';\n            const sql = `alter table ${tableName} ${alterColumnPrefix} ${columnName} ${columnType} ${nullableType} ${defaultValue}`;\n            return this.client.raw(sql);\n          });\n      },\n    });\n  }\n\n  setNullable(column) {\n    return this._setNullableState(column, true);\n  }\n\n  dropNullable(column) {\n    return this._setNullableState(column, false);\n  }\n\n  dropChecks(checkConstraintNames) {\n    if (checkConstraintNames === undefined) return '';\n    checkConstraintNames = normalizeArr(checkConstraintNames);\n    const tableName = this.tableName();\n    const sql = `alter table ${tableName} ${checkConstraintNames\n      .map((constraint) => `drop constraint ${constraint}`)\n      .join(', ')}`;\n    this.pushQuery(sql);\n  }\n\n  check(checkPredicate, bindings, constraintName) {\n    const tableName = this.tableName();\n    let checkConstraint = constraintName;\n    if (!checkConstraint) {\n      this.checksCount++;\n      checkConstraint = tableName + '_' + this.checksCount;\n    }\n    const sql = `alter table ${tableName} add constraint ${checkConstraint} check(${checkPredicate})`;\n    this.pushQuery(sql);\n  }\n\n  _addChecks() {\n    if (this.grouped.checks) {\n      return (\n        ', ' +\n        this.grouped.checks\n          .map((c) => {\n            return `${\n              c.args[2] ? 'constraint ' + c.args[2] + ' ' : ''\n            }check (${this.client.raw(c.args[0], c.args[1])})`;\n          })\n          .join(', ')\n      );\n    }\n    return '';\n  }\n\n  // If no name was specified for this index, we will create one using a basic\n  // convention of the table name, followed by the columns, followed by an\n  // index type, such as primary or index, which makes the index unique.\n  _indexCommand(type, tableName, columns) {\n    if (!Array.isArray(columns)) columns = columns ? [columns] : [];\n    const table = tableName.replace(/\\.|-/g, '_');\n    const indexName = (\n      table +\n      '_' +\n      columns.join('_') +\n      '_' +\n      type\n    ).toLowerCase();\n    return this.formatter.wrap(indexName);\n  }\n\n  _getPrimaryKeys() {\n    return (this.grouped.alterTable || [])\n      .filter((a) => a.method === 'primary')\n      .flatMap((a) => a.args)\n      .flat();\n  }\n\n  _canBeAddPrimaryKey(options) {\n    return options.primaryKey && this._getPrimaryKeys().length === 0;\n  }\n\n  _getIncrementsColumnNames() {\n    return this.grouped.columns\n      .filter((c) => c.builder._type === 'increments')\n      .map((c) => c.builder._args[0]);\n  }\n\n  _getBigIncrementsColumnNames() {\n    return this.grouped.columns\n      .filter((c) => c.builder._type === 'bigincrements')\n      .map((c) => c.builder._args[0]);\n  }\n}\n\nTableCompiler.prototype.pushQuery = pushQuery;\nTableCompiler.prototype.pushAdditional = pushAdditional;\nTableCompiler.prototype.unshiftQuery = unshiftQuery;\nTableCompiler.prototype.lowerCase = true;\nTableCompiler.prototype.createAlterTableMethods = null;\nTableCompiler.prototype.addColumnsPrefix = 'add column ';\nTableCompiler.prototype.alterColumnsPrefix = 'alter column ';\nTableCompiler.prototype.modifyColumnPrefix = 'modify column ';\nTableCompiler.prototype.dropColumnPrefix = 'drop column ';\n\nmodule.exports = TableCompiler;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7062, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/schema/columnbuilder.js"],"sourcesContent":["const extend = require('lodash/extend');\nconst assign = require('lodash/assign');\nconst toArray = require('lodash/toArray');\nconst { addQueryContext } = require('../util/helpers');\n\n// The chainable interface off the original \"column\" method.\nclass ColumnBuilder {\n  constructor(client, tableBuilder, type, args) {\n    this.client = client;\n    this._method = 'add';\n    this._single = {};\n    this._modifiers = {};\n    this._statements = [];\n    this._type = columnAlias[type] || type;\n    this._args = args;\n    this._tableBuilder = tableBuilder;\n\n    // If we're altering the table, extend the object\n    // with the available \"alter\" methods.\n    if (tableBuilder._method === 'alter') {\n      extend(this, AlterMethods);\n    }\n  }\n\n  // Specify that the current column \"references\" a column,\n  // which may be tableName.column or just \"column\"\n  references(value) {\n    return this._tableBuilder.foreign\n      .call(this._tableBuilder, this._args[0], undefined, this)\n      ._columnBuilder(this)\n      .references(value);\n  }\n}\n\n// All of the modifier methods that can be used to modify the current query.\nconst modifiers = [\n  'default',\n  'defaultsTo',\n  'defaultTo',\n  'unsigned',\n  'nullable',\n  'first',\n  'after',\n  'comment',\n  'collate',\n  'check',\n  'checkPositive',\n  'checkNegative',\n  'checkIn',\n  'checkNotIn',\n  'checkBetween',\n  'checkLength',\n  'checkRegex',\n];\n\n// Aliases for convenience.\nconst aliasMethod = {\n  default: 'defaultTo',\n  defaultsTo: 'defaultTo',\n};\n\n// If we call any of the modifiers (index or otherwise) on the chainable, we pretend\n// as though we're calling `table.method(column)` directly.\nmodifiers.forEach(function (method) {\n  const key = aliasMethod[method] || method;\n  ColumnBuilder.prototype[method] = function () {\n    this._modifiers[key] = toArray(arguments);\n    return this;\n  };\n});\n\naddQueryContext(ColumnBuilder);\n\nColumnBuilder.prototype.notNull = ColumnBuilder.prototype.notNullable =\n  function notNullable() {\n    return this.nullable(false);\n  };\n\n['index', 'primary', 'unique'].forEach(function (method) {\n  ColumnBuilder.prototype[method] = function () {\n    if (this._type.toLowerCase().indexOf('increments') === -1) {\n      this._tableBuilder[method].apply(\n        this._tableBuilder,\n        [this._args[0]].concat(toArray(arguments))\n      );\n    }\n    return this;\n  };\n});\n\nColumnBuilder.extend = (methodName, fn) => {\n  if (\n    Object.prototype.hasOwnProperty.call(ColumnBuilder.prototype, methodName)\n  ) {\n    throw new Error(\n      `Can't extend ColumnBuilder with existing method ('${methodName}').`\n    );\n  }\n\n  assign(ColumnBuilder.prototype, { [methodName]: fn });\n};\n\nconst AlterMethods = {};\n\n// Specify that the column is to be dropped. This takes precedence\n// over all other rules for the column.\nAlterMethods.drop = function () {\n  this._single.drop = true;\n\n  return this;\n};\n\n// Specify the \"type\" that we're looking to set the\n// Knex takes no responsibility for any data-loss that may\n// occur when changing data types.\nAlterMethods.alterType = function (type) {\n  this._statements.push({\n    grouping: 'alterType',\n    value: type,\n  });\n\n  return this;\n};\n\n// Set column method to alter (default is add).\nAlterMethods.alter = function ({\n  alterNullable = true,\n  alterType = true,\n} = {}) {\n  this._method = 'alter';\n  this.alterNullable = alterNullable;\n  this.alterType = alterType;\n\n  return this;\n};\n\n// Alias a few methods for clarity when processing.\nconst columnAlias = {\n  float: 'floating',\n  enum: 'enu',\n  boolean: 'bool',\n  string: 'varchar',\n  bigint: 'bigInteger',\n};\n\nmodule.exports = ColumnBuilder;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7187, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/schema/columncompiler.js"],"sourcesContent":["// Column Compiler\n// Used for designating column definitions\n// during the table \"create\" / \"alter\" statements.\n// -------\nconst helpers = require('./internal/helpers');\nconst groupBy = require('lodash/groupBy');\nconst first = require('lodash/first');\nconst has = require('lodash/has');\nconst tail = require('lodash/tail');\nconst { toNumber } = require('../util/helpers');\nconst { formatDefault } = require('../formatter/formatterUtils');\nconst { operator: operator_ } = require('../formatter/wrappingFormatter');\n\nclass ColumnCompiler {\n  constructor(client, tableCompiler, columnBuilder) {\n    this.client = client;\n    this.tableCompiler = tableCompiler;\n    this.columnBuilder = columnBuilder;\n    this._commonBuilder = this.columnBuilder;\n    this.args = columnBuilder._args;\n    this.type = columnBuilder._type.toLowerCase();\n    this.grouped = groupBy(columnBuilder._statements, 'grouping');\n    this.modified = columnBuilder._modifiers;\n    this.isIncrements = this.type.indexOf('increments') !== -1;\n\n    this.formatter = client.formatter(columnBuilder);\n    this.bindings = [];\n    this.formatter.bindings = this.bindings;\n    this.bindingsHolder = this;\n\n    this.sequence = [];\n    this.modifiers = [];\n\n    this.checksCount = 0;\n  }\n\n  _addCheckModifiers() {\n    this.modifiers.push(\n      'check',\n      'checkPositive',\n      'checkNegative',\n      'checkIn',\n      'checkNotIn',\n      'checkBetween',\n      'checkLength',\n      'checkRegex'\n    );\n  }\n\n  defaults(label) {\n    if (Object.prototype.hasOwnProperty.call(this._defaultMap, label)) {\n      return this._defaultMap[label].bind(this)();\n    } else {\n      throw new Error(\n        `There is no default for the specified identifier ${label}`\n      );\n    }\n  }\n\n  // To convert to sql, we first go through and build the\n  // column as it would be in the insert statement\n  toSQL() {\n    this.pushQuery(this.compileColumn());\n    if (this.sequence.additional) {\n      this.sequence = this.sequence.concat(this.sequence.additional);\n    }\n    return this.sequence;\n  }\n\n  // Compiles a column.\n  compileColumn() {\n    return (\n      this.formatter.wrap(this.getColumnName()) +\n      ' ' +\n      this.getColumnType() +\n      this.getModifiers()\n    );\n  }\n\n  // Assumes the autoincrementing key is named `id` if not otherwise specified.\n  getColumnName() {\n    const value = first(this.args);\n    return value || this.defaults('columnName');\n  }\n\n  getColumnType() {\n    // Column type is cached so side effects (such as in pg native enums) are only run once\n    if (!this._columnType) {\n      const type = this[this.type];\n      this._columnType =\n        typeof type === 'function' ? type.apply(this, tail(this.args)) : type;\n    }\n\n    return this._columnType;\n  }\n\n  getModifiers() {\n    const modifiers = [];\n\n    for (let i = 0, l = this.modifiers.length; i < l; i++) {\n      const modifier = this.modifiers[i];\n\n      //Cannot allow 'nullable' modifiers on increments types\n      if (!this.isIncrements || (this.isIncrements && modifier === 'comment')) {\n        if (has(this.modified, modifier)) {\n          const val = this[modifier].apply(this, this.modified[modifier]);\n          if (val) modifiers.push(val);\n        }\n      }\n    }\n\n    return modifiers.length > 0 ? ` ${modifiers.join(' ')}` : '';\n  }\n\n  // Types\n  // ------\n  varchar(length) {\n    return `varchar(${toNumber(length, 255)})`;\n  }\n\n  floating(precision, scale) {\n    return `float(${toNumber(precision, 8)}, ${toNumber(scale, 2)})`;\n  }\n\n  decimal(precision, scale) {\n    if (precision === null) {\n      throw new Error(\n        'Specifying no precision on decimal columns is not supported for that SQL dialect.'\n      );\n    }\n    return `decimal(${toNumber(precision, 8)}, ${toNumber(scale, 2)})`;\n  }\n\n  // Used to support custom types\n  specifictype(type) {\n    return type;\n  }\n\n  // Modifiers\n  // -------\n\n  nullable(nullable) {\n    return nullable === false ? 'not null' : 'null';\n  }\n\n  notNullable() {\n    return this.nullable(false);\n  }\n\n  defaultTo(value) {\n    return `default ${formatDefault(value, this.type, this.client)}`;\n  }\n\n  increments(options = { primaryKey: true }) {\n    return (\n      'integer not null' +\n      (this.tableCompiler._canBeAddPrimaryKey(options) ? ' primary key' : '') +\n      ' autoincrement'\n    );\n  }\n\n  bigincrements(options = { primaryKey: true }) {\n    return this.increments(options);\n  }\n\n  _pushAlterCheckQuery(checkPredicate, constraintName) {\n    let checkName = constraintName;\n    if (!checkName) {\n      this.checksCount++;\n      checkName =\n        this.tableCompiler.tableNameRaw +\n        '_' +\n        this.getColumnName() +\n        '_' +\n        this.checksCount;\n    }\n    this.pushAdditional(function () {\n      this.pushQuery(\n        `alter table ${this.tableCompiler.tableName()} add constraint ${checkName} check(${checkPredicate})`\n      );\n    });\n  }\n\n  _checkConstraintName(constraintName) {\n    return constraintName ? `constraint ${constraintName} ` : '';\n  }\n\n  _check(checkPredicate, constraintName) {\n    if (this.columnBuilder._method === 'alter') {\n      this._pushAlterCheckQuery(checkPredicate, constraintName);\n      return '';\n    }\n    return `${this._checkConstraintName(\n      constraintName\n    )}check (${checkPredicate})`;\n  }\n\n  checkPositive(constraintName) {\n    return this._check(\n      `${this.formatter.wrap(this.getColumnName())} ${operator_(\n        '>',\n        this.columnBuilder,\n        this.bindingsHolder\n      )} 0`,\n      constraintName\n    );\n  }\n\n  checkNegative(constraintName) {\n    return this._check(\n      `${this.formatter.wrap(this.getColumnName())} ${operator_(\n        '<',\n        this.columnBuilder,\n        this.bindingsHolder\n      )} 0`,\n      constraintName\n    );\n  }\n\n  _checkIn(values, constraintName, not) {\n    return this._check(\n      `${this.formatter.wrap(this.getColumnName())} ${\n        not ? 'not ' : ''\n      }in (${values.map((v) => this.client._escapeBinding(v)).join(',')})`,\n      constraintName\n    );\n  }\n\n  checkIn(values, constraintName) {\n    return this._checkIn(values, constraintName);\n  }\n\n  checkNotIn(values, constraintName) {\n    return this._checkIn(values, constraintName, true);\n  }\n\n  checkBetween(intervals, constraintName) {\n    if (\n      intervals.length === 2 &&\n      !Array.isArray(intervals[0]) &&\n      !Array.isArray(intervals[1])\n    ) {\n      intervals = [intervals];\n    }\n    const intervalChecks = intervals\n      .map((interval) => {\n        return `${this.formatter.wrap(\n          this.getColumnName()\n        )} between ${this.client._escapeBinding(\n          interval[0]\n        )} and ${this.client._escapeBinding(interval[1])}`;\n      })\n      .join(' or ');\n    return this._check(intervalChecks, constraintName);\n  }\n\n  checkLength(operator, length, constraintName) {\n    return this._check(\n      `length(${this.formatter.wrap(this.getColumnName())}) ${operator_(\n        operator,\n        this.columnBuilder,\n        this.bindingsHolder\n      )} ${toNumber(length)}`,\n      constraintName\n    );\n  }\n}\n\nColumnCompiler.prototype.binary = 'blob';\nColumnCompiler.prototype.bool = 'boolean';\nColumnCompiler.prototype.date = 'date';\nColumnCompiler.prototype.datetime = 'datetime';\nColumnCompiler.prototype.time = 'time';\nColumnCompiler.prototype.timestamp = 'timestamp';\nColumnCompiler.prototype.geometry = 'geometry';\nColumnCompiler.prototype.geography = 'geography';\nColumnCompiler.prototype.point = 'point';\nColumnCompiler.prototype.enu = 'varchar';\nColumnCompiler.prototype.bit = ColumnCompiler.prototype.json = 'text';\nColumnCompiler.prototype.uuid = ({\n  useBinaryUuid = false,\n  primaryKey = false,\n} = {}) => (useBinaryUuid ? 'binary(16)' : 'char(36)');\nColumnCompiler.prototype.integer =\n  ColumnCompiler.prototype.smallint =\n  ColumnCompiler.prototype.mediumint =\n    'integer';\nColumnCompiler.prototype.biginteger = 'bigint';\nColumnCompiler.prototype.text = 'text';\nColumnCompiler.prototype.tinyint = 'tinyint';\n\nColumnCompiler.prototype.pushQuery = helpers.pushQuery;\nColumnCompiler.prototype.pushAdditional = helpers.pushAdditional;\nColumnCompiler.prototype.unshiftQuery = helpers.unshiftQuery;\n\nColumnCompiler.prototype._defaultMap = {\n  columnName: function () {\n    if (!this.isIncrements) {\n      throw new Error(\n        `You did not specify a column name for the ${this.type} column.`\n      );\n    }\n    return 'id';\n  },\n};\n\nmodule.exports = ColumnCompiler;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7390, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/ref.js"],"sourcesContent":["const Raw = require('./raw');\n\nclass Ref extends Raw {\n  constructor(client, ref) {\n    super(client);\n\n    this.ref = ref;\n    this._schema = null;\n    this._alias = null;\n  }\n\n  withSchema(schema) {\n    this._schema = schema;\n\n    return this;\n  }\n\n  as(alias) {\n    this._alias = alias;\n\n    return this;\n  }\n\n  toSQL() {\n    const string = this._schema ? `${this._schema}.${this.ref}` : this.ref;\n\n    const formatter = this.client.formatter(this);\n\n    const ref = formatter.columnize(string);\n\n    const sql = this._alias ? `${ref} as ${formatter.wrap(this._alias)}` : ref;\n\n    this.set(sql, []);\n\n    return super.toSQL(...arguments);\n  }\n}\n\nmodule.exports = Ref;\n"],"names":[],"mappings":"AAAA,MAAM;AAEN,MAAM,YAAY;IAChB,YAAY,MAAM,EAAE,GAAG,CAAE;QACvB,KAAK,CAAC;QAEN,IAAI,CAAC,GAAG,GAAG;QACX,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,MAAM,GAAG;IAChB;IAEA,WAAW,MAAM,EAAE;QACjB,IAAI,CAAC,OAAO,GAAG;QAEf,OAAO,IAAI;IACb;IAEA,GAAG,KAAK,EAAE;QACR,IAAI,CAAC,MAAM,GAAG;QAEd,OAAO,IAAI;IACb;IAEA,QAAQ;QACN,MAAM,SAAS,IAAI,CAAC,OAAO,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG;QAEtE,MAAM,YAAY,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI;QAE5C,MAAM,MAAM,UAAU,SAAS,CAAC;QAEhC,MAAM,MAAM,IAAI,CAAC,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,UAAU,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG;QAEvE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE;QAEhB,OAAO,KAAK,CAAC,SAAS;IACxB;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7421, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/formatter.js"],"sourcesContent":["const {\n  columnize: columnize_,\n  wrap: wrap_,\n} = require('./formatter/wrappingFormatter');\n\nclass Formatter {\n  constructor(client, builder) {\n    this.client = client;\n    this.builder = builder;\n    this.bindings = [];\n  }\n\n  // Accepts a string or array of columns to wrap as appropriate.\n  columnize(target) {\n    return columnize_(target, this.builder, this.client, this);\n  }\n\n  // Puts the appropriate wrapper around a value depending on the database\n  // engine, unless it's a knex.raw value, in which case it's left alone.\n  wrap(value, isParameter) {\n    return wrap_(value, isParameter, this.builder, this.client, this);\n  }\n}\n\nmodule.exports = Formatter;\n"],"names":[],"mappings":"AAAA,MAAM,EACJ,WAAW,UAAU,EACrB,MAAM,KAAK,EACZ;AAED,MAAM;IACJ,YAAY,MAAM,EAAE,OAAO,CAAE;QAC3B,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,QAAQ,GAAG,EAAE;IACpB;IAEA,+DAA+D;IAC/D,UAAU,MAAM,EAAE;QAChB,OAAO,WAAW,QAAQ,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI;IAC3D;IAEA,wEAAwE;IACxE,uEAAuE;IACvE,KAAK,KAAK,EAAE,WAAW,EAAE;QACvB,OAAO,MAAM,OAAO,aAAa,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI;IAClE;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7444, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/schema/viewbuilder.js"],"sourcesContent":["const helpers = require('../util/helpers');\nconst extend = require('lodash/extend');\nconst assign = require('lodash/assign');\n\nclass ViewBuilder {\n  constructor(client, method, viewName, fn) {\n    this.client = client;\n    this._method = method;\n    this._schemaName = undefined;\n    this._columns = undefined;\n    this._fn = fn;\n    this._viewName = viewName;\n    this._statements = [];\n    this._single = {};\n  }\n\n  setSchema(schemaName) {\n    this._schemaName = schemaName;\n  }\n\n  columns(columns) {\n    this._columns = columns;\n  }\n\n  as(selectQuery) {\n    this._selectQuery = selectQuery;\n  }\n\n  checkOption() {\n    throw new Error(\n      'check option definition is not supported by this dialect.'\n    );\n  }\n\n  localCheckOption() {\n    throw new Error(\n      'check option definition is not supported by this dialect.'\n    );\n  }\n\n  cascadedCheckOption() {\n    throw new Error(\n      'check option definition is not supported by this dialect.'\n    );\n  }\n\n  toSQL() {\n    if (this._method === 'alter') {\n      extend(this, AlterMethods);\n    }\n    this._fn.call(this, this);\n    return this.client.viewCompiler(this).toSQL();\n  }\n}\n\nconst AlterMethods = {\n  column(column) {\n    const self = this;\n    return {\n      rename: function (newName) {\n        self._statements.push({\n          grouping: 'alterView',\n          method: 'renameColumn',\n          args: [column, newName],\n        });\n        return this;\n      },\n      defaultTo: function (defaultValue) {\n        self._statements.push({\n          grouping: 'alterView',\n          method: 'defaultTo',\n          args: [column, defaultValue],\n        });\n        return this;\n      },\n    };\n  },\n};\n\nhelpers.addQueryContext(ViewBuilder);\n\nViewBuilder.extend = (methodName, fn) => {\n  if (Object.prototype.hasOwnProperty.call(ViewBuilder.prototype, methodName)) {\n    throw new Error(\n      `Can't extend ViewBuilder with existing method ('${methodName}').`\n    );\n  }\n\n  assign(ViewBuilder.prototype, { [methodName]: fn });\n};\n\nmodule.exports = ViewBuilder;\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AACN,MAAM;AAEN,MAAM;IACJ,YAAY,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,CAAE;QACxC,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,GAAG,GAAG;QACX,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,WAAW,GAAG,EAAE;QACrB,IAAI,CAAC,OAAO,GAAG,CAAC;IAClB;IAEA,UAAU,UAAU,EAAE;QACpB,IAAI,CAAC,WAAW,GAAG;IACrB;IAEA,QAAQ,OAAO,EAAE;QACf,IAAI,CAAC,QAAQ,GAAG;IAClB;IAEA,GAAG,WAAW,EAAE;QACd,IAAI,CAAC,YAAY,GAAG;IACtB;IAEA,cAAc;QACZ,MAAM,IAAI,MACR;IAEJ;IAEA,mBAAmB;QACjB,MAAM,IAAI,MACR;IAEJ;IAEA,sBAAsB;QACpB,MAAM,IAAI,MACR;IAEJ;IAEA,QAAQ;QACN,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS;YAC5B,OAAO,IAAI,EAAE;QACf;QACA,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI;QACxB,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK;IAC7C;AACF;AAEA,MAAM,eAAe;IACnB,QAAO,MAAM;QACX,MAAM,OAAO,IAAI;QACjB,OAAO;YACL,QAAQ,SAAU,OAAO;gBACvB,KAAK,WAAW,CAAC,IAAI,CAAC;oBACpB,UAAU;oBACV,QAAQ;oBACR,MAAM;wBAAC;wBAAQ;qBAAQ;gBACzB;gBACA,OAAO,IAAI;YACb;YACA,WAAW,SAAU,YAAY;gBAC/B,KAAK,WAAW,CAAC,IAAI,CAAC;oBACpB,UAAU;oBACV,QAAQ;oBACR,MAAM;wBAAC;wBAAQ;qBAAa;gBAC9B;gBACA,OAAO,IAAI;YACb;QACF;IACF;AACF;AAEA,QAAQ,eAAe,CAAC;AAExB,YAAY,MAAM,GAAG,CAAC,YAAY;IAChC,IAAI,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,SAAS,EAAE,aAAa;QAC3E,MAAM,IAAI,MACR,CAAC,gDAAgD,EAAE,WAAW,GAAG,CAAC;IAEtE;IAEA,OAAO,YAAY,SAAS,EAAE;QAAE,CAAC,WAAW,EAAE;IAAG;AACnD;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7528, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/schema/viewcompiler.js"],"sourcesContent":["/* eslint max-len:0 */\n\n// View Compiler\n// -------\nconst { pushQuery } = require('./internal/helpers');\nconst groupBy = require('lodash/groupBy');\nconst { columnize: columnize_ } = require('../formatter/wrappingFormatter');\n\nclass ViewCompiler {\n  constructor(client, viewBuilder) {\n    this.client = client;\n    this.viewBuilder = viewBuilder;\n    this._commonBuilder = this.viewBuilder;\n    this.method = viewBuilder._method;\n    this.schemaNameRaw = viewBuilder._schemaName;\n    this.viewNameRaw = viewBuilder._viewName;\n    this.single = viewBuilder._single;\n    this.selectQuery = viewBuilder._selectQuery;\n    this.columns = viewBuilder._columns;\n    this.grouped = groupBy(viewBuilder._statements, 'grouping');\n\n    this.formatter = client.formatter(viewBuilder);\n    this.bindings = [];\n    this.formatter.bindings = this.bindings;\n    this.bindingsHolder = this;\n\n    this.sequence = [];\n  }\n\n  // Convert the tableCompiler toSQL\n  toSQL() {\n    this[this.method]();\n    return this.sequence;\n  }\n\n  // Column Compilation\n  // -------\n\n  create() {\n    this.createQuery(this.columns, this.selectQuery);\n  }\n\n  createOrReplace() {\n    throw new Error('replace views is not supported by this dialect.');\n  }\n\n  createMaterializedView() {\n    throw new Error('materialized views are not supported by this dialect.');\n  }\n\n  createQuery(columns, selectQuery, materialized, replace) {\n    const createStatement =\n      'create ' +\n      (materialized ? 'materialized ' : '') +\n      (replace ? 'or replace ' : '') +\n      'view ';\n    const columnList = columns\n      ? ' (' +\n        columnize_(\n          columns,\n          this.viewBuilder,\n          this.client,\n          this.bindingsHolder\n        ) +\n        ')'\n      : '';\n    let sql = createStatement + this.viewName() + columnList;\n    sql += ' as ';\n    sql += selectQuery.toString();\n    switch (this.single.checkOption) {\n      case 'default_option':\n        sql += ' with check option';\n        break;\n      case 'local':\n        sql += ' with local check option';\n        break;\n      case 'cascaded':\n        sql += ' with cascaded check option';\n        break;\n      default:\n        break;\n    }\n    this.pushQuery({\n      sql,\n    });\n  }\n\n  renameView(from, to) {\n    throw new Error(\n      'rename view is not supported by this dialect (instead drop, then create another view).'\n    );\n  }\n\n  refreshMaterializedView() {\n    throw new Error('materialized views are not supported by this dialect.');\n  }\n\n  alter() {\n    this.alterView();\n  }\n\n  alterView() {\n    const alterView = this.grouped.alterView || [];\n    for (let i = 0, l = alterView.length; i < l; i++) {\n      const statement = alterView[i];\n      if (this[statement.method]) {\n        this[statement.method].apply(this, statement.args);\n      } else {\n        this.client.logger.error(`Debug: ${statement.method} does not exist`);\n      }\n    }\n    for (const item in this.single) {\n      if (typeof this[item] === 'function') this[item](this.single[item]);\n    }\n  }\n\n  renameColumn(from, to) {\n    throw new Error('rename column of views is not supported by this dialect.');\n  }\n\n  defaultTo(column, defaultValue) {\n    throw new Error(\n      'change default values of views is not supported by this dialect.'\n    );\n  }\n\n  viewName() {\n    const name = this.schemaNameRaw\n      ? `${this.schemaNameRaw}.${this.viewNameRaw}`\n      : this.viewNameRaw;\n\n    return this.formatter.wrap(name);\n  }\n}\n\nViewCompiler.prototype.pushQuery = pushQuery;\n\nmodule.exports = ViewCompiler;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7631, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/client.js"],"sourcesContent":["const { Pool, TimeoutError } = require('tarn');\nconst { EventEmitter } = require('events');\nconst { promisify } = require('util');\nconst { makeEscape } = require('./util/string');\nconst cloneDeep = require('lodash/cloneDeep');\nconst defaults = require('lodash/defaults');\nconst uniqueId = require('lodash/uniqueId');\n\nconst Runner = require('./execution/runner');\nconst Transaction = require('./execution/transaction');\nconst {\n  executeQuery,\n  enrichQueryObject,\n} = require('./execution/internal/query-executioner');\nconst QueryBuilder = require('./query/querybuilder');\nconst QueryCompiler = require('./query/querycompiler');\nconst SchemaBuilder = require('./schema/builder');\nconst SchemaCompiler = require('./schema/compiler');\nconst TableBuilder = require('./schema/tablebuilder');\nconst TableCompiler = require('./schema/tablecompiler');\nconst ColumnBuilder = require('./schema/columnbuilder');\nconst ColumnCompiler = require('./schema/columncompiler');\nconst { KnexTimeoutError } = require('./util/timeout');\nconst { outputQuery, unwrapRaw } = require('./formatter/wrappingFormatter');\nconst { compileCallback } = require('./formatter/formatterUtils');\nconst Raw = require('./raw');\nconst Ref = require('./ref');\nconst Formatter = require('./formatter');\nconst Logger = require('./logger');\nconst { POOL_CONFIG_OPTIONS } = require('./constants');\nconst ViewBuilder = require('./schema/viewbuilder.js');\nconst ViewCompiler = require('./schema/viewcompiler.js');\nconst isPlainObject = require('lodash/isPlainObject');\nconst { setHiddenProperty } = require('./util/security.js');\n\nconst debug = require('debug')('knex:client');\n\n// The base client provides the general structure\n// for a dialect specific client object.\n\nclass Client extends EventEmitter {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.logger = new Logger(config);\n\n    if (this.config.connection && this.config.connection.password) {\n      setHiddenProperty(this.config.connection);\n    }\n\n    //Client is a required field, so throw error if it's not supplied.\n    //If 'this.dialect' is set, then this is a 'super()' call, in which case\n    //'client' does not have to be set as it's already assigned on the client prototype.\n\n    if (this.dialect && !this.config.client) {\n      this.logger.warn(\n        `Using 'this.dialect' to identify the client is deprecated and support for it will be removed in the future. Please use configuration option 'client' instead.`\n      );\n    }\n\n    const dbClient = this.config.client || this.dialect;\n    if (!dbClient) {\n      throw new Error(\n        `knex: Required configuration option 'client' is missing.`\n      );\n    }\n\n    if (config.version) {\n      this.version = config.version;\n    }\n\n    if (config.connection && config.connection instanceof Function) {\n      this.connectionConfigProvider = config.connection;\n      this.connectionConfigExpirationChecker = () => true; // causes the provider to be called on first use\n    } else {\n      this.connectionSettings = cloneDeep(config.connection || {});\n      if (config.connection && config.connection.password) {\n        setHiddenProperty(this.connectionSettings, config.connection);\n      }\n      this.connectionConfigExpirationChecker = null;\n    }\n    if (this.driverName && config.connection) {\n      this.initializeDriver();\n      if (!config.pool || (config.pool && config.pool.max !== 0)) {\n        this.initializePool(config);\n      }\n    }\n    this.valueForUndefined = this.raw('DEFAULT');\n    if (config.useNullAsDefault) {\n      this.valueForUndefined = null;\n    }\n  }\n  formatter(builder) {\n    return new Formatter(this, builder);\n  }\n\n  queryBuilder() {\n    return new QueryBuilder(this);\n  }\n\n  queryCompiler(builder, formatter) {\n    return new QueryCompiler(this, builder, formatter);\n  }\n\n  schemaBuilder() {\n    return new SchemaBuilder(this);\n  }\n\n  schemaCompiler(builder) {\n    return new SchemaCompiler(this, builder);\n  }\n\n  tableBuilder(type, tableName, tableNameLike, fn) {\n    return new TableBuilder(this, type, tableName, tableNameLike, fn);\n  }\n\n  viewBuilder(type, viewBuilder, fn) {\n    return new ViewBuilder(this, type, viewBuilder, fn);\n  }\n\n  tableCompiler(tableBuilder) {\n    return new TableCompiler(this, tableBuilder);\n  }\n\n  viewCompiler(viewCompiler) {\n    return new ViewCompiler(this, viewCompiler);\n  }\n\n  columnBuilder(tableBuilder, type, args) {\n    return new ColumnBuilder(this, tableBuilder, type, args);\n  }\n\n  columnCompiler(tableBuilder, columnBuilder) {\n    return new ColumnCompiler(this, tableBuilder, columnBuilder);\n  }\n\n  runner(builder) {\n    return new Runner(this, builder);\n  }\n\n  transaction(container, config, outerTx) {\n    return new Transaction(this, container, config, outerTx);\n  }\n\n  raw() {\n    return new Raw(this).set(...arguments);\n  }\n\n  ref() {\n    return new Ref(this, ...arguments);\n  }\n  query(connection, queryParam) {\n    const queryObject = enrichQueryObject(connection, queryParam, this);\n    return executeQuery(connection, queryObject, this);\n  }\n\n  stream(connection, queryParam, stream, options) {\n    const queryObject = enrichQueryObject(connection, queryParam, this);\n    return this._stream(connection, queryObject, stream, options);\n  }\n\n  prepBindings(bindings) {\n    return bindings;\n  }\n\n  positionBindings(sql) {\n    return sql;\n  }\n\n  postProcessResponse(resp, queryContext) {\n    if (this.config.postProcessResponse) {\n      return this.config.postProcessResponse(resp, queryContext);\n    }\n    return resp;\n  }\n\n  wrapIdentifier(value, queryContext) {\n    return this.customWrapIdentifier(\n      value,\n      this.wrapIdentifierImpl,\n      queryContext\n    );\n  }\n\n  customWrapIdentifier(value, origImpl, queryContext) {\n    if (this.config.wrapIdentifier) {\n      return this.config.wrapIdentifier(value, origImpl, queryContext);\n    }\n    return origImpl(value);\n  }\n\n  wrapIdentifierImpl(value) {\n    return value !== '*' ? `\"${value.replace(/\"/g, '\"\"')}\"` : '*';\n  }\n\n  initializeDriver() {\n    try {\n      this.driver = this._driver();\n    } catch (e) {\n      const message = `Knex: run\\n$ npm install ${this.driverName} --save`;\n      this.logger.error(`${message}\\n${e.message}\\n${e.stack}`);\n      throw new Error(`${message}\\n${e.message}`);\n    }\n  }\n\n  poolDefaults() {\n    return { min: 2, max: 10, propagateCreateError: true };\n  }\n\n  getPoolSettings(poolConfig) {\n    poolConfig = defaults({}, poolConfig, this.poolDefaults());\n\n    POOL_CONFIG_OPTIONS.forEach((option) => {\n      if (option in poolConfig) {\n        this.logger.warn(\n          [\n            `Pool config option \"${option}\" is no longer supported.`,\n            `See https://github.com/Vincit/tarn.js for possible pool config options.`,\n          ].join(' ')\n        );\n      }\n    });\n\n    const DEFAULT_ACQUIRE_TIMEOUT = 60000;\n    const timeouts = [\n      this.config.acquireConnectionTimeout,\n      poolConfig.acquireTimeoutMillis,\n    ].filter((timeout) => timeout !== undefined);\n\n    if (!timeouts.length) {\n      timeouts.push(DEFAULT_ACQUIRE_TIMEOUT);\n    }\n\n    // acquire connection timeout can be set on config or config.pool\n    // choose the smallest, positive timeout setting and set on poolConfig\n    poolConfig.acquireTimeoutMillis = Math.min(...timeouts);\n\n    const updatePoolConnectionSettingsFromProvider = async () => {\n      if (!this.connectionConfigProvider) {\n        return; // static configuration, nothing to update\n      }\n      if (\n        !this.connectionConfigExpirationChecker ||\n        !this.connectionConfigExpirationChecker()\n      ) {\n        return; // not expired, reuse existing connection\n      }\n      const providerResult = await this.connectionConfigProvider();\n      if (providerResult.expirationChecker) {\n        this.connectionConfigExpirationChecker =\n          providerResult.expirationChecker;\n        delete providerResult.expirationChecker; // MySQL2 driver warns on receiving extra properties\n      } else {\n        this.connectionConfigExpirationChecker = null;\n      }\n      this.connectionSettings = providerResult;\n    };\n\n    return Object.assign(poolConfig, {\n      create: async () => {\n        await updatePoolConnectionSettingsFromProvider();\n        const connection = await this.acquireRawConnection();\n        connection.__knexUid = uniqueId('__knexUid');\n        if (poolConfig.afterCreate) {\n          await promisify(poolConfig.afterCreate)(connection);\n        }\n        return connection;\n      },\n\n      destroy: (connection) => {\n        if (connection !== void 0) {\n          return this.destroyRawConnection(connection);\n        }\n      },\n\n      validate: (connection) => {\n        if (connection.__knex__disposed) {\n          this.logger.warn(`Connection Error: ${connection.__knex__disposed}`);\n          return false;\n        }\n\n        return this.validateConnection(connection);\n      },\n    });\n  }\n\n  initializePool(config = this.config) {\n    if (this.pool) {\n      this.logger.warn('The pool has already been initialized');\n      return;\n    }\n\n    const tarnPoolConfig = {\n      ...this.getPoolSettings(config.pool),\n    };\n    // afterCreate is an internal knex param, tarn.js does not support it\n    if (tarnPoolConfig.afterCreate) {\n      delete tarnPoolConfig.afterCreate;\n    }\n\n    this.pool = new Pool(tarnPoolConfig);\n  }\n\n  validateConnection(connection) {\n    return true;\n  }\n\n  // Acquire a connection from the pool.\n  async acquireConnection() {\n    if (!this.pool) {\n      throw new Error('Unable to acquire a connection');\n    }\n    try {\n      const connection = await this.pool.acquire().promise;\n      debug('acquired connection from pool: %s', connection.__knexUid);\n      if (connection.config) {\n        if (connection.config.password) {\n          setHiddenProperty(connection.config);\n        }\n        if (\n          connection.config.authentication &&\n          connection.config.authentication.options &&\n          connection.config.authentication.options.password\n        ) {\n          setHiddenProperty(connection.config.authentication.options);\n        }\n      }\n      return connection;\n    } catch (error) {\n      let convertedError = error;\n      if (error instanceof TimeoutError) {\n        convertedError = new KnexTimeoutError(\n          'Knex: Timeout acquiring a connection. The pool is probably full. ' +\n            'Are you missing a .transacting(trx) call?'\n        );\n      }\n      throw convertedError;\n    }\n  }\n\n  // Releases a connection back to the connection pool,\n  // returning a promise resolved when the connection is released.\n  releaseConnection(connection) {\n    debug('releasing connection to pool: %s', connection.__knexUid);\n    const didRelease = this.pool.release(connection);\n\n    if (!didRelease) {\n      debug('pool refused connection: %s', connection.__knexUid);\n    }\n\n    return Promise.resolve();\n  }\n\n  // Destroy the current connection pool for the client.\n  async destroy(callback) {\n    try {\n      if (this.pool && this.pool.destroy) {\n        await this.pool.destroy();\n      }\n      this.pool = undefined;\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    } catch (err) {\n      if (typeof callback === 'function') {\n        return callback(err);\n      }\n      throw err;\n    }\n  }\n\n  // Return the database being used by this client.\n  database() {\n    return this.connectionSettings.database;\n  }\n\n  toString() {\n    return '[object KnexClient]';\n  }\n\n  assertCanCancelQuery() {\n    if (!this.canCancelQuery) {\n      throw new Error('Query cancelling not supported for this dialect');\n    }\n  }\n\n  cancelQuery() {\n    throw new Error('Query cancelling not supported for this dialect');\n  }\n\n  // Formatter part\n\n  alias(first, second) {\n    return first + ' as ' + second;\n  }\n\n  // Checks whether a value is a function... if it is, we compile it\n  // otherwise we check whether it's a raw\n  parameter(value, builder, bindingsHolder) {\n    if (typeof value === 'function') {\n      return outputQuery(\n        compileCallback(value, undefined, this, bindingsHolder),\n        true,\n        builder,\n        this\n      );\n    }\n    return unwrapRaw(value, true, builder, this, bindingsHolder) || '?';\n  }\n\n  // Turns a list of values into a list of ?'s, joining them with commas unless\n  // a \"joining\" value is specified (e.g. ' and ')\n  parameterize(values, notSetValue, builder, bindingsHolder) {\n    if (typeof values === 'function')\n      return this.parameter(values, builder, bindingsHolder);\n    values = Array.isArray(values) ? values : [values];\n    let str = '',\n      i = -1;\n    while (++i < values.length) {\n      if (i > 0) str += ', ';\n      let value = values[i];\n      // json columns can have object in values.\n      if (isPlainObject(value)) {\n        value = JSON.stringify(value);\n      }\n      str += this.parameter(\n        value === undefined ? notSetValue : value,\n        builder,\n        bindingsHolder\n      );\n    }\n    return str;\n  }\n\n  // Formats `values` into a parenthesized list of parameters for a `VALUES`\n  // clause.\n  //\n  // [1, 2]                  -> '(?, ?)'\n  // [[1, 2], [3, 4]]        -> '((?, ?), (?, ?))'\n  // knex('table')           -> '(select * from \"table\")'\n  // knex.raw('select ?', 1) -> '(select ?)'\n  //\n  values(values, builder, bindingsHolder) {\n    if (Array.isArray(values)) {\n      if (Array.isArray(values[0])) {\n        return `(${values\n          .map(\n            (value) =>\n              `(${this.parameterize(\n                value,\n                undefined,\n                builder,\n                bindingsHolder\n              )})`\n          )\n          .join(', ')})`;\n      }\n      return `(${this.parameterize(\n        values,\n        undefined,\n        builder,\n        bindingsHolder\n      )})`;\n    }\n\n    if (values && values.isRawInstance) {\n      return `(${this.parameter(values, builder, bindingsHolder)})`;\n    }\n\n    return this.parameter(values, builder, bindingsHolder);\n  }\n\n  processPassedConnection(connection) {\n    // Default implementation is noop\n  }\n\n  toPathForJson(jsonPath) {\n    // By default, we want a json path, so if this function is not overriden,\n    // we return the path.\n    return jsonPath;\n  }\n}\n\nObject.assign(Client.prototype, {\n  _escapeBinding: makeEscape({\n    escapeString(str) {\n      return `'${str.replace(/'/g, \"''\")}'`;\n    },\n  }),\n\n  canCancelQuery: false,\n});\n\nmodule.exports = Client;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8018, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/knex-builder/internal/parse-connection.js"],"sourcesContent":["const { parse } = require('pg-connection-string');\nconst parsePG = parse;\nconst isWindows = process && process.platform && process.platform === 'win32';\n\n/**\n * @param str\n * @returns {URL}\n */\nfunction tryParse(str) {\n  try {\n    return new URL(str);\n  } catch (e) {\n    return null;\n  }\n}\n\nmodule.exports = function parseConnectionString(str) {\n  const parsed = tryParse(str);\n  const isDriveLetter = isWindows && parsed && parsed.protocol.length === 2;\n  if (!parsed || isDriveLetter) {\n    return {\n      client: 'sqlite3',\n      connection: {\n        filename: str,\n      },\n    };\n  }\n  let { protocol } = parsed;\n  if (protocol.slice(-1) === ':') {\n    protocol = protocol.slice(0, -1);\n  }\n\n  const isPG = ['postgresql', 'postgres'].includes(protocol);\n\n  return {\n    client: protocol,\n    connection: isPG ? parsePG(str) : connectionObject(parsed),\n  };\n};\n\n/**\n * @param {URL} parsed\n * @returns {{}}\n */\nfunction connectionObject(parsed) {\n  const connection = {};\n  let db = parsed.pathname;\n  if (db[0] === '/') {\n    db = db.slice(1);\n  }\n\n  connection.database = db;\n\n  if (parsed.hostname) {\n    if (parsed.protocol.indexOf('mssql') === 0) {\n      connection.server = parsed.hostname;\n    } else {\n      connection.host = parsed.hostname;\n    }\n  }\n  if (parsed.port) {\n    connection.port = parsed.port;\n  }\n  if (parsed.username || parsed.password) {\n    connection.user = decodeURIComponent(parsed.username);\n  }\n  if (parsed.password) {\n    connection.password = decodeURIComponent(parsed.password);\n  }\n  if (parsed.searchParams) {\n    for (const [key, value] of parsed.searchParams.entries()) {\n      const isNestedConfigSupported = ['mysql:', 'mariadb:', 'mssql:'].includes(\n        parsed.protocol\n      );\n      if (isNestedConfigSupported) {\n        try {\n          connection[key] = JSON.parse(value);\n        } catch (err) {\n          connection[key] = value;\n        }\n      } else {\n        connection[key] = value;\n      }\n    }\n  }\n  return connection;\n}\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,KAAK,EAAE;AACf,MAAM,UAAU;AAChB,MAAM,YAAY,WAAW,QAAQ,QAAQ,IAAI,QAAQ,QAAQ,KAAK;AAEtE;;;CAGC,GACD,SAAS,SAAS,GAAG;IACnB,IAAI;QACF,OAAO,IAAI,IAAI;IACjB,EAAE,OAAO,GAAG;QACV,OAAO;IACT;AACF;AAEA,OAAO,OAAO,GAAG,SAAS,sBAAsB,GAAG;IACjD,MAAM,SAAS,SAAS;IACxB,MAAM,gBAAgB,aAAa,UAAU,OAAO,QAAQ,CAAC,MAAM,KAAK;IACxE,IAAI,CAAC,UAAU,eAAe;QAC5B,OAAO;YACL,QAAQ;YACR,YAAY;gBACV,UAAU;YACZ;QACF;IACF;IACA,IAAI,EAAE,QAAQ,EAAE,GAAG;IACnB,IAAI,SAAS,KAAK,CAAC,CAAC,OAAO,KAAK;QAC9B,WAAW,SAAS,KAAK,CAAC,GAAG,CAAC;IAChC;IAEA,MAAM,OAAO;QAAC;QAAc;KAAW,CAAC,QAAQ,CAAC;IAEjD,OAAO;QACL,QAAQ;QACR,YAAY,OAAO,QAAQ,OAAO,iBAAiB;IACrD;AACF;AAEA;;;CAGC,GACD,SAAS,iBAAiB,MAAM;IAC9B,MAAM,aAAa,CAAC;IACpB,IAAI,KAAK,OAAO,QAAQ;IACxB,IAAI,EAAE,CAAC,EAAE,KAAK,KAAK;QACjB,KAAK,GAAG,KAAK,CAAC;IAChB;IAEA,WAAW,QAAQ,GAAG;IAEtB,IAAI,OAAO,QAAQ,EAAE;QACnB,IAAI,OAAO,QAAQ,CAAC,OAAO,CAAC,aAAa,GAAG;YAC1C,WAAW,MAAM,GAAG,OAAO,QAAQ;QACrC,OAAO;YACL,WAAW,IAAI,GAAG,OAAO,QAAQ;QACnC;IACF;IACA,IAAI,OAAO,IAAI,EAAE;QACf,WAAW,IAAI,GAAG,OAAO,IAAI;IAC/B;IACA,IAAI,OAAO,QAAQ,IAAI,OAAO,QAAQ,EAAE;QACtC,WAAW,IAAI,GAAG,mBAAmB,OAAO,QAAQ;IACtD;IACA,IAAI,OAAO,QAAQ,EAAE;QACnB,WAAW,QAAQ,GAAG,mBAAmB,OAAO,QAAQ;IAC1D;IACA,IAAI,OAAO,YAAY,EAAE;QACvB,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,OAAO,YAAY,CAAC,OAAO,GAAI;YACxD,MAAM,0BAA0B;gBAAC;gBAAU;gBAAY;aAAS,CAAC,QAAQ,CACvE,OAAO,QAAQ;YAEjB,IAAI,yBAAyB;gBAC3B,IAAI;oBACF,UAAU,CAAC,IAAI,GAAG,KAAK,KAAK,CAAC;gBAC/B,EAAE,OAAO,KAAK;oBACZ,UAAU,CAAC,IAAI,GAAG;gBACpB;YACF,OAAO;gBACL,UAAU,CAAC,IAAI,GAAG;YACpB;QACF;IACF;IACA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8106, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/sqlite3/execution/sqlite-transaction.js"],"sourcesContent":["const Transaction = require('../../../execution/transaction');\n\nclass Transaction_Sqlite extends Transaction {\n  begin(conn) {\n    // SQLite doesn't really support isolation levels, it is serializable by\n    // default and so we override it to ignore isolation level.\n    // There is a `PRAGMA read_uncommitted = true;`, but that's probably not\n    // what the user wants\n    if (this.isolationLevel) {\n      this.client.logger.warn(\n        'sqlite3 only supports serializable transactions, ignoring the isolation level param'\n      );\n    }\n    // SQLite infers read vs write transactions from the statement operation\n    // https://www.sqlite.org/lang_transaction.html#read_transactions_versus_write_transactions\n    if (this.readOnly) {\n      this.client.logger.warn(\n        'sqlite3 implicitly handles read vs write transactions'\n      );\n    }\n    return this.query(conn, 'BEGIN;');\n  }\n}\n\nmodule.exports = Transaction_Sqlite;\n"],"names":[],"mappings":"AAAA,MAAM;AAEN,MAAM,2BAA2B;IAC/B,MAAM,IAAI,EAAE;QACV,wEAAwE;QACxE,2DAA2D;QAC3D,wEAAwE;QACxE,sBAAsB;QACtB,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CACrB;QAEJ;QACA,wEAAwE;QACxE,2FAA2F;QAC3F,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CACrB;QAEJ;QACA,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM;IAC1B;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8130, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/sqlite3/query/sqlite-querycompiler.js"],"sourcesContent":["// SQLite3 Query Builder & Compiler\n\nconst constant = require('lodash/constant');\nconst each = require('lodash/each');\nconst identity = require('lodash/identity');\nconst isEmpty = require('lodash/isEmpty');\nconst reduce = require('lodash/reduce');\n\nconst QueryCompiler = require('../../../query/querycompiler');\nconst noop = require('../../../util/noop');\nconst { isString } = require('../../../util/is');\nconst {\n  wrapString,\n  columnize: columnize_,\n} = require('../../../formatter/wrappingFormatter');\n\nconst emptyStr = constant('');\n\nclass QueryCompiler_SQLite3 extends QueryCompiler {\n  constructor(client, builder, formatter) {\n    super(client, builder, formatter);\n\n    // The locks are not applicable in SQLite3\n    this.forShare = emptyStr;\n    this.forKeyShare = emptyStr;\n    this.forUpdate = emptyStr;\n    this.forNoKeyUpdate = emptyStr;\n  }\n\n  // SQLite requires us to build the multi-row insert as a listing of select with\n  // unions joining them together. So we'll build out this list of columns and\n  // then join them all together with select unions to complete the queries.\n  insert() {\n    const insertValues = this.single.insert || [];\n    let sql = this.with() + `insert into ${this.tableName} `;\n\n    if (Array.isArray(insertValues)) {\n      if (insertValues.length === 0) {\n        return '';\n      } else if (\n        insertValues.length === 1 &&\n        insertValues[0] &&\n        isEmpty(insertValues[0])\n      ) {\n        return {\n          sql: sql + this._emptyInsertValue,\n        };\n      }\n    } else if (typeof insertValues === 'object' && isEmpty(insertValues)) {\n      return {\n        sql: sql + this._emptyInsertValue,\n      };\n    }\n\n    const insertData = this._prepInsert(insertValues);\n\n    if (isString(insertData)) {\n      return {\n        sql: sql + insertData,\n      };\n    }\n\n    if (insertData.columns.length === 0) {\n      return {\n        sql: '',\n      };\n    }\n\n    sql += `(${this.formatter.columnize(insertData.columns)})`;\n\n    // backwards compatible error\n    if (this.client.valueForUndefined !== null) {\n      insertData.values.forEach((bindings) => {\n        each(bindings, (binding) => {\n          if (binding === undefined)\n            throw new TypeError(\n              '`sqlite` does not support inserting default values. Specify ' +\n                'values explicitly or use the `useNullAsDefault` config flag. ' +\n                '(see docs https://knexjs.org/guide/query-builder.html#insert).'\n            );\n        });\n      });\n    }\n\n    if (insertData.values.length === 1) {\n      const parameters = this.client.parameterize(\n        insertData.values[0],\n        this.client.valueForUndefined,\n        this.builder,\n        this.bindingsHolder\n      );\n      sql += ` values (${parameters})`;\n\n      const { onConflict, ignore, merge } = this.single;\n      if (onConflict && ignore) sql += this._ignore(onConflict);\n      else if (onConflict && merge) {\n        sql += this._merge(merge.updates, onConflict, insertValues);\n        const wheres = this.where();\n        if (wheres) sql += ` ${wheres}`;\n      }\n\n      const { returning } = this.single;\n      if (returning) {\n        sql += this._returning(returning);\n      }\n\n      return {\n        sql,\n        returning,\n      };\n    }\n\n    const blocks = [];\n    let i = -1;\n    while (++i < insertData.values.length) {\n      let i2 = -1;\n      const block = (blocks[i] = []);\n      let current = insertData.values[i];\n      current = current === undefined ? this.client.valueForUndefined : current;\n      while (++i2 < insertData.columns.length) {\n        block.push(\n          this.client.alias(\n            this.client.parameter(\n              current[i2],\n              this.builder,\n              this.bindingsHolder\n            ),\n            this.formatter.wrap(insertData.columns[i2])\n          )\n        );\n      }\n      blocks[i] = block.join(', ');\n    }\n    sql += ' select ' + blocks.join(' union all select ');\n\n    const { onConflict, ignore, merge } = this.single;\n    if (onConflict && ignore) sql += ' where true' + this._ignore(onConflict);\n    else if (onConflict && merge) {\n      sql +=\n        ' where true' + this._merge(merge.updates, onConflict, insertValues);\n    }\n\n    const { returning } = this.single;\n    if (returning) sql += this._returning(returning);\n\n    return {\n      sql,\n      returning,\n    };\n  }\n\n  // Compiles an `update` query, allowing for a return value.\n  update() {\n    const withSQL = this.with();\n    const updateData = this._prepUpdate(this.single.update);\n    const wheres = this.where();\n    const { returning } = this.single;\n    return {\n      sql:\n        withSQL +\n        `update ${this.single.only ? 'only ' : ''}${this.tableName} ` +\n        `set ${updateData.join(', ')}` +\n        (wheres ? ` ${wheres}` : '') +\n        this._returning(returning),\n      returning,\n    };\n  }\n\n  _ignore(columns) {\n    if (columns === true) {\n      return ' on conflict do nothing';\n    }\n    return ` on conflict ${this._onConflictClause(columns)} do nothing`;\n  }\n\n  _merge(updates, columns, insert) {\n    let sql = ` on conflict ${this._onConflictClause(columns)} do update set `;\n    if (updates && Array.isArray(updates)) {\n      sql += updates\n        .map((column) =>\n          wrapString(\n            column.split('.').pop(),\n            this.formatter.builder,\n            this.client,\n            this.formatter\n          )\n        )\n        .map((column) => `${column} = excluded.${column}`)\n        .join(', ');\n\n      return sql;\n    } else if (updates && typeof updates === 'object') {\n      const updateData = this._prepUpdate(updates);\n      if (typeof updateData === 'string') {\n        sql += updateData;\n      } else {\n        sql += updateData.join(',');\n      }\n\n      return sql;\n    } else {\n      const insertData = this._prepInsert(insert);\n      if (typeof insertData === 'string') {\n        throw new Error(\n          'If using merge with a raw insert query, then updates must be provided'\n        );\n      }\n\n      sql += insertData.columns\n        .map((column) =>\n          wrapString(column.split('.').pop(), this.builder, this.client)\n        )\n        .map((column) => `${column} = excluded.${column}`)\n        .join(', ');\n\n      return sql;\n    }\n  }\n\n  _returning(value) {\n    return value ? ` returning ${this.formatter.columnize(value)}` : '';\n  }\n\n  // Compile a truncate table statement into SQL.\n  truncate() {\n    const { table } = this.single;\n    return {\n      sql: `delete from ${this.tableName}`,\n      output() {\n        return this.query({\n          sql: `delete from sqlite_sequence where name = '${table}'`,\n        }).catch(noop);\n      },\n    };\n  }\n\n  // Compiles a `columnInfo` query\n  columnInfo() {\n    const column = this.single.columnInfo;\n\n    // The user may have specified a custom wrapIdentifier function in the config. We\n    // need to run the identifiers through that function, but not format them as\n    // identifiers otherwise.\n    const table = this.client.customWrapIdentifier(this.single.table, identity);\n\n    return {\n      sql: `PRAGMA table_info(\\`${table}\\`)`,\n      output(resp) {\n        const maxLengthRegex = /.*\\((\\d+)\\)/;\n        const out = reduce(\n          resp,\n          function (columns, val) {\n            let { type } = val;\n            let maxLength = type.match(maxLengthRegex);\n            if (maxLength) {\n              maxLength = maxLength[1];\n            }\n            type = maxLength ? type.split('(')[0] : type;\n            columns[val.name] = {\n              type: type.toLowerCase(),\n              maxLength,\n              nullable: !val.notnull,\n              defaultValue: val.dflt_value,\n            };\n            return columns;\n          },\n          {}\n        );\n        return (column && out[column]) || out;\n      },\n    };\n  }\n\n  limit() {\n    const noLimit = !this.single.limit && this.single.limit !== 0;\n    if (noLimit && !this.single.offset) return '';\n\n    // Workaround for offset only,\n    // see http://stackoverflow.com/questions/10491492/sqllite-with-skip-offset-only-not-limit\n    this.single.limit = noLimit ? -1 : this.single.limit;\n    return `limit ${this._getValueOrParameterFromAttribute('limit')}`;\n  }\n\n  // Json functions\n  jsonExtract(params) {\n    return this._jsonExtract('json_extract', params);\n  }\n\n  jsonSet(params) {\n    return this._jsonSet('json_set', params);\n  }\n\n  jsonInsert(params) {\n    return this._jsonSet('json_insert', params);\n  }\n\n  jsonRemove(params) {\n    const jsonCol = `json_remove(${columnize_(\n      params.column,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    )},${this.client.parameter(\n      params.path,\n      this.builder,\n      this.bindingsHolder\n    )})`;\n    return params.alias\n      ? this.client.alias(jsonCol, this.formatter.wrap(params.alias))\n      : jsonCol;\n  }\n\n  whereJsonPath(statement) {\n    return this._whereJsonPath('json_extract', statement);\n  }\n\n  whereJsonSupersetOf(statement) {\n    throw new Error(\n      'Json superset where clause not actually supported by SQLite'\n    );\n  }\n\n  whereJsonSubsetOf(statement) {\n    throw new Error(\n      'Json subset where clause not actually supported by SQLite'\n    );\n  }\n\n  onJsonPathEquals(clause) {\n    return this._onJsonPathEquals('json_extract', clause);\n  }\n}\n\nmodule.exports = QueryCompiler_SQLite3;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8358, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/sqlite3/schema/sqlite-compiler.js"],"sourcesContent":["// SQLite3: Column Builder & Compiler\n// -------\nconst SchemaCompiler = require('../../../schema/compiler');\n\nconst some = require('lodash/some');\n\n// Schema Compiler\n// -------\n\nclass SchemaCompiler_SQLite3 extends SchemaCompiler {\n  constructor(client, builder) {\n    super(client, builder);\n  }\n\n  // Compile the query to determine if a table exists.\n  hasTable(tableName) {\n    const sql =\n      `select * from sqlite_master ` +\n      `where type = 'table' and name = ${this.client.parameter(\n        this.formatter.wrap(tableName).replace(/`/g, ''),\n        this.builder,\n        this.bindingsHolder\n      )}`;\n    this.pushQuery({ sql, output: (resp) => resp.length > 0 });\n  }\n\n  // Compile the query to determine if a column exists.\n  hasColumn(tableName, column) {\n    this.pushQuery({\n      sql: `PRAGMA table_info(${this.formatter.wrap(tableName)})`,\n      output(resp) {\n        return some(resp, (col) => {\n          return (\n            this.client.wrapIdentifier(col.name.toLowerCase()) ===\n            this.client.wrapIdentifier(column.toLowerCase())\n          );\n        });\n      },\n    });\n  }\n\n  // Compile a rename table command.\n  renameTable(from, to) {\n    this.pushQuery(\n      `alter table ${this.formatter.wrap(from)} rename to ${this.formatter.wrap(\n        to\n      )}`\n    );\n  }\n\n  async generateDdlCommands() {\n    const sequence = this.builder._sequence;\n    for (let i = 0, l = sequence.length; i < l; i++) {\n      const query = sequence[i];\n      this[query.method].apply(this, query.args);\n    }\n\n    const commandSources = this.sequence;\n\n    if (commandSources.length === 1 && commandSources[0].statementsProducer) {\n      return commandSources[0].statementsProducer();\n    } else {\n      const result = [];\n\n      for (const commandSource of commandSources) {\n        const command = commandSource.sql;\n\n        if (Array.isArray(command)) {\n          result.push(...command);\n        } else {\n          result.push(command);\n        }\n      }\n\n      return { pre: [], sql: result, check: null, post: [] };\n    }\n  }\n}\n\nmodule.exports = SchemaCompiler_SQLite3;\n"],"names":[],"mappings":"AAAA,qCAAqC;AACrC,UAAU;AACV,MAAM;AAEN,MAAM;AAEN,kBAAkB;AAClB,UAAU;AAEV,MAAM,+BAA+B;IACnC,YAAY,MAAM,EAAE,OAAO,CAAE;QAC3B,KAAK,CAAC,QAAQ;IAChB;IAEA,oDAAoD;IACpD,SAAS,SAAS,EAAE;QAClB,MAAM,MACJ,CAAC,4BAA4B,CAAC,GAC9B,CAAC,gCAAgC,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CACtD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,OAAO,CAAC,MAAM,KAC7C,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,cAAc,GAClB;QACL,IAAI,CAAC,SAAS,CAAC;YAAE;YAAK,QAAQ,CAAC,OAAS,KAAK,MAAM,GAAG;QAAE;IAC1D;IAEA,qDAAqD;IACrD,UAAU,SAAS,EAAE,MAAM,EAAE;QAC3B,IAAI,CAAC,SAAS,CAAC;YACb,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC3D,QAAO,IAAI;gBACT,OAAO,KAAK,MAAM,CAAC;oBACjB,OACE,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,WAAW,QAC/C,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,WAAW;gBAEjD;YACF;QACF;IACF;IAEA,kCAAkC;IAClC,YAAY,IAAI,EAAE,EAAE,EAAE;QACpB,IAAI,CAAC,SAAS,CACZ,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CACvE,KACC;IAEP;IAEA,MAAM,sBAAsB;QAC1B,MAAM,WAAW,IAAI,CAAC,OAAO,CAAC,SAAS;QACvC,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,MAAM,EAAE,IAAI,GAAG,IAAK;YAC/C,MAAM,QAAQ,QAAQ,CAAC,EAAE;YACzB,IAAI,CAAC,MAAM,MAAM,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,IAAI;QAC3C;QAEA,MAAM,iBAAiB,IAAI,CAAC,QAAQ;QAEpC,IAAI,eAAe,MAAM,KAAK,KAAK,cAAc,CAAC,EAAE,CAAC,kBAAkB,EAAE;YACvE,OAAO,cAAc,CAAC,EAAE,CAAC,kBAAkB;QAC7C,OAAO;YACL,MAAM,SAAS,EAAE;YAEjB,KAAK,MAAM,iBAAiB,eAAgB;gBAC1C,MAAM,UAAU,cAAc,GAAG;gBAEjC,IAAI,MAAM,OAAO,CAAC,UAAU;oBAC1B,OAAO,IAAI,IAAI;gBACjB,OAAO;oBACL,OAAO,IAAI,CAAC;gBACd;YACF;YAEA,OAAO;gBAAE,KAAK,EAAE;gBAAE,KAAK;gBAAQ,OAAO;gBAAM,MAAM,EAAE;YAAC;QACvD;IACF;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8425, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/sqlite3/schema/sqlite-columncompiler.js"],"sourcesContent":["const ColumnCompiler = require('../../../schema/columncompiler');\n\n// Column Compiler\n// -------\n\nclass ColumnCompiler_SQLite3 extends ColumnCompiler {\n  constructor() {\n    super(...arguments);\n    this.modifiers = ['nullable', 'defaultTo'];\n    this._addCheckModifiers();\n  }\n\n  // Types\n  // -------\n\n  enu(allowed) {\n    return `text check (${this.formatter.wrap(\n      this.args[0]\n    )} in ('${allowed.join(\"', '\")}'))`;\n  }\n\n  _pushAlterCheckQuery(checkPredicate, constraintName) {\n    throw new Error(\n      `Alter table with to add constraints is not permitted in SQLite`\n    );\n  }\n\n  checkRegex(regexes, constraintName) {\n    return this._check(\n      `${this.formatter.wrap(\n        this.getColumnName()\n      )} REGEXP ${this.client._escapeBinding(regexes)}`,\n      constraintName\n    );\n  }\n}\n\nColumnCompiler_SQLite3.prototype.json = 'json';\nColumnCompiler_SQLite3.prototype.jsonb = 'json';\nColumnCompiler_SQLite3.prototype.double =\n  ColumnCompiler_SQLite3.prototype.decimal =\n  ColumnCompiler_SQLite3.prototype.floating =\n    'float';\nColumnCompiler_SQLite3.prototype.timestamp = 'datetime';\n// autoincrement without primary key is a syntax error in SQLite, so it's necessary\nColumnCompiler_SQLite3.prototype.increments =\n  ColumnCompiler_SQLite3.prototype.bigincrements =\n    'integer not null primary key autoincrement';\n\nmodule.exports = ColumnCompiler_SQLite3;\n"],"names":[],"mappings":"AAAA,MAAM;AAEN,kBAAkB;AAClB,UAAU;AAEV,MAAM,+BAA+B;IACnC,aAAc;QACZ,KAAK,IAAI;QACT,IAAI,CAAC,SAAS,GAAG;YAAC;YAAY;SAAY;QAC1C,IAAI,CAAC,kBAAkB;IACzB;IAEA,QAAQ;IACR,UAAU;IAEV,IAAI,OAAO,EAAE;QACX,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CACvC,IAAI,CAAC,IAAI,CAAC,EAAE,EACZ,MAAM,EAAE,QAAQ,IAAI,CAAC,QAAQ,GAAG,CAAC;IACrC;IAEA,qBAAqB,cAAc,EAAE,cAAc,EAAE;QACnD,MAAM,IAAI,MACR,CAAC,8DAA8D,CAAC;IAEpE;IAEA,WAAW,OAAO,EAAE,cAAc,EAAE;QAClC,OAAO,IAAI,CAAC,MAAM,CAChB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CACpB,IAAI,CAAC,aAAa,IAClB,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,UAAU,EACjD;IAEJ;AACF;AAEA,uBAAuB,SAAS,CAAC,IAAI,GAAG;AACxC,uBAAuB,SAAS,CAAC,KAAK,GAAG;AACzC,uBAAuB,SAAS,CAAC,MAAM,GACrC,uBAAuB,SAAS,CAAC,OAAO,GACxC,uBAAuB,SAAS,CAAC,QAAQ,GACvC;AACJ,uBAAuB,SAAS,CAAC,SAAS,GAAG;AAC7C,mFAAmF;AACnF,uBAAuB,SAAS,CAAC,UAAU,GACzC,uBAAuB,SAAS,CAAC,aAAa,GAC5C;AAEJ,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8461, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/sqlite3/schema/sqlite-tablecompiler.js"],"sourcesContent":["const filter = require('lodash/filter');\nconst values = require('lodash/values');\nconst identity = require('lodash/identity');\nconst { isObject } = require('../../../util/is');\n\nconst TableCompiler = require('../../../schema/tablecompiler');\nconst { formatDefault } = require('../../../formatter/formatterUtils');\n\nclass TableCompiler_SQLite3 extends TableCompiler {\n  constructor() {\n    super(...arguments);\n  }\n\n  // Create a new table.\n  createQuery(columns, ifNot, like) {\n    const createStatement = ifNot\n      ? 'create table if not exists '\n      : 'create table ';\n\n    let sql = createStatement + this.tableName();\n\n    if (like && this.tableNameLike()) {\n      sql += ' as select * from ' + this.tableNameLike() + ' where 0=1';\n    } else {\n      // so we will need to check for a primary key commands and add the columns\n      // to the table's declaration here so they can be created on the tables.\n      sql += ' (' + columns.sql.join(', ');\n      sql += this.foreignKeys() || '';\n      sql += this.primaryKeys() || '';\n      sql += this._addChecks();\n      sql += ')';\n    }\n    this.pushQuery(sql);\n\n    if (like) {\n      this.addColumns(columns, this.addColumnsPrefix);\n    }\n  }\n\n  addColumns(columns, prefix, colCompilers) {\n    if (prefix === this.alterColumnsPrefix) {\n      const compiler = this;\n\n      const columnsInfo = colCompilers.map((col) => {\n        const name = this.client.customWrapIdentifier(\n          col.getColumnName(),\n          identity,\n          col.columnBuilder.queryContext()\n        );\n\n        const type = col.getColumnType();\n\n        const defaultTo = col.modified['defaultTo']\n          ? formatDefault(col.modified['defaultTo'][0], col.type, this.client)\n          : null;\n\n        const notNull =\n          col.modified['nullable'] && col.modified['nullable'][0] === false;\n\n        return { name, type, defaultTo, notNull };\n      });\n\n      this.pushQuery({\n        sql: `PRAGMA table_info(${this.tableName()})`,\n        statementsProducer(pragma, connection) {\n          return compiler.client\n            .ddl(compiler, pragma, connection)\n            .alterColumn(columnsInfo);\n        },\n      });\n    } else {\n      for (let i = 0, l = columns.sql.length; i < l; i++) {\n        this.pushQuery({\n          sql: `alter table ${this.tableName()} add column ${columns.sql[i]}`,\n          bindings: columns.bindings[i],\n        });\n      }\n    }\n  }\n\n  // Compile a drop unique key command.\n  dropUnique(columns, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('unique', this.tableNameRaw, columns);\n    this.pushQuery(`drop index ${indexName}`);\n  }\n\n  // Compile a drop foreign key command.\n  dropForeign(columns, indexName) {\n    const compiler = this;\n\n    columns = Array.isArray(columns) ? columns : [columns];\n    columns = columns.map((column) =>\n      this.client.customWrapIdentifier(column, identity)\n    );\n    indexName = this.client.customWrapIdentifier(indexName, identity);\n\n    this.pushQuery({\n      sql: `PRAGMA table_info(${this.tableName()})`,\n      output(pragma) {\n        return compiler.client\n          .ddl(compiler, pragma, this.connection)\n          .dropForeign(columns, indexName);\n      },\n    });\n  }\n\n  // Compile a drop primary key command.\n  dropPrimary(constraintName) {\n    const compiler = this;\n\n    constraintName = this.client.customWrapIdentifier(constraintName, identity);\n\n    this.pushQuery({\n      sql: `PRAGMA table_info(${this.tableName()})`,\n      output(pragma) {\n        return compiler.client\n          .ddl(compiler, pragma, this.connection)\n          .dropPrimary(constraintName);\n      },\n    });\n  }\n\n  dropIndex(columns, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('index', this.tableNameRaw, columns);\n    this.pushQuery(`drop index ${indexName}`);\n  }\n\n  // Compile a unique key command.\n  unique(columns, indexName) {\n    let deferrable;\n    let predicate;\n    if (isObject(indexName)) {\n      ({ indexName, deferrable, predicate } = indexName);\n    }\n    if (deferrable && deferrable !== 'not deferrable') {\n      this.client.logger.warn(\n        `sqlite3: unique index \\`${indexName}\\` will not be deferrable ${deferrable} because sqlite3 does not support deferred constraints.`\n      );\n    }\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('unique', this.tableNameRaw, columns);\n    columns = this.formatter.columnize(columns);\n\n    const predicateQuery = predicate\n      ? ' ' + this.client.queryCompiler(predicate).where()\n      : '';\n\n    this.pushQuery(\n      `create unique index ${indexName} on ${this.tableName()} (${columns})${predicateQuery}`\n    );\n  }\n\n  // Compile a plain index key command.\n  index(columns, indexName, options) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('index', this.tableNameRaw, columns);\n    columns = this.formatter.columnize(columns);\n\n    let predicate;\n    if (isObject(options)) {\n      ({ predicate } = options);\n    }\n    const predicateQuery = predicate\n      ? ' ' + this.client.queryCompiler(predicate).where()\n      : '';\n    this.pushQuery(\n      `create index ${indexName} on ${this.tableName()} (${columns})${predicateQuery}`\n    );\n  }\n\n  /**\n   * Add a primary key to an existing table.\n   *\n   * @NOTE The `createQuery` method above handles table creation. Don't do anything regarding table\n   *       creation in this method\n   *\n   * @param {string | string[]} columns - Column name(s) to assign as primary keys\n   * @param {string} [constraintName] - Custom name for the PK constraint\n   */\n  primary(columns, constraintName) {\n    const compiler = this;\n\n    columns = Array.isArray(columns) ? columns : [columns];\n    columns = columns.map((column) =>\n      this.client.customWrapIdentifier(column, identity)\n    );\n\n    let deferrable;\n    if (isObject(constraintName)) {\n      ({ constraintName, deferrable } = constraintName);\n    }\n    if (deferrable && deferrable !== 'not deferrable') {\n      this.client.logger.warn(\n        `sqlite3: primary key constraint \\`${constraintName}\\` will not be deferrable ${deferrable} because sqlite3 does not support deferred constraints.`\n      );\n    }\n    constraintName = this.client.customWrapIdentifier(constraintName, identity);\n\n    if (this.method !== 'create' && this.method !== 'createIfNot') {\n      this.pushQuery({\n        sql: `PRAGMA table_info(${this.tableName()})`,\n        output(pragma) {\n          return compiler.client\n            .ddl(compiler, pragma, this.connection)\n            .primary(columns, constraintName);\n        },\n      });\n    }\n  }\n\n  /**\n   * Add a foreign key constraint to an existing table\n   *\n   * @NOTE The `createQuery` method above handles foreign key constraints on table creation. Don't do\n   *       anything regarding table creation in this method\n   *\n   * @param {object} foreignInfo - Information about the current column foreign setup\n   * @param {string | string[]} [foreignInfo.column] - Column in the current constraint\n   * @param {string | undefined} foreignInfo.keyName - Name of the foreign key constraint\n   * @param {string | string[]} foreignInfo.references - What column it references in the other table\n   * @param {string} foreignInfo.inTable - What table is referenced in this constraint\n   * @param {string} [foreignInfo.onUpdate] - What to do on updates\n   * @param {string} [foreignInfo.onDelete] - What to do on deletions\n   */\n  foreign(foreignInfo) {\n    const compiler = this;\n\n    if (this.method !== 'create' && this.method !== 'createIfNot') {\n      foreignInfo.column = Array.isArray(foreignInfo.column)\n        ? foreignInfo.column\n        : [foreignInfo.column];\n      foreignInfo.column = foreignInfo.column.map((column) =>\n        this.client.customWrapIdentifier(column, identity)\n      );\n      foreignInfo.inTable = this.client.customWrapIdentifier(\n        foreignInfo.inTable,\n        identity\n      );\n      foreignInfo.references = Array.isArray(foreignInfo.references)\n        ? foreignInfo.references\n        : [foreignInfo.references];\n      foreignInfo.references = foreignInfo.references.map((column) =>\n        this.client.customWrapIdentifier(column, identity)\n      );\n\n      this.pushQuery({\n        sql: `PRAGMA table_info(${this.tableName()})`,\n        statementsProducer(pragma, connection) {\n          return compiler.client\n            .ddl(compiler, pragma, connection)\n            .foreign(foreignInfo);\n        },\n      });\n    }\n  }\n\n  primaryKeys() {\n    const pks = filter(this.grouped.alterTable || [], { method: 'primary' });\n    if (pks.length > 0 && pks[0].args.length > 0) {\n      const columns = pks[0].args[0];\n      let constraintName = pks[0].args[1] || '';\n      if (constraintName) {\n        constraintName = ' constraint ' + this.formatter.wrap(constraintName);\n      }\n      const needUniqueCols =\n        this.grouped.columns.filter((t) => t.builder._type === 'increments')\n          .length > 0;\n      // SQLite dont support autoincrement columns and composite primary keys (autoincrement is always primary key).\n      // You need to add unique index instead when you have autoincrement columns (https://stackoverflow.com/a/6154876/1535159)\n      return `,${constraintName} ${\n        needUniqueCols ? 'unique' : 'primary key'\n      } (${this.formatter.columnize(columns)})`;\n    }\n  }\n\n  foreignKeys() {\n    let sql = '';\n    const foreignKeys = filter(this.grouped.alterTable || [], {\n      method: 'foreign',\n    });\n    for (let i = 0, l = foreignKeys.length; i < l; i++) {\n      const foreign = foreignKeys[i].args[0];\n      const column = this.formatter.columnize(foreign.column);\n      const references = this.formatter.columnize(foreign.references);\n      const foreignTable = this.formatter.wrap(foreign.inTable);\n      let constraintName = foreign.keyName || '';\n      if (constraintName) {\n        constraintName = ' constraint ' + this.formatter.wrap(constraintName);\n      }\n      sql += `,${constraintName} foreign key(${column}) references ${foreignTable}(${references})`;\n      if (foreign.onDelete) sql += ` on delete ${foreign.onDelete}`;\n      if (foreign.onUpdate) sql += ` on update ${foreign.onUpdate}`;\n    }\n    return sql;\n  }\n\n  createTableBlock() {\n    return this.getColumns().concat().join(',');\n  }\n\n  renameColumn(from, to) {\n    this.pushQuery({\n      sql: `alter table ${this.tableName()} rename ${this.formatter.wrap(\n        from\n      )} to ${this.formatter.wrap(to)}`,\n    });\n  }\n\n  _setNullableState(column, isNullable) {\n    const compiler = this;\n\n    this.pushQuery({\n      sql: `PRAGMA table_info(${this.tableName()})`,\n      statementsProducer(pragma, connection) {\n        return compiler.client\n          .ddl(compiler, pragma, connection)\n          .setNullable(column, isNullable);\n      },\n    });\n  }\n\n  dropColumn() {\n    const compiler = this;\n    const columns = values(arguments);\n\n    const columnsWrapped = columns.map((column) =>\n      this.client.customWrapIdentifier(column, identity)\n    );\n\n    this.pushQuery({\n      sql: `PRAGMA table_info(${this.tableName()})`,\n      output(pragma) {\n        return compiler.client\n          .ddl(compiler, pragma, this.connection)\n          .dropColumn(columnsWrapped);\n      },\n    });\n  }\n}\n\nmodule.exports = TableCompiler_SQLite3;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8717, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/sqlite3/schema/sqlite-viewcompiler.js"],"sourcesContent":["/* eslint max-len: 0 */\n\nconst ViewCompiler = require('../../../schema/viewcompiler.js');\nconst {\n  columnize: columnize_,\n} = require('../../../formatter/wrappingFormatter');\n\nclass ViewCompiler_SQLite3 extends ViewCompiler {\n  constructor(client, viewCompiler) {\n    super(client, viewCompiler);\n  }\n  createOrReplace() {\n    const columns = this.columns;\n    const selectQuery = this.selectQuery.toString();\n    const viewName = this.viewName();\n\n    const columnList = columns\n      ? ' (' +\n        columnize_(\n          columns,\n          this.viewBuilder,\n          this.client,\n          this.bindingsHolder\n        ) +\n        ')'\n      : '';\n\n    const dropSql = `drop view if exists ${viewName}`;\n    const createSql = `create view ${viewName}${columnList} as ${selectQuery}`;\n\n    this.pushQuery({\n      sql: dropSql,\n    });\n    this.pushQuery({\n      sql: createSql,\n    });\n  }\n}\n\nmodule.exports = ViewCompiler_SQLite3;\n"],"names":[],"mappings":"AAAA,qBAAqB,GAErB,MAAM;AACN,MAAM,EACJ,WAAW,UAAU,EACtB;AAED,MAAM,6BAA6B;IACjC,YAAY,MAAM,EAAE,YAAY,CAAE;QAChC,KAAK,CAAC,QAAQ;IAChB;IACA,kBAAkB;QAChB,MAAM,UAAU,IAAI,CAAC,OAAO;QAC5B,MAAM,cAAc,IAAI,CAAC,WAAW,CAAC,QAAQ;QAC7C,MAAM,WAAW,IAAI,CAAC,QAAQ;QAE9B,MAAM,aAAa,UACf,OACA,WACE,SACA,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,cAAc,IAErB,MACA;QAEJ,MAAM,UAAU,CAAC,oBAAoB,EAAE,UAAU;QACjD,MAAM,YAAY,CAAC,YAAY,EAAE,WAAW,WAAW,IAAI,EAAE,aAAa;QAE1E,IAAI,CAAC,SAAS,CAAC;YACb,KAAK;QACP;QACA,IAAI,CAAC,SAAS,CAAC;YACb,KAAK;QACP;IACF;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8744, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/sqlite3/schema/internal/sqlite-ddl-operations.js"],"sourcesContent":["function copyData(sourceTable, targetTable, columns) {\n  return `INSERT INTO \"${targetTable}\" SELECT ${\n    columns === undefined\n      ? '*'\n      : columns.map((column) => `\"${column}\"`).join(', ')\n  } FROM \"${sourceTable}\";`;\n}\n\nfunction dropOriginal(tableName) {\n  return `DROP TABLE \"${tableName}\"`;\n}\n\nfunction renameTable(tableName, alteredName) {\n  return `ALTER TABLE \"${tableName}\" RENAME TO \"${alteredName}\"`;\n}\n\nfunction getTableSql(tableName) {\n  return `SELECT type, sql FROM sqlite_master WHERE (type='table' OR (type='index' AND sql IS NOT NULL)) AND lower(tbl_name)='${tableName.toLowerCase()}'`;\n}\n\nfunction isForeignCheckEnabled() {\n  return `PRAGMA foreign_keys`;\n}\n\nfunction setForeignCheck(enable) {\n  return `PRAGMA foreign_keys = ${enable ? 'ON' : 'OFF'}`;\n}\n\nfunction executeForeignCheck() {\n  return `PRAGMA foreign_key_check`;\n}\n\nmodule.exports = {\n  copyData,\n  dropOriginal,\n  renameTable,\n  getTableSql,\n  isForeignCheckEnabled,\n  setForeignCheck,\n  executeForeignCheck,\n};\n"],"names":[],"mappings":"AAAA,SAAS,SAAS,WAAW,EAAE,WAAW,EAAE,OAAO;IACjD,OAAO,CAAC,aAAa,EAAE,YAAY,SAAS,EAC1C,YAAY,YACR,MACA,QAAQ,GAAG,CAAC,CAAC,SAAW,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,MACjD,OAAO,EAAE,YAAY,EAAE,CAAC;AAC3B;AAEA,SAAS,aAAa,SAAS;IAC7B,OAAO,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;AACpC;AAEA,SAAS,YAAY,SAAS,EAAE,WAAW;IACzC,OAAO,CAAC,aAAa,EAAE,UAAU,aAAa,EAAE,YAAY,CAAC,CAAC;AAChE;AAEA,SAAS,YAAY,SAAS;IAC5B,OAAO,CAAC,oHAAoH,EAAE,UAAU,WAAW,GAAG,CAAC,CAAC;AAC1J;AAEA,SAAS;IACP,OAAO,CAAC,mBAAmB,CAAC;AAC9B;AAEA,SAAS,gBAAgB,MAAM;IAC7B,OAAO,CAAC,sBAAsB,EAAE,SAAS,OAAO,OAAO;AACzD;AAEA,SAAS;IACP,OAAO,CAAC,wBAAwB,CAAC;AACnC;AAEA,OAAO,OAAO,GAAG;IACf;IACA;IACA;IACA;IACA;IACA;IACA;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8779, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/sqlite3/schema/internal/tokenizer.js"],"sourcesContent":["function tokenize(text, tokens) {\n  const compiledRegex = new RegExp(\n    Object.entries(tokens)\n      .map(([type, regex]) => `(?<${type}>${regex.source})`)\n      .join('|'),\n    'yi'\n  );\n\n  let index = 0;\n  const ast = [];\n\n  while (index < text.length) {\n    compiledRegex.lastIndex = index;\n    const result = text.match(compiledRegex);\n\n    if (result !== null) {\n      const [type, text] = Object.entries(result.groups).find(\n        ([name, group]) => group !== undefined\n      );\n\n      index += text.length;\n\n      if (!type.startsWith('_')) {\n        ast.push({ type, text });\n      }\n    } else {\n      throw new Error(\n        `No matching tokenizer rule found at: [${text.substring(index)}]`\n      );\n    }\n  }\n\n  return ast;\n}\n\nmodule.exports = {\n  tokenize,\n};\n"],"names":[],"mappings":"AAAA,SAAS,SAAS,IAAI,EAAE,MAAM;IAC5B,MAAM,gBAAgB,IAAI,OACxB,OAAO,OAAO,CAAC,QACZ,GAAG,CAAC,CAAC,CAAC,MAAM,MAAM,GAAK,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,MAAM,MAAM,CAAC,CAAC,CAAC,EACpD,IAAI,CAAC,MACR;IAGF,IAAI,QAAQ;IACZ,MAAM,MAAM,EAAE;IAEd,MAAO,QAAQ,KAAK,MAAM,CAAE;QAC1B,cAAc,SAAS,GAAG;QAC1B,MAAM,SAAS,KAAK,KAAK,CAAC;QAE1B,IAAI,WAAW,MAAM;YACnB,MAAM,CAAC,MAAM,KAAK,GAAG,OAAO,OAAO,CAAC,OAAO,MAAM,EAAE,IAAI,CACrD,CAAC,CAAC,MAAM,MAAM,GAAK,UAAU;YAG/B,SAAS,KAAK,MAAM;YAEpB,IAAI,CAAC,KAAK,UAAU,CAAC,MAAM;gBACzB,IAAI,IAAI,CAAC;oBAAE;oBAAM;gBAAK;YACxB;QACF,OAAO;YACL,MAAM,IAAI,MACR,CAAC,sCAAsC,EAAE,KAAK,SAAS,CAAC,OAAO,CAAC,CAAC;QAErE;IACF;IAEA,OAAO;AACT;AAEA,OAAO,OAAO,GAAG;IACf;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8809, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/sqlite3/schema/internal/parser-combinator.js"],"sourcesContent":["// Sequence parser combinator\nfunction s(sequence, post = (v) => v) {\n  return function ({ index = 0, input }) {\n    let position = index;\n    const ast = [];\n\n    for (const parser of sequence) {\n      const result = parser({ index: position, input });\n\n      if (result.success) {\n        position = result.index;\n        ast.push(result.ast);\n      } else {\n        return result;\n      }\n    }\n\n    return { success: true, ast: post(ast), index: position, input };\n  };\n}\n\n// Alternative parser combinator\nfunction a(alternative, post = (v) => v) {\n  return function ({ index = 0, input }) {\n    for (const parser of alternative) {\n      const result = parser({ index, input });\n\n      if (result.success) {\n        return {\n          success: true,\n          ast: post(result.ast),\n          index: result.index,\n          input,\n        };\n      }\n    }\n\n    return { success: false, ast: null, index, input };\n  };\n}\n\n// Many parser combinator\nfunction m(many, post = (v) => v) {\n  return function ({ index = 0, input }) {\n    let result = {};\n    let position = index;\n    const ast = [];\n\n    do {\n      result = many({ index: position, input });\n\n      if (result.success) {\n        position = result.index;\n        ast.push(result.ast);\n      }\n    } while (result.success);\n\n    if (ast.length > 0) {\n      return { success: true, ast: post(ast), index: position, input };\n    } else {\n      return { success: false, ast: null, index: position, input };\n    }\n  };\n}\n\n// Optional parser combinator\nfunction o(optional, post = (v) => v) {\n  return function ({ index = 0, input }) {\n    const result = optional({ index, input });\n\n    if (result.success) {\n      return {\n        success: true,\n        ast: post(result.ast),\n        index: result.index,\n        input,\n      };\n    } else {\n      return { success: true, ast: post(null), index, input };\n    }\n  };\n}\n\n// Lookahead parser combinator\nfunction l(lookahead, post = (v) => v) {\n  return function ({ index = 0, input }) {\n    const result = lookahead.do({ index, input });\n\n    if (result.success) {\n      const resultNext = lookahead.next({ index: result.index, input });\n\n      if (resultNext.success) {\n        return {\n          success: true,\n          ast: post(result.ast),\n          index: result.index,\n          input,\n        };\n      }\n    }\n\n    return { success: false, ast: null, index, input };\n  };\n}\n\n// Negative parser combinator\nfunction n(negative, post = (v) => v) {\n  return function ({ index = 0, input }) {\n    const result = negative.do({ index, input });\n\n    if (result.success) {\n      const resultNot = negative.not({ index, input });\n\n      if (!resultNot.success) {\n        return {\n          success: true,\n          ast: post(result.ast),\n          index: result.index,\n          input,\n        };\n      }\n    }\n\n    return { success: false, ast: null, index, input };\n  };\n}\n\n// Token parser combinator\nfunction t(token, post = (v) => v.text) {\n  return function ({ index = 0, input }) {\n    const result = input[index];\n\n    if (\n      result !== undefined &&\n      (token.type === undefined || token.type === result.type) &&\n      (token.text === undefined ||\n        token.text.toUpperCase() === result.text.toUpperCase())\n    ) {\n      return {\n        success: true,\n        ast: post(result),\n        index: index + 1,\n        input,\n      };\n    } else {\n      return { success: false, ast: null, index, input };\n    }\n  };\n}\n\n// Empty parser constant\nconst e = function ({ index = 0, input }) {\n  return { success: true, ast: null, index, input };\n};\n\n// Finish parser constant\nconst f = function ({ index = 0, input }) {\n  return { success: index === input.length, ast: null, index, input };\n};\n\nmodule.exports = { s, a, m, o, l, n, t, e, f };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9029, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/sqlite3/schema/internal/parser.js"],"sourcesContent":["const { tokenize } = require('./tokenizer');\nconst { s, a, m, o, l, n, t, e, f } = require('./parser-combinator');\n\nconst TOKENS = {\n  keyword:\n    /(?:ABORT|ACTION|ADD|AFTER|ALL|ALTER|ALWAYS|ANALYZE|AND|AS|ASC|ATTACH|AUTOINCREMENT|BEFORE|BEGIN|BETWEEN|BY|CASCADE|CASE|CAST|CHECK|COLLATE|COLUMN|COMMIT|CONFLICT|CONSTRAINT|CREATE|CROSS|CURRENT|CURRENT_DATE|CURRENT_TIME|CURRENT_TIMESTAMP|DATABASE|DEFAULT|DEFERRED|DEFERRABLE|DELETE|DESC|DETACH|DISTINCT|DO|DROP|END|EACH|ELSE|ESCAPE|EXCEPT|EXCLUSIVE|EXCLUDE|EXISTS|EXPLAIN|FAIL|FILTER|FIRST|FOLLOWING|FOR|FOREIGN|FROM|FULL|GENERATED|GLOB|GROUP|GROUPS|HAVING|IF|IGNORE|IMMEDIATE|IN|INDEX|INDEXED|INITIALLY|INNER|INSERT|INSTEAD|INTERSECT|INTO|IS|ISNULL|JOIN|KEY|LAST|LEFT|LIKE|LIMIT|MATCH|MATERIALIZED|NATURAL|NO|NOT|NOTHING|NOTNULL|NULL|NULLS|OF|OFFSET|ON|OR|ORDER|OTHERS|OUTER|OVER|PARTITION|PLAN|PRAGMA|PRECEDING|PRIMARY|QUERY|RAISE|RANGE|RECURSIVE|REFERENCES|REGEXP|REINDEX|RELEASE|RENAME|REPLACE|RESTRICT|RETURNING|RIGHT|ROLLBACK|ROW|ROWS|SAVEPOINT|SELECT|SET|TABLE|TEMP|TEMPORARY|THEN|TIES|TO|TRANSACTION|TRIGGER|UNBOUNDED|UNION|UNIQUE|UPDATE|USING|VACUUM|VALUES|VIEW|VIRTUAL|WHEN|WHERE|WINDOW|WITH|WITHOUT)(?=\\s+|-|\\(|\\)|;|\\+|\\*|\\/|%|==|=|<=|<>|<<|<|>=|>>|>|!=|,|&|~|\\|\\||\\||\\.)/,\n  id: /\"[^\"]*(?:\"\"[^\"]*)*\"|`[^`]*(?:``[^`]*)*`|\\[[^[\\]]*\\]|[a-z_][a-z0-9_$]*/,\n  string: /'[^']*(?:''[^']*)*'/,\n  blob: /x'(?:[0-9a-f][0-9a-f])+'/,\n  numeric: /(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e(?:\\+|-)?\\d+)?|0x[0-9a-f]+/,\n  variable: /\\?\\d*|[@$:][a-z0-9_$]+/,\n  operator: /-|\\(|\\)|;|\\+|\\*|\\/|%|==|=|<=|<>|<<|<|>=|>>|>|!=|,|&|~|\\|\\||\\||\\./,\n  _ws: /\\s+/,\n};\n\nfunction parseCreateTable(sql) {\n  const result = createTable({ input: tokenize(sql, TOKENS) });\n\n  if (!result.success) {\n    throw new Error(\n      `Parsing CREATE TABLE failed at [${result.input\n        .slice(result.index)\n        .map((t) => t.text)\n        .join(' ')}] of \"${sql}\"`\n    );\n  }\n\n  return result.ast;\n}\n\nfunction parseCreateIndex(sql) {\n  const result = createIndex({ input: tokenize(sql, TOKENS) });\n\n  if (!result.success) {\n    throw new Error(\n      `Parsing CREATE INDEX failed at [${result.input\n        .slice(result.index)\n        .map((t) => t.text)\n        .join(' ')}] of \"${sql}\"`\n    );\n  }\n\n  return result.ast;\n}\n\nfunction createTable(ctx) {\n  return s(\n    [\n      t({ text: 'CREATE' }, (v) => null),\n      temporary,\n      t({ text: 'TABLE' }, (v) => null),\n      exists,\n      schema,\n      table,\n      t({ text: '(' }, (v) => null),\n      columnDefinitionList,\n      tableConstraintList,\n      t({ text: ')' }, (v) => null),\n      rowid,\n      f,\n    ],\n    (v) => Object.assign({}, ...v.filter((x) => x !== null))\n  )(ctx);\n}\n\nfunction temporary(ctx) {\n  return a([t({ text: 'TEMP' }), t({ text: 'TEMPORARY' }), e], (v) => ({\n    temporary: v !== null,\n  }))(ctx);\n}\n\nfunction rowid(ctx) {\n  return o(s([t({ text: 'WITHOUT' }), t({ text: 'ROWID' })]), (v) => ({\n    rowid: v !== null,\n  }))(ctx);\n}\n\nfunction columnDefinitionList(ctx) {\n  return a([\n    s([columnDefinition, t({ text: ',' }), columnDefinitionList], (v) => ({\n      columns: [v[0]].concat(v[2].columns),\n    })),\n    s([columnDefinition], (v) => ({ columns: [v[0]] })),\n  ])(ctx);\n}\n\nfunction columnDefinition(ctx) {\n  return s(\n    [s([identifier], (v) => ({ name: v[0] })), typeName, columnConstraintList],\n    (v) => Object.assign({}, ...v)\n  )(ctx);\n}\n\nfunction typeName(ctx) {\n  return o(\n    s(\n      [\n        m(t({ type: 'id' })),\n        a([\n          s(\n            [\n              t({ text: '(' }),\n              signedNumber,\n              t({ text: ',' }),\n              signedNumber,\n              t({ text: ')' }),\n            ],\n            (v) => `(${v[1]}, ${v[3]})`\n          ),\n          s(\n            [t({ text: '(' }), signedNumber, t({ text: ')' })],\n            (v) => `(${v[1]})`\n          ),\n          e,\n        ]),\n      ],\n      (v) => `${v[0].join(' ')}${v[1] || ''}`\n    ),\n    (v) => ({ type: v })\n  )(ctx);\n}\n\nfunction columnConstraintList(ctx) {\n  return o(m(columnConstraint), (v) => ({\n    constraints: Object.assign(\n      {\n        primary: null,\n        notnull: null,\n        null: null,\n        unique: null,\n        check: null,\n        default: null,\n        collate: null,\n        references: null,\n        as: null,\n      },\n      ...(v || [])\n    ),\n  }))(ctx);\n}\n\nfunction columnConstraint(ctx) {\n  return a([\n    primaryColumnConstraint,\n    notnullColumnConstraint,\n    nullColumnConstraint,\n    uniqueColumnConstraint,\n    checkColumnConstraint,\n    defaultColumnConstraint,\n    collateColumnConstraint,\n    referencesColumnConstraint,\n    asColumnConstraint,\n  ])(ctx);\n}\n\nfunction primaryColumnConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      t({ text: 'PRIMARY' }, (v) => null),\n      t({ text: 'KEY' }, (v) => null),\n      order,\n      conflictClause,\n      autoincrement,\n    ],\n    (v) => ({ primary: Object.assign({}, ...v.filter((x) => x !== null)) })\n  )(ctx);\n}\n\nfunction autoincrement(ctx) {\n  return o(t({ text: 'AUTOINCREMENT' }), (v) => ({\n    autoincrement: v !== null,\n  }))(ctx);\n}\n\nfunction notnullColumnConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      t({ text: 'NOT' }, (v) => null),\n      t({ text: 'NULL' }, (v) => null),\n      conflictClause,\n    ],\n    (v) => ({ notnull: Object.assign({}, ...v.filter((x) => x !== null)) })\n  )(ctx);\n}\n\nfunction nullColumnConstraint(ctx) {\n  return s(\n    [constraintName, t({ text: 'NULL' }, (v) => null), conflictClause],\n    (v) => ({ null: Object.assign({}, ...v.filter((x) => x !== null)) })\n  )(ctx);\n}\n\nfunction uniqueColumnConstraint(ctx) {\n  return s(\n    [constraintName, t({ text: 'UNIQUE' }, (v) => null), conflictClause],\n    (v) => ({ unique: Object.assign({}, ...v.filter((x) => x !== null)) })\n  )(ctx);\n}\n\nfunction checkColumnConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      t({ text: 'CHECK' }, (v) => null),\n      t({ text: '(' }, (v) => null),\n      s([expression], (v) => ({ expression: v[0] })),\n      t({ text: ')' }, (v) => null),\n    ],\n    (v) => ({ check: Object.assign({}, ...v.filter((x) => x !== null)) })\n  )(ctx);\n}\n\nfunction defaultColumnConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      t({ text: 'DEFAULT' }, (v) => null),\n      a([\n        s([t({ text: '(' }), expression, t({ text: ')' })], (v) => ({\n          value: v[1],\n          expression: true,\n        })),\n        s([literalValue], (v) => ({ value: v[0], expression: false })),\n        s([signedNumber], (v) => ({ value: v[0], expression: false })),\n      ]),\n    ],\n    (v) => ({ default: Object.assign({}, ...v.filter((x) => x !== null)) })\n  )(ctx);\n}\n\nfunction collateColumnConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      t({ text: 'COLLATE' }, (v) => null),\n      t({ type: 'id' }, (v) => ({ collation: v.text })),\n    ],\n    (v) => ({ collate: Object.assign({}, ...v.filter((x) => x !== null)) })\n  )(ctx);\n}\n\nfunction referencesColumnConstraint(ctx) {\n  return s(\n    [constraintName, s([foreignKeyClause], (v) => v[0].references)],\n    (v) => ({\n      references: Object.assign({}, ...v.filter((x) => x !== null)),\n    })\n  )(ctx);\n}\n\nfunction asColumnConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      o(s([t({ text: 'GENERATED' }), t({ text: 'ALWAYS' })]), (v) => ({\n        generated: v !== null,\n      })),\n      t({ text: 'AS' }, (v) => null),\n      t({ text: '(' }, (v) => null),\n      s([expression], (v) => ({ expression: v[0] })),\n      t({ text: ')' }, (v) => null),\n      a([t({ text: 'STORED' }), t({ text: 'VIRTUAL' }), e], (v) => ({\n        mode: v ? v.toUpperCase() : null,\n      })),\n    ],\n    (v) => ({ as: Object.assign({}, ...v.filter((x) => x !== null)) })\n  )(ctx);\n}\n\nfunction tableConstraintList(ctx) {\n  return o(m(s([t({ text: ',' }), tableConstraint], (v) => v[1])), (v) => ({\n    constraints: v || [],\n  }))(ctx);\n}\n\nfunction tableConstraint(ctx) {\n  return a([\n    primaryTableConstraint,\n    uniqueTableConstraint,\n    checkTableConstraint,\n    foreignTableConstraint,\n  ])(ctx);\n}\n\nfunction primaryTableConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      t({ text: 'PRIMARY' }, (v) => null),\n      t({ text: 'KEY' }, (v) => null),\n      t({ text: '(' }, (v) => null),\n      indexedColumnList,\n      t({ text: ')' }, (v) => null),\n      conflictClause,\n    ],\n    (v) =>\n      Object.assign({ type: 'PRIMARY KEY' }, ...v.filter((x) => x !== null))\n  )(ctx);\n}\n\nfunction uniqueTableConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      t({ text: 'UNIQUE' }, (v) => null),\n      t({ text: '(' }, (v) => null),\n      indexedColumnList,\n      t({ text: ')' }, (v) => null),\n      conflictClause,\n    ],\n    (v) => Object.assign({ type: 'UNIQUE' }, ...v.filter((x) => x !== null))\n  )(ctx);\n}\n\nfunction conflictClause(ctx) {\n  return o(\n    s(\n      [\n        t({ text: 'ON' }),\n        t({ text: 'CONFLICT' }),\n        a([\n          t({ text: 'ROLLBACK' }),\n          t({ text: 'ABORT' }),\n          t({ text: 'FAIL' }),\n          t({ text: 'IGNORE' }),\n          t({ text: 'REPLACE' }),\n        ]),\n      ],\n      (v) => v[2]\n    ),\n    (v) => ({ conflict: v ? v.toUpperCase() : null })\n  )(ctx);\n}\n\nfunction checkTableConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      t({ text: 'CHECK' }, (v) => null),\n      t({ text: '(' }, (v) => null),\n      s([expression], (v) => ({ expression: v[0] })),\n      t({ text: ')' }, (v) => null),\n    ],\n    (v) => Object.assign({ type: 'CHECK' }, ...v.filter((x) => x !== null))\n  )(ctx);\n}\n\nfunction foreignTableConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      t({ text: 'FOREIGN' }, (v) => null),\n      t({ text: 'KEY' }, (v) => null),\n      t({ text: '(' }, (v) => null),\n      columnNameList,\n      t({ text: ')' }, (v) => null),\n      foreignKeyClause,\n    ],\n    (v) =>\n      Object.assign({ type: 'FOREIGN KEY' }, ...v.filter((x) => x !== null))\n  )(ctx);\n}\n\nfunction foreignKeyClause(ctx) {\n  return s(\n    [\n      t({ text: 'REFERENCES' }, (v) => null),\n      table,\n      columnNameListOptional,\n      o(m(a([deleteReference, updateReference, matchReference])), (v) =>\n        Object.assign({ delete: null, update: null, match: null }, ...(v || []))\n      ),\n      deferrable,\n    ],\n    (v) => ({ references: Object.assign({}, ...v.filter((x) => x !== null)) })\n  )(ctx);\n}\n\nfunction columnNameListOptional(ctx) {\n  return o(\n    s([t({ text: '(' }), columnNameList, t({ text: ')' })], (v) => v[1]),\n    (v) => ({ columns: v ? v.columns : [] })\n  )(ctx);\n}\n\nfunction columnNameList(ctx) {\n  return s(\n    [\n      o(m(s([identifier, t({ text: ',' })], (v) => v[0])), (v) =>\n        v !== null ? v : []\n      ),\n      identifier,\n    ],\n    (v) => ({ columns: v[0].concat([v[1]]) })\n  )(ctx);\n}\n\nfunction deleteReference(ctx) {\n  return s([t({ text: 'ON' }), t({ text: 'DELETE' }), onAction], (v) => ({\n    delete: v[2],\n  }))(ctx);\n}\n\nfunction updateReference(ctx) {\n  return s([t({ text: 'ON' }), t({ text: 'UPDATE' }), onAction], (v) => ({\n    update: v[2],\n  }))(ctx);\n}\n\nfunction matchReference(ctx) {\n  return s(\n    [t({ text: 'MATCH' }), a([t({ type: 'keyword' }), t({ type: 'id' })])],\n    (v) => ({ match: v[1] })\n  )(ctx);\n}\n\nfunction deferrable(ctx) {\n  return o(\n    s([\n      o(t({ text: 'NOT' })),\n      t({ text: 'DEFERRABLE' }),\n      o(\n        s(\n          [\n            t({ text: 'INITIALLY' }),\n            a([t({ text: 'DEFERRED' }), t({ text: 'IMMEDIATE' })]),\n          ],\n          (v) => v[1].toUpperCase()\n        )\n      ),\n    ]),\n    (v) => ({ deferrable: v ? { not: v[0] !== null, initially: v[2] } : null })\n  )(ctx);\n}\n\nfunction constraintName(ctx) {\n  return o(\n    s([t({ text: 'CONSTRAINT' }), identifier], (v) => v[1]),\n    (v) => ({ name: v })\n  )(ctx);\n}\n\nfunction createIndex(ctx) {\n  return s(\n    [\n      t({ text: 'CREATE' }, (v) => null),\n      unique,\n      t({ text: 'INDEX' }, (v) => null),\n      exists,\n      schema,\n      index,\n      t({ text: 'ON' }, (v) => null),\n      table,\n      t({ text: '(' }, (v) => null),\n      indexedColumnList,\n      t({ text: ')' }, (v) => null),\n      where,\n      f,\n    ],\n    (v) => Object.assign({}, ...v.filter((x) => x !== null))\n  )(ctx);\n}\n\nfunction unique(ctx) {\n  return o(t({ text: 'UNIQUE' }), (v) => ({ unique: v !== null }))(ctx);\n}\n\nfunction exists(ctx) {\n  return o(\n    s([t({ text: 'IF' }), t({ text: 'NOT' }), t({ text: 'EXISTS' })]),\n    (v) => ({ exists: v !== null })\n  )(ctx);\n}\n\nfunction schema(ctx) {\n  return o(\n    s([identifier, t({ text: '.' })], (v) => v[0]),\n    (v) => ({ schema: v })\n  )(ctx);\n}\n\nfunction index(ctx) {\n  return s([identifier], (v) => ({ index: v[0] }))(ctx);\n}\n\nfunction table(ctx) {\n  return s([identifier], (v) => ({ table: v[0] }))(ctx);\n}\n\nfunction where(ctx) {\n  return o(\n    s([t({ text: 'WHERE' }), expression], (v) => v[1]),\n    (v) => ({ where: v })\n  )(ctx);\n}\n\nfunction indexedColumnList(ctx) {\n  return a([\n    s([indexedColumn, t({ text: ',' }), indexedColumnList], (v) => ({\n      columns: [v[0]].concat(v[2].columns),\n    })),\n    s([indexedColumnExpression, t({ text: ',' }), indexedColumnList], (v) => ({\n      columns: [v[0]].concat(v[2].columns),\n    })),\n    l({ do: indexedColumn, next: t({ text: ')' }) }, (v) => ({\n      columns: [v],\n    })),\n    l({ do: indexedColumnExpression, next: t({ text: ')' }) }, (v) => ({\n      columns: [v],\n    })),\n  ])(ctx);\n}\n\nfunction indexedColumn(ctx) {\n  return s(\n    [\n      s([identifier], (v) => ({ name: v[0], expression: false })),\n      collation,\n      order,\n    ],\n    (v) => Object.assign({}, ...v.filter((x) => x !== null))\n  )(ctx);\n}\n\nfunction indexedColumnExpression(ctx) {\n  return s(\n    [\n      s([indexedExpression], (v) => ({ name: v[0], expression: true })),\n      collation,\n      order,\n    ],\n    (v) => Object.assign({}, ...v.filter((x) => x !== null))\n  )(ctx);\n}\n\nfunction collation(ctx) {\n  return o(\n    s([t({ text: 'COLLATE' }), t({ type: 'id' })], (v) => v[1]),\n    (v) => ({ collation: v })\n  )(ctx);\n}\n\nfunction order(ctx) {\n  return a([t({ text: 'ASC' }), t({ text: 'DESC' }), e], (v) => ({\n    order: v ? v.toUpperCase() : null,\n  }))(ctx);\n}\n\nfunction indexedExpression(ctx) {\n  return m(\n    a([\n      n({\n        do: t({ type: 'keyword' }),\n        not: a([\n          t({ text: 'COLLATE' }),\n          t({ text: 'ASC' }),\n          t({ text: 'DESC' }),\n        ]),\n      }),\n      t({ type: 'id' }),\n      t({ type: 'string' }),\n      t({ type: 'blob' }),\n      t({ type: 'numeric' }),\n      t({ type: 'variable' }),\n      n({\n        do: t({ type: 'operator' }),\n        not: a([t({ text: '(' }), t({ text: ')' }), t({ text: ',' })]),\n      }),\n      s([t({ text: '(' }), o(expression), t({ text: ')' })], (v) => v[1] || []),\n    ])\n  )(ctx);\n}\n\nfunction expression(ctx) {\n  return m(\n    a([\n      t({ type: 'keyword' }),\n      t({ type: 'id' }),\n      t({ type: 'string' }),\n      t({ type: 'blob' }),\n      t({ type: 'numeric' }),\n      t({ type: 'variable' }),\n      n({\n        do: t({ type: 'operator' }),\n        not: a([t({ text: '(' }), t({ text: ')' })]),\n      }),\n      s([t({ text: '(' }), o(expression), t({ text: ')' })], (v) => v[1] || []),\n    ])\n  )(ctx);\n}\n\nfunction identifier(ctx) {\n  return a([t({ type: 'id' }), t({ type: 'string' })], (v) =>\n    /^[\"`['][^]*[\"`\\]']$/.test(v) ? v.substring(1, v.length - 1) : v\n  )(ctx);\n}\n\nfunction onAction(ctx) {\n  return a(\n    [\n      s([t({ text: 'SET' }), t({ text: 'NULL' })], (v) => `${v[0]} ${v[1]}`),\n      s([t({ text: 'SET' }), t({ text: 'DEFAULT' })], (v) => `${v[0]} ${v[1]}`),\n      t({ text: 'CASCADE' }),\n      t({ text: 'RESTRICT' }),\n      s([t({ text: 'NO' }), t({ text: 'ACTION' })], (v) => `${v[0]} ${v[1]}`),\n    ],\n    (v) => v.toUpperCase()\n  )(ctx);\n}\n\nfunction literalValue(ctx) {\n  return a([\n    t({ type: 'numeric' }),\n    t({ type: 'string' }),\n    t({ type: 'id' }),\n    t({ type: 'blob' }),\n    t({ text: 'NULL' }),\n    t({ text: 'TRUE' }),\n    t({ text: 'FALSE' }),\n    t({ text: 'CURRENT_TIME' }),\n    t({ text: 'CURRENT_DATE' }),\n    t({ text: 'CURRENT_TIMESTAMP' }),\n  ])(ctx);\n}\n\nfunction signedNumber(ctx) {\n  return s(\n    [a([t({ text: '+' }), t({ text: '-' }), e]), t({ type: 'numeric' })],\n    (v) => `${v[0] || ''}${v[1]}`\n  )(ctx);\n}\n\nmodule.exports = {\n  parseCreateTable,\n  parseCreateIndex,\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10029, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/sqlite3/schema/internal/compiler.js"],"sourcesContent":["function compileCreateTable(ast, wrap = (v) => v) {\n  return createTable(ast, wrap);\n}\n\nfunction compileCreateIndex(ast, wrap = (v) => v) {\n  return createIndex(ast, wrap);\n}\n\nfunction createTable(ast, wrap) {\n  return `CREATE${temporary(ast, wrap)} TABLE${exists(ast, wrap)} ${schema(\n    ast,\n    wrap\n  )}${table(ast, wrap)} (${columnDefinitionList(\n    ast,\n    wrap\n  )}${tableConstraintList(ast, wrap)})${rowid(ast, wrap)}`;\n}\n\nfunction temporary(ast, wrap) {\n  return ast.temporary ? ' TEMP' : '';\n}\n\nfunction rowid(ast, wrap) {\n  return ast.rowid ? ' WITHOUT ROWID' : '';\n}\n\nfunction columnDefinitionList(ast, wrap) {\n  return ast.columns.map((column) => columnDefinition(column, wrap)).join(', ');\n}\n\nfunction columnDefinition(ast, wrap) {\n  return `${identifier(ast.name, wrap)}${typeName(\n    ast,\n    wrap\n  )}${columnConstraintList(ast.constraints, wrap)}`;\n}\n\nfunction typeName(ast, wrap) {\n  return ast.type !== null ? ` ${ast.type}` : '';\n}\n\nfunction columnConstraintList(ast, wrap) {\n  return `${primaryColumnConstraint(ast, wrap)}${notnullColumnConstraint(\n    ast,\n    wrap\n  )}${nullColumnConstraint(ast, wrap)}${uniqueColumnConstraint(\n    ast,\n    wrap\n  )}${checkColumnConstraint(ast, wrap)}${defaultColumnConstraint(\n    ast,\n    wrap\n  )}${collateColumnConstraint(ast, wrap)}${referencesColumnConstraint(\n    ast,\n    wrap\n  )}${asColumnConstraint(ast, wrap)}`;\n}\n\nfunction primaryColumnConstraint(ast, wrap) {\n  return ast.primary !== null\n    ? ` ${constraintName(ast.primary, wrap)}PRIMARY KEY${order(\n        ast.primary,\n        wrap\n      )}${conflictClause(ast.primary, wrap)}${autoincrement(ast.primary, wrap)}`\n    : '';\n}\n\nfunction autoincrement(ast, wrap) {\n  return ast.autoincrement ? ' AUTOINCREMENT' : '';\n}\n\nfunction notnullColumnConstraint(ast, wrap) {\n  return ast.notnull !== null\n    ? ` ${constraintName(ast.notnull, wrap)}NOT NULL${conflictClause(\n        ast.notnull,\n        wrap\n      )}`\n    : '';\n}\n\nfunction nullColumnConstraint(ast, wrap) {\n  return ast.null !== null\n    ? ` ${constraintName(ast.null, wrap)}NULL${conflictClause(ast.null, wrap)}`\n    : '';\n}\n\nfunction uniqueColumnConstraint(ast, wrap) {\n  return ast.unique !== null\n    ? ` ${constraintName(ast.unique, wrap)}UNIQUE${conflictClause(\n        ast.unique,\n        wrap\n      )}`\n    : '';\n}\n\nfunction checkColumnConstraint(ast, wrap) {\n  return ast.check !== null\n    ? ` ${constraintName(ast.check, wrap)}CHECK (${expression(\n        ast.check.expression,\n        wrap\n      )})`\n    : '';\n}\n\nfunction defaultColumnConstraint(ast, wrap) {\n  return ast.default !== null\n    ? ` ${constraintName(ast.default, wrap)}DEFAULT ${\n        !ast.default.expression\n          ? ast.default.value\n          : `(${expression(ast.default.value, wrap)})`\n      }`\n    : '';\n}\n\nfunction collateColumnConstraint(ast, wrap) {\n  return ast.collate !== null\n    ? ` ${constraintName(ast.collate, wrap)}COLLATE ${ast.collate.collation}`\n    : '';\n}\n\nfunction referencesColumnConstraint(ast, wrap) {\n  return ast.references !== null\n    ? ` ${constraintName(ast.references, wrap)}${foreignKeyClause(\n        ast.references,\n        wrap\n      )}`\n    : '';\n}\n\nfunction asColumnConstraint(ast, wrap) {\n  return ast.as !== null\n    ? ` ${constraintName(ast.as, wrap)}${\n        ast.as.generated ? 'GENERATED ALWAYS ' : ''\n      }AS (${expression(ast.as.expression, wrap)})${\n        ast.as.mode !== null ? ` ${ast.as.mode}` : ''\n      }`\n    : '';\n}\n\nfunction tableConstraintList(ast, wrap) {\n  return ast.constraints.reduce(\n    (constraintList, constraint) =>\n      `${constraintList}, ${tableConstraint(constraint, wrap)}`,\n    ''\n  );\n}\n\nfunction tableConstraint(ast, wrap) {\n  switch (ast.type) {\n    case 'PRIMARY KEY':\n      return primaryTableConstraint(ast, wrap);\n    case 'UNIQUE':\n      return uniqueTableConstraint(ast, wrap);\n    case 'CHECK':\n      return checkTableConstraint(ast, wrap);\n    case 'FOREIGN KEY':\n      return foreignTableConstraint(ast, wrap);\n  }\n}\n\nfunction primaryTableConstraint(ast, wrap) {\n  return `${constraintName(ast, wrap)}PRIMARY KEY (${indexedColumnList(\n    ast,\n    wrap\n  )})${conflictClause(ast, wrap)}`;\n}\n\nfunction uniqueTableConstraint(ast, wrap) {\n  return `${constraintName(ast, wrap)}UNIQUE (${indexedColumnList(\n    ast,\n    wrap\n  )})${conflictClause(ast, wrap)}`;\n}\n\nfunction conflictClause(ast, wrap) {\n  return ast.conflict !== null ? ` ON CONFLICT ${ast.conflict}` : '';\n}\n\nfunction checkTableConstraint(ast, wrap) {\n  return `${constraintName(ast, wrap)}CHECK (${expression(\n    ast.expression,\n    wrap\n  )})`;\n}\n\nfunction foreignTableConstraint(ast, wrap) {\n  return `${constraintName(ast, wrap)}FOREIGN KEY (${columnNameList(\n    ast,\n    wrap\n  )}) ${foreignKeyClause(ast.references, wrap)}`;\n}\n\nfunction foreignKeyClause(ast, wrap) {\n  return `REFERENCES ${table(ast, wrap)}${columnNameListOptional(\n    ast,\n    wrap\n  )}${deleteUpdateMatchList(ast, wrap)}${deferrable(ast.deferrable, wrap)}`;\n}\n\nfunction columnNameListOptional(ast, wrap) {\n  return ast.columns.length > 0 ? ` (${columnNameList(ast, wrap)})` : '';\n}\n\nfunction columnNameList(ast, wrap) {\n  return ast.columns.map((column) => identifier(column, wrap)).join(', ');\n}\n\nfunction deleteUpdateMatchList(ast, wrap) {\n  return `${deleteReference(ast, wrap)}${updateReference(\n    ast,\n    wrap\n  )}${matchReference(ast, wrap)}`;\n}\n\nfunction deleteReference(ast, wrap) {\n  return ast.delete !== null ? ` ON DELETE ${ast.delete}` : '';\n}\n\nfunction updateReference(ast, wrap) {\n  return ast.update !== null ? ` ON UPDATE ${ast.update}` : '';\n}\n\nfunction matchReference(ast, wrap) {\n  return ast.match !== null ? ` MATCH ${ast.match}` : '';\n}\n\nfunction deferrable(ast, wrap) {\n  return ast !== null\n    ? ` ${ast.not ? 'NOT ' : ''}DEFERRABLE${\n        ast.initially !== null ? ` INITIALLY ${ast.initially}` : ''\n      }`\n    : '';\n}\n\nfunction constraintName(ast, wrap) {\n  return ast.name !== null ? `CONSTRAINT ${identifier(ast.name, wrap)} ` : '';\n}\n\nfunction createIndex(ast, wrap) {\n  return `CREATE${unique(ast, wrap)} INDEX${exists(ast, wrap)} ${schema(\n    ast,\n    wrap\n  )}${index(ast, wrap)} on ${table(ast, wrap)} (${indexedColumnList(\n    ast,\n    wrap\n  )})${where(ast, wrap)}`;\n}\n\nfunction unique(ast, wrap) {\n  return ast.unique ? ' UNIQUE' : '';\n}\n\nfunction exists(ast, wrap) {\n  return ast.exists ? ' IF NOT EXISTS' : '';\n}\n\nfunction schema(ast, wrap) {\n  return ast.schema !== null ? `${identifier(ast.schema, wrap)}.` : '';\n}\n\nfunction index(ast, wrap) {\n  return identifier(ast.index, wrap);\n}\n\nfunction table(ast, wrap) {\n  return identifier(ast.table, wrap);\n}\n\nfunction where(ast, wrap) {\n  return ast.where !== null ? ` where ${expression(ast.where)}` : '';\n}\n\nfunction indexedColumnList(ast, wrap) {\n  return ast.columns\n    .map((column) =>\n      !column.expression\n        ? indexedColumn(column, wrap)\n        : indexedColumnExpression(column, wrap)\n    )\n    .join(', ');\n}\n\nfunction indexedColumn(ast, wrap) {\n  return `${identifier(ast.name, wrap)}${collation(ast, wrap)}${order(\n    ast,\n    wrap\n  )}`;\n}\n\nfunction indexedColumnExpression(ast, wrap) {\n  return `${indexedExpression(ast.name, wrap)}${collation(ast, wrap)}${order(\n    ast,\n    wrap\n  )}`;\n}\n\nfunction collation(ast, wrap) {\n  return ast.collation !== null ? ` COLLATE ${ast.collation}` : '';\n}\n\nfunction order(ast, wrap) {\n  return ast.order !== null ? ` ${ast.order}` : '';\n}\n\nfunction indexedExpression(ast, wrap) {\n  return expression(ast, wrap);\n}\n\nfunction expression(ast, wrap) {\n  return ast.reduce(\n    (expr, e) =>\n      Array.isArray(e)\n        ? `${expr}(${expression(e)})`\n        : !expr\n        ? e\n        : `${expr} ${e}`,\n    ''\n  );\n}\n\nfunction identifier(ast, wrap) {\n  return wrap(ast);\n}\n\nmodule.exports = {\n  compileCreateTable,\n  compileCreateIndex,\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10197, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/sqlite3/schema/internal/utils.js"],"sourcesContent":["function isEqualId(first, second) {\n  return first.toLowerCase() === second.toLowerCase();\n}\n\nfunction includesId(list, id) {\n  return list.some((item) => isEqualId(item, id));\n}\n\nmodule.exports = {\n  isEqualId,\n  includesId,\n};\n"],"names":[],"mappings":"AAAA,SAAS,UAAU,KAAK,EAAE,MAAM;IAC9B,OAAO,MAAM,WAAW,OAAO,OAAO,WAAW;AACnD;AAEA,SAAS,WAAW,IAAI,EAAE,EAAE;IAC1B,OAAO,KAAK,IAAI,CAAC,CAAC,OAAS,UAAU,MAAM;AAC7C;AAEA,OAAO,OAAO,GAAG;IACf;IACA;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10212, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/sqlite3/schema/ddl.js"],"sourcesContent":["// SQLite3_DDL\n//\n// All of the SQLite3 specific DDL helpers for renaming/dropping\n// columns and changing datatypes.\n// -------\n\nconst identity = require('lodash/identity');\nconst { nanonum } = require('../../../util/nanoid');\nconst {\n  copyData,\n  dropOriginal,\n  renameTable,\n  getTableSql,\n  isForeignCheckEnabled,\n  setForeignCheck,\n  executeForeignCheck,\n} = require('./internal/sqlite-ddl-operations');\nconst { parseCreateTable, parseCreateIndex } = require('./internal/parser');\nconst {\n  compileCreateTable,\n  compileCreateIndex,\n} = require('./internal/compiler');\nconst { isEqualId, includesId } = require('./internal/utils');\n\n// So altering the schema in SQLite3 is a major pain.\n// We have our own object to deal with the renaming and altering the types\n// for sqlite3 things.\nclass SQLite3_DDL {\n  constructor(client, tableCompiler, pragma, connection) {\n    this.client = client;\n    this.tableCompiler = tableCompiler;\n    this.pragma = pragma;\n    this.tableNameRaw = this.tableCompiler.tableNameRaw;\n    this.alteredName = `_knex_temp_alter${nanonum(3)}`;\n    this.connection = connection;\n    this.formatter = (value) =>\n      this.client.customWrapIdentifier(value, identity);\n    this.wrap = (value) => this.client.wrapIdentifierImpl(value);\n  }\n\n  tableName() {\n    return this.formatter(this.tableNameRaw);\n  }\n\n  getTableSql() {\n    const tableName = this.tableName();\n\n    return this.client.transaction(\n      async (trx) => {\n        trx.disableProcessing();\n        const result = await trx.raw(getTableSql(tableName));\n        trx.enableProcessing();\n\n        return {\n          createTable: result.filter((create) => create.type === 'table')[0]\n            .sql,\n          createIndices: result\n            .filter((create) => create.type === 'index')\n            .map((create) => create.sql),\n        };\n      },\n      { connection: this.connection }\n    );\n  }\n\n  async isForeignCheckEnabled() {\n    const result = await this.client\n      .raw(isForeignCheckEnabled())\n      .connection(this.connection);\n\n    return result[0].foreign_keys === 1;\n  }\n\n  async setForeignCheck(enable) {\n    await this.client.raw(setForeignCheck(enable)).connection(this.connection);\n  }\n\n  renameTable(trx) {\n    return trx.raw(renameTable(this.alteredName, this.tableName()));\n  }\n\n  dropOriginal(trx) {\n    return trx.raw(dropOriginal(this.tableName()));\n  }\n\n  copyData(trx, columns) {\n    return trx.raw(copyData(this.tableName(), this.alteredName, columns));\n  }\n\n  async alterColumn(columns) {\n    const { createTable, createIndices } = await this.getTableSql();\n\n    const parsedTable = parseCreateTable(createTable);\n    parsedTable.table = this.alteredName;\n\n    parsedTable.columns = parsedTable.columns.map((column) => {\n      const newColumnInfo = columns.find((c) => isEqualId(c.name, column.name));\n\n      if (newColumnInfo) {\n        column.type = newColumnInfo.type;\n\n        column.constraints.default =\n          newColumnInfo.defaultTo !== null\n            ? {\n                name: null,\n                value: newColumnInfo.defaultTo,\n                expression: false,\n              }\n            : null;\n\n        column.constraints.notnull = newColumnInfo.notNull\n          ? { name: null, conflict: null }\n          : null;\n\n        column.constraints.null = newColumnInfo.notNull\n          ? null\n          : column.constraints.null;\n      }\n\n      return column;\n    });\n\n    const newTable = compileCreateTable(parsedTable, this.wrap);\n\n    return this.generateAlterCommands(newTable, createIndices);\n  }\n\n  async dropColumn(columns) {\n    const { createTable, createIndices } = await this.getTableSql();\n\n    const parsedTable = parseCreateTable(createTable);\n    parsedTable.table = this.alteredName;\n\n    parsedTable.columns = parsedTable.columns.filter(\n      (parsedColumn) =>\n        parsedColumn.expression || !includesId(columns, parsedColumn.name)\n    );\n\n    if (parsedTable.columns.length === 0) {\n      throw new Error('Unable to drop last column from table');\n    }\n\n    parsedTable.constraints = parsedTable.constraints.filter((constraint) => {\n      if (constraint.type === 'PRIMARY KEY' || constraint.type === 'UNIQUE') {\n        return constraint.columns.every(\n          (constraintColumn) =>\n            constraintColumn.expression ||\n            !includesId(columns, constraintColumn.name)\n        );\n      } else if (constraint.type === 'FOREIGN KEY') {\n        return (\n          constraint.columns.every(\n            (constraintColumnName) => !includesId(columns, constraintColumnName)\n          ) &&\n          (constraint.references.table !== parsedTable.table ||\n            constraint.references.columns.every(\n              (referenceColumnName) => !includesId(columns, referenceColumnName)\n            ))\n        );\n      } else {\n        return true;\n      }\n    });\n\n    const newColumns = parsedTable.columns.map((column) => column.name);\n\n    const newTable = compileCreateTable(parsedTable, this.wrap);\n\n    const newIndices = [];\n    for (const createIndex of createIndices) {\n      const parsedIndex = parseCreateIndex(createIndex);\n\n      parsedIndex.columns = parsedIndex.columns.filter(\n        (parsedColumn) =>\n          parsedColumn.expression || !includesId(columns, parsedColumn.name)\n      );\n\n      if (parsedIndex.columns.length > 0) {\n        newIndices.push(compileCreateIndex(parsedIndex, this.wrap));\n      }\n    }\n\n    return this.alter(newTable, newIndices, newColumns);\n  }\n\n  async dropForeign(columns, foreignKeyName) {\n    const { createTable, createIndices } = await this.getTableSql();\n\n    const parsedTable = parseCreateTable(createTable);\n    parsedTable.table = this.alteredName;\n\n    if (!foreignKeyName) {\n      parsedTable.columns = parsedTable.columns.map((column) => ({\n        ...column,\n        references: includesId(columns, column.name) ? null : column.references,\n      }));\n    }\n\n    parsedTable.constraints = parsedTable.constraints.filter((constraint) => {\n      if (constraint.type === 'FOREIGN KEY') {\n        if (foreignKeyName) {\n          return (\n            !constraint.name || !isEqualId(constraint.name, foreignKeyName)\n          );\n        }\n\n        return constraint.columns.every(\n          (constraintColumnName) => !includesId(columns, constraintColumnName)\n        );\n      } else {\n        return true;\n      }\n    });\n\n    const newTable = compileCreateTable(parsedTable, this.wrap);\n\n    return this.alter(newTable, createIndices);\n  }\n\n  async dropPrimary(constraintName) {\n    const { createTable, createIndices } = await this.getTableSql();\n\n    const parsedTable = parseCreateTable(createTable);\n    parsedTable.table = this.alteredName;\n\n    parsedTable.columns = parsedTable.columns.map((column) => ({\n      ...column,\n      primary: null,\n    }));\n\n    parsedTable.constraints = parsedTable.constraints.filter((constraint) => {\n      if (constraint.type === 'PRIMARY KEY') {\n        if (constraintName) {\n          return (\n            !constraint.name || !isEqualId(constraint.name, constraintName)\n          );\n        } else {\n          return false;\n        }\n      } else {\n        return true;\n      }\n    });\n\n    const newTable = compileCreateTable(parsedTable, this.wrap);\n\n    return this.alter(newTable, createIndices);\n  }\n\n  async primary(columns, constraintName) {\n    const { createTable, createIndices } = await this.getTableSql();\n\n    const parsedTable = parseCreateTable(createTable);\n    parsedTable.table = this.alteredName;\n\n    parsedTable.columns = parsedTable.columns.map((column) => ({\n      ...column,\n      primary: null,\n    }));\n\n    parsedTable.constraints = parsedTable.constraints.filter(\n      (constraint) => constraint.type !== 'PRIMARY KEY'\n    );\n\n    parsedTable.constraints.push({\n      type: 'PRIMARY KEY',\n      name: constraintName || null,\n      columns: columns.map((column) => ({\n        name: column,\n        expression: false,\n        collation: null,\n        order: null,\n      })),\n      conflict: null,\n    });\n\n    const newTable = compileCreateTable(parsedTable, this.wrap);\n\n    return this.alter(newTable, createIndices);\n  }\n\n  async foreign(foreignInfo) {\n    const { createTable, createIndices } = await this.getTableSql();\n\n    const parsedTable = parseCreateTable(createTable);\n    parsedTable.table = this.alteredName;\n\n    parsedTable.constraints.push({\n      type: 'FOREIGN KEY',\n      name: foreignInfo.keyName || null,\n      columns: foreignInfo.column,\n      references: {\n        table: foreignInfo.inTable,\n        columns: foreignInfo.references,\n        delete: foreignInfo.onDelete || null,\n        update: foreignInfo.onUpdate || null,\n        match: null,\n        deferrable: null,\n      },\n    });\n\n    const newTable = compileCreateTable(parsedTable, this.wrap);\n\n    return this.generateAlterCommands(newTable, createIndices);\n  }\n\n  async setNullable(column, isNullable) {\n    const { createTable, createIndices } = await this.getTableSql();\n\n    const parsedTable = parseCreateTable(createTable);\n    parsedTable.table = this.alteredName;\n\n    const parsedColumn = parsedTable.columns.find((c) =>\n      isEqualId(column, c.name)\n    );\n\n    if (!parsedColumn) {\n      throw new Error(\n        `.setNullable: Column ${column} does not exist in table ${this.tableName()}.`\n      );\n    }\n\n    parsedColumn.constraints.notnull = isNullable\n      ? null\n      : { name: null, conflict: null };\n\n    parsedColumn.constraints.null = isNullable\n      ? parsedColumn.constraints.null\n      : null;\n\n    const newTable = compileCreateTable(parsedTable, this.wrap);\n\n    return this.generateAlterCommands(newTable, createIndices);\n  }\n\n  async alter(newSql, createIndices, columns) {\n    const wasForeignCheckEnabled = await this.isForeignCheckEnabled();\n\n    if (wasForeignCheckEnabled) {\n      await this.setForeignCheck(false);\n    }\n\n    try {\n      await this.client.transaction(\n        async (trx) => {\n          await trx.raw(newSql);\n          await this.copyData(trx, columns);\n          await this.dropOriginal(trx);\n          await this.renameTable(trx);\n\n          for (const createIndex of createIndices) {\n            await trx.raw(createIndex);\n          }\n\n          if (wasForeignCheckEnabled) {\n            const foreignViolations = await trx.raw(executeForeignCheck());\n\n            if (foreignViolations.length > 0) {\n              throw new Error('FOREIGN KEY constraint failed');\n            }\n          }\n        },\n        { connection: this.connection }\n      );\n    } finally {\n      if (wasForeignCheckEnabled) {\n        await this.setForeignCheck(true);\n      }\n    }\n  }\n\n  async generateAlterCommands(newSql, createIndices, columns) {\n    const sql = [];\n    const pre = [];\n    const post = [];\n    let check = null;\n\n    sql.push(newSql);\n    sql.push(copyData(this.tableName(), this.alteredName, columns));\n    sql.push(dropOriginal(this.tableName()));\n    sql.push(renameTable(this.alteredName, this.tableName()));\n\n    for (const createIndex of createIndices) {\n      sql.push(createIndex);\n    }\n\n    const isForeignCheckEnabled = await this.isForeignCheckEnabled();\n\n    if (isForeignCheckEnabled) {\n      pre.push(setForeignCheck(false));\n      post.push(setForeignCheck(true));\n\n      check = executeForeignCheck();\n    }\n\n    return { pre, sql, check, post };\n  }\n}\n\nmodule.exports = SQLite3_DDL;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10488, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/sqlite3/query/sqlite-querybuilder.js"],"sourcesContent":["const QueryBuilder = require('../../../query/querybuilder.js');\n\nmodule.exports = class QueryBuilder_SQLite3 extends QueryBuilder {\n  withMaterialized(alias, statementOrColumnList, nothingOrStatement) {\n    this._validateWithArgs(\n      alias,\n      statementOrColumnList,\n      nothingOrStatement,\n      'with'\n    );\n    return this.withWrapped(\n      alias,\n      statementOrColumnList,\n      nothingOrStatement,\n      true\n    );\n  }\n\n  withNotMaterialized(alias, statementOrColumnList, nothingOrStatement) {\n    this._validateWithArgs(\n      alias,\n      statementOrColumnList,\n      nothingOrStatement,\n      'with'\n    );\n    return this.withWrapped(\n      alias,\n      statementOrColumnList,\n      nothingOrStatement,\n      false\n    );\n  }\n};\n"],"names":[],"mappings":"AAAA,MAAM;AAEN,OAAO,OAAO,GAAG,MAAM,6BAA6B;IAClD,iBAAiB,KAAK,EAAE,qBAAqB,EAAE,kBAAkB,EAAE;QACjE,IAAI,CAAC,iBAAiB,CACpB,OACA,uBACA,oBACA;QAEF,OAAO,IAAI,CAAC,WAAW,CACrB,OACA,uBACA,oBACA;IAEJ;IAEA,oBAAoB,KAAK,EAAE,qBAAqB,EAAE,kBAAkB,EAAE;QACpE,IAAI,CAAC,iBAAiB,CACpB,OACA,uBACA,oBACA;QAEF,OAAO,IAAI,CAAC,WAAW,CACrB,OACA,uBACA,oBACA;IAEJ;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10504, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/sqlite3/index.js"],"sourcesContent":["// SQLite3\n// -------\nconst defaults = require('lodash/defaults');\nconst map = require('lodash/map');\nconst { promisify } = require('util');\n\nconst Client = require('../../client');\n\nconst Raw = require('../../raw');\nconst Transaction = require('./execution/sqlite-transaction');\nconst SqliteQueryCompiler = require('./query/sqlite-querycompiler');\nconst SchemaCompiler = require('./schema/sqlite-compiler');\nconst ColumnCompiler = require('./schema/sqlite-columncompiler');\nconst TableCompiler = require('./schema/sqlite-tablecompiler');\nconst ViewCompiler = require('./schema/sqlite-viewcompiler');\nconst SQLite3_DDL = require('./schema/ddl');\nconst Formatter = require('../../formatter');\nconst QueryBuilder = require('./query/sqlite-querybuilder');\n\nclass Client_SQLite3 extends Client {\n  constructor(config) {\n    super(config);\n\n    if (config.connection && config.connection.filename === undefined) {\n      this.logger.warn(\n        'Could not find `connection.filename` in config. Please specify ' +\n          'the database path and name to avoid errors. ' +\n          '(see docs https://knexjs.org/guide/#configuration-options)'\n      );\n    }\n\n    if (config.useNullAsDefault === undefined) {\n      this.logger.warn(\n        'sqlite does not support inserting default values. Set the ' +\n          '`useNullAsDefault` flag to hide this warning. ' +\n          '(see docs https://knexjs.org/guide/query-builder.html#insert).'\n      );\n    }\n  }\n\n  _driver() {\n    return require('sqlite3');\n  }\n\n  schemaCompiler() {\n    return new SchemaCompiler(this, ...arguments);\n  }\n\n  transaction() {\n    return new Transaction(this, ...arguments);\n  }\n\n  queryCompiler(builder, formatter) {\n    return new SqliteQueryCompiler(this, builder, formatter);\n  }\n\n  queryBuilder() {\n    return new QueryBuilder(this);\n  }\n\n  viewCompiler(builder, formatter) {\n    return new ViewCompiler(this, builder, formatter);\n  }\n\n  columnCompiler() {\n    return new ColumnCompiler(this, ...arguments);\n  }\n\n  tableCompiler() {\n    return new TableCompiler(this, ...arguments);\n  }\n\n  ddl(compiler, pragma, connection) {\n    return new SQLite3_DDL(this, compiler, pragma, connection);\n  }\n\n  wrapIdentifierImpl(value) {\n    return value !== '*' ? `\\`${value.replace(/`/g, '``')}\\`` : '*';\n  }\n\n  // Get a raw connection from the database, returning a promise with the connection object.\n  acquireRawConnection() {\n    return new Promise((resolve, reject) => {\n      // the default mode for sqlite3\n      let flags = this.driver.OPEN_READWRITE | this.driver.OPEN_CREATE;\n\n      if (this.connectionSettings.flags) {\n        if (!Array.isArray(this.connectionSettings.flags)) {\n          throw new Error(`flags must be an array of strings`);\n        }\n        this.connectionSettings.flags.forEach((_flag) => {\n          if (!_flag.startsWith('OPEN_') || !this.driver[_flag]) {\n            throw new Error(`flag ${_flag} not supported by node-sqlite3`);\n          }\n          flags = flags | this.driver[_flag];\n        });\n      }\n\n      const db = new this.driver.Database(\n        this.connectionSettings.filename,\n        flags,\n        (err) => {\n          if (err) {\n            return reject(err);\n          }\n          resolve(db);\n        }\n      );\n    });\n  }\n\n  // Used to explicitly close a connection, called internally by the pool when\n  // a connection times out or the pool is shutdown.\n  async destroyRawConnection(connection) {\n    const close = promisify((cb) => connection.close(cb));\n    return close();\n  }\n\n  // Runs the query on the specified connection, providing the bindings and any\n  // other necessary prep work.\n  _query(connection, obj) {\n    if (!obj.sql) throw new Error('The query is empty');\n\n    const { method } = obj;\n    let callMethod;\n    switch (method) {\n      case 'insert':\n      case 'update':\n        callMethod = obj.returning ? 'all' : 'run';\n        break;\n      case 'counter':\n      case 'del':\n        callMethod = 'run';\n        break;\n      default:\n        callMethod = 'all';\n    }\n    return new Promise(function (resolver, rejecter) {\n      if (!connection || !connection[callMethod]) {\n        return rejecter(\n          new Error(`Error calling ${callMethod} on connection.`)\n        );\n      }\n      connection[callMethod](obj.sql, obj.bindings, function (err, response) {\n        if (err) return rejecter(err);\n        obj.response = response;\n\n        // We need the context here, as it contains\n        // the \"this.lastID\" or \"this.changes\"\n        obj.context = this;\n\n        return resolver(obj);\n      });\n    });\n  }\n\n  _stream(connection, obj, stream) {\n    if (!obj.sql) throw new Error('The query is empty');\n\n    const client = this;\n    return new Promise(function (resolver, rejecter) {\n      stream.on('error', rejecter);\n      stream.on('end', resolver);\n\n      return client\n        ._query(connection, obj)\n        .then((obj) => obj.response)\n        .then((rows) => rows.forEach((row) => stream.write(row)))\n        .catch(function (err) {\n          stream.emit('error', err);\n        })\n        .then(function () {\n          stream.end();\n        });\n    });\n  }\n\n  // Ensures the response is returned in the same format as other clients.\n  processResponse(obj, runner) {\n    const ctx = obj.context;\n    const { response, returning } = obj;\n    if (obj.output) return obj.output.call(runner, response);\n    switch (obj.method) {\n      case 'select':\n        return response;\n      case 'first':\n        return response[0];\n      case 'pluck':\n        return map(response, obj.pluck);\n      case 'insert': {\n        if (returning) {\n          if (response) {\n            return response;\n          }\n        }\n        return [ctx.lastID];\n      }\n      case 'update': {\n        if (returning) {\n          if (response) {\n            return response;\n          }\n        }\n        return ctx.changes;\n      }\n      case 'del':\n      case 'counter':\n        return ctx.changes;\n      default: {\n        return response;\n      }\n    }\n  }\n\n  poolDefaults() {\n    return defaults({ min: 1, max: 1 }, super.poolDefaults());\n  }\n\n  formatter(builder) {\n    return new Formatter(this, builder);\n  }\n\n  values(values, builder, formatter) {\n    if (Array.isArray(values)) {\n      if (Array.isArray(values[0])) {\n        return `( values ${values\n          .map(\n            (value) =>\n              `(${this.parameterize(value, undefined, builder, formatter)})`\n          )\n          .join(', ')})`;\n      }\n      return `(${this.parameterize(values, undefined, builder, formatter)})`;\n    }\n\n    if (values instanceof Raw) {\n      return `(${this.parameter(values, builder, formatter)})`;\n    }\n\n    return this.parameter(values, builder, formatter);\n  }\n}\n\nObject.assign(Client_SQLite3.prototype, {\n  dialect: 'sqlite3',\n\n  driverName: 'sqlite3',\n});\n\nmodule.exports = Client_SQLite3;\n"],"names":[],"mappings":"AAAA,UAAU;AACV,UAAU;AACV,MAAM;AACN,MAAM;AACN,MAAM,EAAE,SAAS,EAAE;AAEnB,MAAM;AAEN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AAEN,MAAM,uBAAuB;IAC3B,YAAY,MAAM,CAAE;QAClB,KAAK,CAAC;QAEN,IAAI,OAAO,UAAU,IAAI,OAAO,UAAU,CAAC,QAAQ,KAAK,WAAW;YACjE,IAAI,CAAC,MAAM,CAAC,IAAI,CACd,oEACE,iDACA;QAEN;QAEA,IAAI,OAAO,gBAAgB,KAAK,WAAW;YACzC,IAAI,CAAC,MAAM,CAAC,IAAI,CACd,+DACE,mDACA;QAEN;IACF;IAEA,UAAU;QACR;;;;;IACF;IAEA,iBAAiB;QACf,OAAO,IAAI,eAAe,IAAI,KAAK;IACrC;IAEA,cAAc;QACZ,OAAO,IAAI,YAAY,IAAI,KAAK;IAClC;IAEA,cAAc,OAAO,EAAE,SAAS,EAAE;QAChC,OAAO,IAAI,oBAAoB,IAAI,EAAE,SAAS;IAChD;IAEA,eAAe;QACb,OAAO,IAAI,aAAa,IAAI;IAC9B;IAEA,aAAa,OAAO,EAAE,SAAS,EAAE;QAC/B,OAAO,IAAI,aAAa,IAAI,EAAE,SAAS;IACzC;IAEA,iBAAiB;QACf,OAAO,IAAI,eAAe,IAAI,KAAK;IACrC;IAEA,gBAAgB;QACd,OAAO,IAAI,cAAc,IAAI,KAAK;IACpC;IAEA,IAAI,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE;QAChC,OAAO,IAAI,YAAY,IAAI,EAAE,UAAU,QAAQ;IACjD;IAEA,mBAAmB,KAAK,EAAE;QACxB,OAAO,UAAU,MAAM,CAAC,EAAE,EAAE,MAAM,OAAO,CAAC,MAAM,MAAM,EAAE,CAAC,GAAG;IAC9D;IAEA,0FAA0F;IAC1F,uBAAuB;QACrB,OAAO,IAAI,QAAQ,CAAC,SAAS;YAC3B,+BAA+B;YAC/B,IAAI,QAAQ,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW;YAEhE,IAAI,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE;gBACjC,IAAI,CAAC,MAAM,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,GAAG;oBACjD,MAAM,IAAI,MAAM,CAAC,iCAAiC,CAAC;gBACrD;gBACA,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;oBACrC,IAAI,CAAC,MAAM,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;wBACrD,MAAM,IAAI,MAAM,CAAC,KAAK,EAAE,MAAM,8BAA8B,CAAC;oBAC/D;oBACA,QAAQ,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM;gBACpC;YACF;YAEA,MAAM,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CACjC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAChC,OACA,CAAC;gBACC,IAAI,KAAK;oBACP,OAAO,OAAO;gBAChB;gBACA,QAAQ;YACV;QAEJ;IACF;IAEA,4EAA4E;IAC5E,kDAAkD;IAClD,MAAM,qBAAqB,UAAU,EAAE;QACrC,MAAM,QAAQ,UAAU,CAAC,KAAO,WAAW,KAAK,CAAC;QACjD,OAAO;IACT;IAEA,6EAA6E;IAC7E,6BAA6B;IAC7B,OAAO,UAAU,EAAE,GAAG,EAAE;QACtB,IAAI,CAAC,IAAI,GAAG,EAAE,MAAM,IAAI,MAAM;QAE9B,MAAM,EAAE,MAAM,EAAE,GAAG;QACnB,IAAI;QACJ,OAAQ;YACN,KAAK;YACL,KAAK;gBACH,aAAa,IAAI,SAAS,GAAG,QAAQ;gBACrC;YACF,KAAK;YACL,KAAK;gBACH,aAAa;gBACb;YACF;gBACE,aAAa;QACjB;QACA,OAAO,IAAI,QAAQ,SAAU,QAAQ,EAAE,QAAQ;YAC7C,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,WAAW,EAAE;gBAC1C,OAAO,SACL,IAAI,MAAM,CAAC,cAAc,EAAE,WAAW,eAAe,CAAC;YAE1D;YACA,UAAU,CAAC,WAAW,CAAC,IAAI,GAAG,EAAE,IAAI,QAAQ,EAAE,SAAU,GAAG,EAAE,QAAQ;gBACnE,IAAI,KAAK,OAAO,SAAS;gBACzB,IAAI,QAAQ,GAAG;gBAEf,2CAA2C;gBAC3C,sCAAsC;gBACtC,IAAI,OAAO,GAAG,IAAI;gBAElB,OAAO,SAAS;YAClB;QACF;IACF;IAEA,QAAQ,UAAU,EAAE,GAAG,EAAE,MAAM,EAAE;QAC/B,IAAI,CAAC,IAAI,GAAG,EAAE,MAAM,IAAI,MAAM;QAE9B,MAAM,SAAS,IAAI;QACnB,OAAO,IAAI,QAAQ,SAAU,QAAQ,EAAE,QAAQ;YAC7C,OAAO,EAAE,CAAC,SAAS;YACnB,OAAO,EAAE,CAAC,OAAO;YAEjB,OAAO,OACJ,MAAM,CAAC,YAAY,KACnB,IAAI,CAAC,CAAC,MAAQ,IAAI,QAAQ,EAC1B,IAAI,CAAC,CAAC,OAAS,KAAK,OAAO,CAAC,CAAC,MAAQ,OAAO,KAAK,CAAC,OAClD,KAAK,CAAC,SAAU,GAAG;gBAClB,OAAO,IAAI,CAAC,SAAS;YACvB,GACC,IAAI,CAAC;gBACJ,OAAO,GAAG;YACZ;QACJ;IACF;IAEA,wEAAwE;IACxE,gBAAgB,GAAG,EAAE,MAAM,EAAE;QAC3B,MAAM,MAAM,IAAI,OAAO;QACvB,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG;QAChC,IAAI,IAAI,MAAM,EAAE,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ;QAC/C,OAAQ,IAAI,MAAM;YAChB,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO,QAAQ,CAAC,EAAE;YACpB,KAAK;gBACH,OAAO,IAAI,UAAU,IAAI,KAAK;YAChC,KAAK;gBAAU;oBACb,IAAI,WAAW;wBACb,IAAI,UAAU;4BACZ,OAAO;wBACT;oBACF;oBACA,OAAO;wBAAC,IAAI,MAAM;qBAAC;gBACrB;YACA,KAAK;gBAAU;oBACb,IAAI,WAAW;wBACb,IAAI,UAAU;4BACZ,OAAO;wBACT;oBACF;oBACA,OAAO,IAAI,OAAO;gBACpB;YACA,KAAK;YACL,KAAK;gBACH,OAAO,IAAI,OAAO;YACpB;gBAAS;oBACP,OAAO;gBACT;QACF;IACF;IAEA,eAAe;QACb,OAAO,SAAS;YAAE,KAAK;YAAG,KAAK;QAAE,GAAG,KAAK,CAAC;IAC5C;IAEA,UAAU,OAAO,EAAE;QACjB,OAAO,IAAI,UAAU,IAAI,EAAE;IAC7B;IAEA,OAAO,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE;QACjC,IAAI,MAAM,OAAO,CAAC,SAAS;YACzB,IAAI,MAAM,OAAO,CAAC,MAAM,CAAC,EAAE,GAAG;gBAC5B,OAAO,CAAC,SAAS,EAAE,OAChB,GAAG,CACF,CAAC,QACC,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,OAAO,WAAW,SAAS,WAAW,CAAC,CAAC,EAEjE,IAAI,CAAC,MAAM,CAAC,CAAC;YAClB;YACA,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,WAAW,SAAS,WAAW,CAAC,CAAC;QACxE;QAEA,IAAI,kBAAkB,KAAK;YACzB,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,SAAS,WAAW,CAAC,CAAC;QAC1D;QAEA,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,SAAS;IACzC;AACF;AAEA,OAAO,MAAM,CAAC,eAAe,SAAS,EAAE;IACtC,SAAS;IAET,YAAY;AACd;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10712, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/better-sqlite3/index.js"],"sourcesContent":["// better-sqlite3 Client\n// -------\nconst Client_SQLite3 = require('../sqlite3');\n\nclass Client_BetterSQLite3 extends Client_SQLite3 {\n  _driver() {\n    return require('better-sqlite3');\n  }\n\n  // Get a raw connection from the database, returning a promise with the connection object.\n  async acquireRawConnection() {\n    const options = this.connectionSettings.options || {};\n\n    return new this.driver(this.connectionSettings.filename, {\n      nativeBinding: options.nativeBinding,\n      readonly: !!options.readonly,\n    });\n  }\n\n  // Used to explicitly close a connection, called internally by the pool when\n  // a connection times out or the pool is shutdown.\n  async destroyRawConnection(connection) {\n    return connection.close();\n  }\n\n  // Runs the query on the specified connection, providing the bindings and any\n  // other necessary prep work.\n  async _query(connection, obj) {\n    if (!obj.sql) throw new Error('The query is empty');\n\n    if (!connection) {\n      throw new Error('No connection provided');\n    }\n\n    const statement = connection.prepare(obj.sql);\n    const bindings = this._formatBindings(obj.bindings);\n\n    if (statement.reader) {\n      const response = await statement.all(bindings);\n      obj.response = response;\n      return obj;\n    }\n\n    const response = await statement.run(bindings);\n    obj.response = response;\n    obj.context = {\n      lastID: response.lastInsertRowid,\n      changes: response.changes,\n    };\n\n    return obj;\n  }\n\n  _formatBindings(bindings) {\n    if (!bindings) {\n      return [];\n    }\n    return bindings.map((binding) => {\n      if (binding instanceof Date) {\n        return binding.valueOf();\n      }\n\n      if (typeof binding === 'boolean') {\n        return Number(binding);\n      }\n\n      return binding;\n    });\n  }\n}\n\nObject.assign(Client_BetterSQLite3.prototype, {\n  // The \"dialect\", for reference .\n  driverName: 'better-sqlite3',\n});\n\nmodule.exports = Client_BetterSQLite3;\n"],"names":[],"mappings":"AAAA,wBAAwB;AACxB,UAAU;AACV,MAAM;AAEN,MAAM,6BAA6B;IACjC,UAAU;QACR;IACF;IAEA,0FAA0F;IAC1F,MAAM,uBAAuB;QAC3B,MAAM,UAAU,IAAI,CAAC,kBAAkB,CAAC,OAAO,IAAI,CAAC;QAEpD,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE;YACvD,eAAe,QAAQ,aAAa;YACpC,UAAU,CAAC,CAAC,QAAQ,QAAQ;QAC9B;IACF;IAEA,4EAA4E;IAC5E,kDAAkD;IAClD,MAAM,qBAAqB,UAAU,EAAE;QACrC,OAAO,WAAW,KAAK;IACzB;IAEA,6EAA6E;IAC7E,6BAA6B;IAC7B,MAAM,OAAO,UAAU,EAAE,GAAG,EAAE;QAC5B,IAAI,CAAC,IAAI,GAAG,EAAE,MAAM,IAAI,MAAM;QAE9B,IAAI,CAAC,YAAY;YACf,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,YAAY,WAAW,OAAO,CAAC,IAAI,GAAG;QAC5C,MAAM,WAAW,IAAI,CAAC,eAAe,CAAC,IAAI,QAAQ;QAElD,IAAI,UAAU,MAAM,EAAE;YACpB,MAAM,WAAW,MAAM,UAAU,GAAG,CAAC;YACrC,IAAI,QAAQ,GAAG;YACf,OAAO;QACT;QAEA,MAAM,WAAW,MAAM,UAAU,GAAG,CAAC;QACrC,IAAI,QAAQ,GAAG;QACf,IAAI,OAAO,GAAG;YACZ,QAAQ,SAAS,eAAe;YAChC,SAAS,SAAS,OAAO;QAC3B;QAEA,OAAO;IACT;IAEA,gBAAgB,QAAQ,EAAE;QACxB,IAAI,CAAC,UAAU;YACb,OAAO,EAAE;QACX;QACA,OAAO,SAAS,GAAG,CAAC,CAAC;YACnB,IAAI,mBAAmB,MAAM;gBAC3B,OAAO,QAAQ,OAAO;YACxB;YAEA,IAAI,OAAO,YAAY,WAAW;gBAChC,OAAO,OAAO;YAChB;YAEA,OAAO;QACT;IACF;AACF;AAEA,OAAO,MAAM,CAAC,qBAAqB,SAAS,EAAE;IAC5C,iCAAiC;IACjC,YAAY;AACd;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10779, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/postgres/execution/pg-transaction.js"],"sourcesContent":["const Transaction = require('../../../execution/transaction');\n\nclass Transaction_PG extends Transaction {\n  begin(conn) {\n    const trxMode = [\n      this.isolationLevel ? `ISOLATION LEVEL ${this.isolationLevel}` : '',\n      this.readOnly ? 'READ ONLY' : '',\n    ]\n      .join(' ')\n      .trim();\n\n    if (trxMode.length === 0) {\n      return this.query(conn, 'BEGIN;');\n    }\n    return this.query(conn, `BEGIN TRANSACTION ${trxMode};`);\n  }\n}\n\nmodule.exports = Transaction_PG;\n"],"names":[],"mappings":"AAAA,MAAM;AAEN,MAAM,uBAAuB;IAC3B,MAAM,IAAI,EAAE;QACV,MAAM,UAAU;YACd,IAAI,CAAC,cAAc,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,cAAc,EAAE,GAAG;YACjE,IAAI,CAAC,QAAQ,GAAG,cAAc;SAC/B,CACE,IAAI,CAAC,KACL,IAAI;QAEP,IAAI,QAAQ,MAAM,KAAK,GAAG;YACxB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM;QAC1B;QACA,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAC;IACzD;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10798, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/postgres/query/pg-querycompiler.js"],"sourcesContent":["// PostgreSQL Query Builder & Compiler\n// ------\nconst identity = require('lodash/identity');\nconst reduce = require('lodash/reduce');\n\nconst QueryCompiler = require('../../../query/querycompiler');\nconst {\n  wrapString,\n  columnize: columnize_,\n  operator: operator_,\n  wrap: wrap_,\n} = require('../../../formatter/wrappingFormatter');\n\nclass QueryCompiler_PG extends QueryCompiler {\n  constructor(client, builder, formatter) {\n    super(client, builder, formatter);\n    this._defaultInsertValue = 'default';\n  }\n\n  // Compiles a truncate query.\n  truncate() {\n    return `truncate ${this.tableName} restart identity`;\n  }\n\n  // is used if the an array with multiple empty values supplied\n\n  // Compiles an `insert` query, allowing for multiple\n  // inserts using a single query statement.\n  insert() {\n    let sql = super.insert();\n    if (sql === '') return sql;\n\n    const { returning, onConflict, ignore, merge, insert } = this.single;\n    if (onConflict && ignore) sql += this._ignore(onConflict);\n    if (onConflict && merge) {\n      sql += this._merge(merge.updates, onConflict, insert);\n      const wheres = this.where();\n      if (wheres) sql += ` ${wheres}`;\n    }\n    if (returning) sql += this._returning(returning);\n\n    return {\n      sql,\n      returning,\n    };\n  }\n\n  // Compiles an `update` query, allowing for a return value.\n  update() {\n    const withSQL = this.with();\n    const updateData = this._prepUpdate(this.single.update);\n    const wheres = this.where();\n    const { returning, updateFrom } = this.single;\n    return {\n      sql:\n        withSQL +\n        `update ${this.single.only ? 'only ' : ''}${this.tableName} ` +\n        `set ${updateData.join(', ')}` +\n        this._updateFrom(updateFrom) +\n        (wheres ? ` ${wheres}` : '') +\n        this._returning(returning),\n      returning,\n    };\n  }\n\n  using() {\n    const usingTables = this.single.using;\n    if (!usingTables) return;\n    let sql = 'using ';\n    if (Array.isArray(usingTables)) {\n      sql += usingTables\n        .map((table) => {\n          return this.formatter.wrap(table);\n        })\n        .join(',');\n    } else {\n      sql += this.formatter.wrap(usingTables);\n    }\n    return sql;\n  }\n\n  // Compiles an `delete` query, allowing for a return value.\n  del() {\n    // Make sure tableName is processed by the formatter first.\n    const { tableName } = this;\n    const withSQL = this.with();\n    let wheres = this.where() || '';\n    let using = this.using() || '';\n    const joins = this.grouped.join;\n\n    const tableJoins = [];\n    if (Array.isArray(joins)) {\n      for (const join of joins) {\n        tableJoins.push(\n          wrap_(\n            this._joinTable(join),\n            undefined,\n            this.builder,\n            this.client,\n            this.bindingsHolder\n          )\n        );\n\n        const joinWheres = [];\n        for (const clause of join.clauses) {\n          joinWheres.push(\n            this.whereBasic({\n              column: clause.column,\n              operator: '=',\n              value: clause.value,\n              asColumn: true,\n            })\n          );\n        }\n        if (joinWheres.length > 0) {\n          wheres += (wheres ? ' and ' : 'where ') + joinWheres.join(' and ');\n        }\n      }\n      if (tableJoins.length > 0) {\n        using += (using ? ',' : 'using ') + tableJoins.join(',');\n      }\n    }\n\n    // With 'using' syntax, no tablename between DELETE and FROM.\n    const sql =\n      withSQL +\n      `delete from ${this.single.only ? 'only ' : ''}${tableName}` +\n      (using ? ` ${using}` : '') +\n      (wheres ? ` ${wheres}` : '');\n    const { returning } = this.single;\n    return {\n      sql: sql + this._returning(returning),\n      returning,\n    };\n  }\n\n  aggregate(stmt) {\n    return this._aggregate(stmt, { distinctParentheses: true });\n  }\n\n  _returning(value) {\n    return value ? ` returning ${this.formatter.columnize(value)}` : '';\n  }\n\n  _updateFrom(name) {\n    return name ? ` from ${this.formatter.wrap(name)}` : '';\n  }\n\n  _ignore(columns) {\n    if (columns === true) {\n      return ' on conflict do nothing';\n    }\n    return ` on conflict ${this._onConflictClause(columns)} do nothing`;\n  }\n\n  _merge(updates, columns, insert) {\n    let sql = ` on conflict ${this._onConflictClause(columns)} do update set `;\n    if (updates && Array.isArray(updates)) {\n      sql += updates\n        .map((column) =>\n          wrapString(\n            column.split('.').pop(),\n            this.formatter.builder,\n            this.client,\n            this.formatter\n          )\n        )\n        .map((column) => `${column} = excluded.${column}`)\n        .join(', ');\n\n      return sql;\n    } else if (updates && typeof updates === 'object') {\n      const updateData = this._prepUpdate(updates);\n      if (typeof updateData === 'string') {\n        sql += updateData;\n      } else {\n        sql += updateData.join(',');\n      }\n\n      return sql;\n    } else {\n      const insertData = this._prepInsert(insert);\n      if (typeof insertData === 'string') {\n        throw new Error(\n          'If using merge with a raw insert query, then updates must be provided'\n        );\n      }\n\n      sql += insertData.columns\n        .map((column) =>\n          wrapString(column.split('.').pop(), this.builder, this.client)\n        )\n        .map((column) => `${column} = excluded.${column}`)\n        .join(', ');\n\n      return sql;\n    }\n  }\n\n  // Join array of table names and apply default schema.\n  _tableNames(tables) {\n    const schemaName = this.single.schema;\n    const sql = [];\n\n    for (let i = 0; i < tables.length; i++) {\n      let tableName = tables[i];\n\n      if (tableName) {\n        if (schemaName) {\n          tableName = `${schemaName}.${tableName}`;\n        }\n        sql.push(this.formatter.wrap(tableName));\n      }\n    }\n\n    return sql.join(', ');\n  }\n\n  _lockingClause(lockMode) {\n    const tables = this.single.lockTables || [];\n\n    return lockMode + (tables.length ? ' of ' + this._tableNames(tables) : '');\n  }\n\n  _groupOrder(item, type) {\n    return super._groupOrderNulls(item, type);\n  }\n\n  forUpdate() {\n    return this._lockingClause('for update');\n  }\n\n  forShare() {\n    return this._lockingClause('for share');\n  }\n\n  forNoKeyUpdate() {\n    return this._lockingClause('for no key update');\n  }\n\n  forKeyShare() {\n    return this._lockingClause('for key share');\n  }\n\n  skipLocked() {\n    return 'skip locked';\n  }\n\n  noWait() {\n    return 'nowait';\n  }\n\n  // Compiles a columnInfo query\n  columnInfo() {\n    const column = this.single.columnInfo;\n    let schema = this.single.schema;\n\n    // The user may have specified a custom wrapIdentifier function in the config. We\n    // need to run the identifiers through that function, but not format them as\n    // identifiers otherwise.\n    const table = this.client.customWrapIdentifier(this.single.table, identity);\n\n    if (schema) {\n      schema = this.client.customWrapIdentifier(schema, identity);\n    }\n\n    const sql =\n      'select * from information_schema.columns where table_name = ? and table_catalog = current_database()';\n    const bindings = [table];\n\n    return this._buildColumnInfoQuery(schema, sql, bindings, column);\n  }\n\n  _buildColumnInfoQuery(schema, sql, bindings, column) {\n    if (schema) {\n      sql += ' and table_schema = ?';\n      bindings.push(schema);\n    } else {\n      sql += ' and table_schema = current_schema()';\n    }\n\n    return {\n      sql,\n      bindings,\n      output(resp) {\n        const out = reduce(\n          resp.rows,\n          function (columns, val) {\n            columns[val.column_name] = {\n              type: val.data_type,\n              maxLength: val.character_maximum_length,\n              nullable: val.is_nullable === 'YES',\n              defaultValue: val.column_default,\n            };\n            return columns;\n          },\n          {}\n        );\n        return (column && out[column]) || out;\n      },\n    };\n  }\n\n  distinctOn(value) {\n    return 'distinct on (' + this.formatter.columnize(value) + ') ';\n  }\n\n  // Json functions\n  jsonExtract(params) {\n    return this._jsonExtract('jsonb_path_query', params);\n  }\n\n  jsonSet(params) {\n    return this._jsonSet(\n      'jsonb_set',\n      Object.assign({}, params, {\n        path: this.client.toPathForJson(params.path),\n      })\n    );\n  }\n\n  jsonInsert(params) {\n    return this._jsonSet(\n      'jsonb_insert',\n      Object.assign({}, params, {\n        path: this.client.toPathForJson(params.path),\n      })\n    );\n  }\n\n  jsonRemove(params) {\n    const jsonCol = `${columnize_(\n      params.column,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    )} #- ${this.client.parameter(\n      this.client.toPathForJson(params.path),\n      this.builder,\n      this.bindingsHolder\n    )}`;\n    return params.alias\n      ? this.client.alias(jsonCol, this.formatter.wrap(params.alias))\n      : jsonCol;\n  }\n\n  whereJsonPath(statement) {\n    let castValue = '';\n    if (!isNaN(statement.value) && parseInt(statement.value)) {\n      castValue = '::int';\n    } else if (!isNaN(statement.value) && parseFloat(statement.value)) {\n      castValue = '::float';\n    } else {\n      castValue = \" #>> '{}'\";\n    }\n    return `jsonb_path_query_first(${this._columnClause(\n      statement\n    )}, ${this.client.parameter(\n      statement.jsonPath,\n      this.builder,\n      this.bindingsHolder\n    )})${castValue} ${operator_(\n      statement.operator,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    )} ${this._jsonValueClause(statement)}`;\n  }\n\n  whereJsonSupersetOf(statement) {\n    return this._not(\n      statement,\n      `${wrap_(\n        statement.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      )} @> ${this._jsonValueClause(statement)}`\n    );\n  }\n\n  whereJsonSubsetOf(statement) {\n    return this._not(\n      statement,\n      `${columnize_(\n        statement.column,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      )} <@ ${this._jsonValueClause(statement)}`\n    );\n  }\n\n  onJsonPathEquals(clause) {\n    return this._onJsonPathEquals('jsonb_path_query_first', clause);\n  }\n}\n\nmodule.exports = QueryCompiler_PG;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11061, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/postgres/query/pg-querybuilder.js"],"sourcesContent":["const QueryBuilder = require('../../../query/querybuilder.js');\n\nmodule.exports = class QueryBuilder_PostgreSQL extends QueryBuilder {\n  updateFrom(name) {\n    this._single.updateFrom = name;\n    return this;\n  }\n\n  using(tables) {\n    this._single.using = tables;\n    return this;\n  }\n\n  withMaterialized(alias, statementOrColumnList, nothingOrStatement) {\n    this._validateWithArgs(\n      alias,\n      statementOrColumnList,\n      nothingOrStatement,\n      'with'\n    );\n    return this.withWrapped(\n      alias,\n      statementOrColumnList,\n      nothingOrStatement,\n      true\n    );\n  }\n\n  withNotMaterialized(alias, statementOrColumnList, nothingOrStatement) {\n    this._validateWithArgs(\n      alias,\n      statementOrColumnList,\n      nothingOrStatement,\n      'with'\n    );\n    return this.withWrapped(\n      alias,\n      statementOrColumnList,\n      nothingOrStatement,\n      false\n    );\n  }\n};\n"],"names":[],"mappings":"AAAA,MAAM;AAEN,OAAO,OAAO,GAAG,MAAM,gCAAgC;IACrD,WAAW,IAAI,EAAE;QACf,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG;QAC1B,OAAO,IAAI;IACb;IAEA,MAAM,MAAM,EAAE;QACZ,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG;QACrB,OAAO,IAAI;IACb;IAEA,iBAAiB,KAAK,EAAE,qBAAqB,EAAE,kBAAkB,EAAE;QACjE,IAAI,CAAC,iBAAiB,CACpB,OACA,uBACA,oBACA;QAEF,OAAO,IAAI,CAAC,WAAW,CACrB,OACA,uBACA,oBACA;IAEJ;IAEA,oBAAoB,KAAK,EAAE,qBAAqB,EAAE,kBAAkB,EAAE;QACpE,IAAI,CAAC,iBAAiB,CACpB,OACA,uBACA,oBACA;QAEF,OAAO,IAAI,CAAC,WAAW,CACrB,OACA,uBACA,oBACA;IAEJ;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11085, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/postgres/schema/pg-columncompiler.js"],"sourcesContent":["// PostgreSQL Column Compiler\n// -------\n\nconst ColumnCompiler = require('../../../schema/columncompiler');\nconst { isObject } = require('../../../util/is');\nconst { toNumber } = require('../../../util/helpers');\nconst commentEscapeRegex = /(?<!')'(?!')/g;\n\nclass ColumnCompiler_PG extends ColumnCompiler {\n  constructor(client, tableCompiler, columnBuilder) {\n    super(client, tableCompiler, columnBuilder);\n    this.modifiers = ['nullable', 'defaultTo', 'comment'];\n    this._addCheckModifiers();\n  }\n\n  // Types\n  // ------\n\n  bit(column) {\n    return column.length !== false ? `bit(${column.length})` : 'bit';\n  }\n\n  // Create the column definition for an enum type.\n  // Using method \"2\" here: http://stackoverflow.com/a/10984951/525714\n  enu(allowed, options) {\n    options = options || {};\n\n    const values =\n      options.useNative && options.existingType\n        ? undefined\n        : allowed.join(\"', '\");\n\n    if (options.useNative) {\n      let enumName = '';\n      const schemaName = options.schemaName || this.tableCompiler.schemaNameRaw;\n\n      if (schemaName) {\n        enumName += `\"${schemaName}\".`;\n      }\n\n      enumName += `\"${options.enumName}\"`;\n\n      if (!options.existingType) {\n        this.tableCompiler.unshiftQuery(\n          `create type ${enumName} as enum ('${values}')`\n        );\n      }\n\n      return enumName;\n    }\n    return `text check (${this.formatter.wrap(this.args[0])} in ('${values}'))`;\n  }\n\n  decimal(precision, scale) {\n    if (precision === null) return 'decimal';\n    return `decimal(${toNumber(precision, 8)}, ${toNumber(scale, 2)})`;\n  }\n\n  json(jsonb) {\n    if (jsonb) this.client.logger.deprecate('json(true)', 'jsonb()');\n    return jsonColumn(this.client, jsonb);\n  }\n\n  jsonb() {\n    return jsonColumn(this.client, true);\n  }\n\n  checkRegex(regex, constraintName) {\n    return this._check(\n      `${this.formatter.wrap(\n        this.getColumnName()\n      )} ~ ${this.client._escapeBinding(regex)}`,\n      constraintName\n    );\n  }\n\n  datetime(withoutTz = false, precision) {\n    let useTz;\n    if (isObject(withoutTz)) {\n      ({ useTz, precision } = withoutTz);\n    } else {\n      useTz = !withoutTz;\n    }\n    useTz = typeof useTz === 'boolean' ? useTz : true;\n    precision =\n      precision !== undefined && precision !== null\n        ? '(' + precision + ')'\n        : '';\n\n    return `${useTz ? 'timestamptz' : 'timestamp'}${precision}`;\n  }\n\n  timestamp(withoutTz = false, precision) {\n    return this.datetime(withoutTz, precision);\n  }\n\n  // Modifiers:\n  // ------\n  comment(comment) {\n    const columnName = this.args[0] || this.defaults('columnName');\n    const escapedComment = comment\n      ? `'${comment.replace(commentEscapeRegex, \"''\")}'`\n      : 'NULL';\n\n    this.pushAdditional(function () {\n      this.pushQuery(\n        `comment on column ${this.tableCompiler.tableName()}.` +\n          this.formatter.wrap(columnName) +\n          ` is ${escapedComment}`\n      );\n    }, comment);\n  }\n\n  increments(options = { primaryKey: true }) {\n    return (\n      'serial' +\n      (this.tableCompiler._canBeAddPrimaryKey(options) ? ' primary key' : '')\n    );\n  }\n\n  bigincrements(options = { primaryKey: true }) {\n    return (\n      'bigserial' +\n      (this.tableCompiler._canBeAddPrimaryKey(options) ? ' primary key' : '')\n    );\n  }\n\n  uuid(options = { primaryKey: false }) {\n    return (\n      'uuid' +\n      (this.tableCompiler._canBeAddPrimaryKey(options) ? ' primary key' : '')\n    );\n  }\n}\n\nColumnCompiler_PG.prototype.bigint = 'bigint';\nColumnCompiler_PG.prototype.binary = 'bytea';\nColumnCompiler_PG.prototype.bool = 'boolean';\nColumnCompiler_PG.prototype.double = 'double precision';\nColumnCompiler_PG.prototype.floating = 'real';\nColumnCompiler_PG.prototype.smallint = 'smallint';\nColumnCompiler_PG.prototype.tinyint = 'smallint';\n\nfunction jsonColumn(client, jsonb) {\n  if (\n    !client.version ||\n    client.config.client === 'cockroachdb' ||\n    client.config.jsonbSupport === true ||\n    parseFloat(client.version) >= 9.2\n  ) {\n    return jsonb ? 'jsonb' : 'json';\n  }\n  return 'text';\n}\n\nmodule.exports = ColumnCompiler_PG;\n"],"names":[],"mappings":"AAAA,6BAA6B;AAC7B,UAAU;AAEV,MAAM;AACN,MAAM,EAAE,QAAQ,EAAE;AAClB,MAAM,EAAE,QAAQ,EAAE;AAClB,MAAM,qBAAqB;AAE3B,MAAM,0BAA0B;IAC9B,YAAY,MAAM,EAAE,aAAa,EAAE,aAAa,CAAE;QAChD,KAAK,CAAC,QAAQ,eAAe;QAC7B,IAAI,CAAC,SAAS,GAAG;YAAC;YAAY;YAAa;SAAU;QACrD,IAAI,CAAC,kBAAkB;IACzB;IAEA,QAAQ;IACR,SAAS;IAET,IAAI,MAAM,EAAE;QACV,OAAO,OAAO,MAAM,KAAK,QAAQ,CAAC,IAAI,EAAE,OAAO,MAAM,CAAC,CAAC,CAAC,GAAG;IAC7D;IAEA,iDAAiD;IACjD,oEAAoE;IACpE,IAAI,OAAO,EAAE,OAAO,EAAE;QACpB,UAAU,WAAW,CAAC;QAEtB,MAAM,SACJ,QAAQ,SAAS,IAAI,QAAQ,YAAY,GACrC,YACA,QAAQ,IAAI,CAAC;QAEnB,IAAI,QAAQ,SAAS,EAAE;YACrB,IAAI,WAAW;YACf,MAAM,aAAa,QAAQ,UAAU,IAAI,IAAI,CAAC,aAAa,CAAC,aAAa;YAEzE,IAAI,YAAY;gBACd,YAAY,CAAC,CAAC,EAAE,WAAW,EAAE,CAAC;YAChC;YAEA,YAAY,CAAC,CAAC,EAAE,QAAQ,QAAQ,CAAC,CAAC,CAAC;YAEnC,IAAI,CAAC,QAAQ,YAAY,EAAE;gBACzB,IAAI,CAAC,aAAa,CAAC,YAAY,CAC7B,CAAC,YAAY,EAAE,SAAS,WAAW,EAAE,OAAO,EAAE,CAAC;YAEnD;YAEA,OAAO;QACT;QACA,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,EAAE,OAAO,GAAG,CAAC;IAC7E;IAEA,QAAQ,SAAS,EAAE,KAAK,EAAE;QACxB,IAAI,cAAc,MAAM,OAAO;QAC/B,OAAO,CAAC,QAAQ,EAAE,SAAS,WAAW,GAAG,EAAE,EAAE,SAAS,OAAO,GAAG,CAAC,CAAC;IACpE;IAEA,KAAK,KAAK,EAAE;QACV,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc;QACtD,OAAO,WAAW,IAAI,CAAC,MAAM,EAAE;IACjC;IAEA,QAAQ;QACN,OAAO,WAAW,IAAI,CAAC,MAAM,EAAE;IACjC;IAEA,WAAW,KAAK,EAAE,cAAc,EAAE;QAChC,OAAO,IAAI,CAAC,MAAM,CAChB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CACpB,IAAI,CAAC,aAAa,IAClB,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,EAC1C;IAEJ;IAEA,SAAS,YAAY,KAAK,EAAE,SAAS,EAAE;QACrC,IAAI;QACJ,IAAI,SAAS,YAAY;YACvB,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,SAAS;QACnC,OAAO;YACL,QAAQ,CAAC;QACX;QACA,QAAQ,OAAO,UAAU,YAAY,QAAQ;QAC7C,YACE,cAAc,aAAa,cAAc,OACrC,MAAM,YAAY,MAClB;QAEN,OAAO,GAAG,QAAQ,gBAAgB,cAAc,WAAW;IAC7D;IAEA,UAAU,YAAY,KAAK,EAAE,SAAS,EAAE;QACtC,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW;IAClC;IAEA,aAAa;IACb,SAAS;IACT,QAAQ,OAAO,EAAE;QACf,MAAM,aAAa,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC;QACjD,MAAM,iBAAiB,UACnB,CAAC,CAAC,EAAE,QAAQ,OAAO,CAAC,oBAAoB,MAAM,CAAC,CAAC,GAChD;QAEJ,IAAI,CAAC,cAAc,CAAC;YAClB,IAAI,CAAC,SAAS,CACZ,CAAC,kBAAkB,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,CAAC,CAAC,GACpD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cACpB,CAAC,IAAI,EAAE,gBAAgB;QAE7B,GAAG;IACL;IAEA,WAAW,UAAU;QAAE,YAAY;IAAK,CAAC,EAAE;QACzC,OACE,WACA,CAAC,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,WAAW,iBAAiB,EAAE;IAE1E;IAEA,cAAc,UAAU;QAAE,YAAY;IAAK,CAAC,EAAE;QAC5C,OACE,cACA,CAAC,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,WAAW,iBAAiB,EAAE;IAE1E;IAEA,KAAK,UAAU;QAAE,YAAY;IAAM,CAAC,EAAE;QACpC,OACE,SACA,CAAC,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,WAAW,iBAAiB,EAAE;IAE1E;AACF;AAEA,kBAAkB,SAAS,CAAC,MAAM,GAAG;AACrC,kBAAkB,SAAS,CAAC,MAAM,GAAG;AACrC,kBAAkB,SAAS,CAAC,IAAI,GAAG;AACnC,kBAAkB,SAAS,CAAC,MAAM,GAAG;AACrC,kBAAkB,SAAS,CAAC,QAAQ,GAAG;AACvC,kBAAkB,SAAS,CAAC,QAAQ,GAAG;AACvC,kBAAkB,SAAS,CAAC,OAAO,GAAG;AAEtC,SAAS,WAAW,MAAM,EAAE,KAAK;IAC/B,IACE,CAAC,OAAO,OAAO,IACf,OAAO,MAAM,CAAC,MAAM,KAAK,iBACzB,OAAO,MAAM,CAAC,YAAY,KAAK,QAC/B,WAAW,OAAO,OAAO,KAAK,KAC9B;QACA,OAAO,QAAQ,UAAU;IAC3B;IACA,OAAO;AACT;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11197, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/postgres/schema/pg-tablecompiler.js"],"sourcesContent":["/* eslint max-len: 0 */\n\n// PostgreSQL Table Builder & Compiler\n// -------\n\nconst has = require('lodash/has');\nconst TableCompiler = require('../../../schema/tablecompiler');\nconst { isObject, isString } = require('../../../util/is');\n\nclass TableCompiler_PG extends TableCompiler {\n  constructor(client, tableBuilder) {\n    super(client, tableBuilder);\n  }\n\n  // Compile a rename column command.\n  renameColumn(from, to) {\n    return this.pushQuery({\n      sql: `alter table ${this.tableName()} rename ${this.formatter.wrap(\n        from\n      )} to ${this.formatter.wrap(to)}`,\n    });\n  }\n\n  _setNullableState(column, isNullable) {\n    const constraintAction = isNullable ? 'drop not null' : 'set not null';\n    const sql = `alter table ${this.tableName()} alter column ${this.formatter.wrap(\n      column\n    )} ${constraintAction}`;\n    return this.pushQuery({\n      sql: sql,\n    });\n  }\n\n  compileAdd(builder) {\n    const table = this.formatter.wrap(builder);\n    const columns = this.prefixArray('add column', this.getColumns(builder));\n    return this.pushQuery({\n      sql: `alter table ${table} ${columns.join(', ')}`,\n    });\n  }\n\n  // Adds the \"create\" query to the query sequence.\n  createQuery(columns, ifNot, like) {\n    const createStatement = ifNot\n      ? 'create table if not exists '\n      : 'create table ';\n    const columnsSql = ` (${columns.sql.join(', ')}${\n      this.primaryKeys() || ''\n    }${this._addChecks()})`;\n\n    let sql =\n      createStatement +\n      this.tableName() +\n      (like && this.tableNameLike()\n        ? ' (like ' +\n          this.tableNameLike() +\n          ' including all' +\n          (columns.sql.length ? ', ' + columns.sql.join(', ') : '') +\n          ')'\n        : columnsSql);\n    if (this.single.inherits)\n      sql += ` inherits (${this.formatter.wrap(this.single.inherits)})`;\n    this.pushQuery({\n      sql,\n      bindings: columns.bindings,\n    });\n    const hasComment = has(this.single, 'comment');\n    if (hasComment) this.comment(this.single.comment);\n  }\n\n  primaryKeys() {\n    const pks = (this.grouped.alterTable || []).filter(\n      (k) => k.method === 'primary'\n    );\n    if (pks.length > 0 && pks[0].args.length > 0) {\n      const columns = pks[0].args[0];\n      let constraintName = pks[0].args[1] || '';\n      let deferrable;\n      if (isObject(constraintName)) {\n        ({ constraintName, deferrable } = constraintName);\n      }\n      deferrable = deferrable ? ` deferrable initially ${deferrable}` : '';\n      constraintName = constraintName\n        ? this.formatter.wrap(constraintName)\n        : this.formatter.wrap(`${this.tableNameRaw}_pkey`);\n\n      return `, constraint ${constraintName} primary key (${this.formatter.columnize(\n        columns\n      )})${deferrable}`;\n    }\n  }\n\n  addColumns(columns, prefix, colCompilers) {\n    if (prefix === this.alterColumnsPrefix) {\n      // alter columns\n      for (const col of colCompilers) {\n        this._addColumn(col);\n      }\n    } else {\n      // base class implementation for normal add\n      super.addColumns(columns, prefix);\n    }\n  }\n\n  _addColumn(col) {\n    const quotedTableName = this.tableName();\n    const type = col.getColumnType();\n    // We'd prefer to call this.formatter.wrapAsIdentifier here instead, however the context passed to\n    // `this` instance is not that of the column, but of the table. Thus, we unfortunately have to call\n    // `wrapIdentifier` here as well (it is already called once on the initial column operation) to give\n    // our `alter` operation the correct `queryContext`. Refer to issue #2606 and PR #2612.\n    const colName = this.client.wrapIdentifier(\n      col.getColumnName(),\n      col.columnBuilder.queryContext()\n    );\n\n    // To alter enum columns they must be cast to text first\n    const isEnum = col.type === 'enu';\n    this.pushQuery({\n      sql: `alter table ${quotedTableName} alter column ${colName} drop default`,\n      bindings: [],\n    });\n\n    const alterNullable = col.columnBuilder.alterNullable;\n    if (alterNullable) {\n      this.pushQuery({\n        sql: `alter table ${quotedTableName} alter column ${colName} drop not null`,\n        bindings: [],\n      });\n    }\n\n    const alterType = col.columnBuilder.alterType;\n    if (alterType) {\n      this.pushQuery({\n        sql: `alter table ${quotedTableName} alter column ${colName} type ${type} using (${colName}${\n          isEnum ? '::text::' : '::'\n        }${type})`,\n        bindings: [],\n      });\n    }\n\n    const defaultTo = col.modified['defaultTo'];\n    if (defaultTo) {\n      const modifier = col.defaultTo.apply(col, defaultTo);\n      this.pushQuery({\n        sql: `alter table ${quotedTableName} alter column ${colName} set ${modifier}`,\n        bindings: [],\n      });\n    }\n\n    if (alterNullable) {\n      const nullable = col.modified['nullable'];\n      if (nullable && nullable[0] === false) {\n        this.pushQuery({\n          sql: `alter table ${quotedTableName} alter column ${colName} set not null`,\n          bindings: [],\n        });\n      }\n    }\n  }\n\n  // Compiles the comment on the table.\n  comment(comment) {\n    this.pushQuery(\n      `comment on table ${this.tableName()} is '${this.single.comment}'`\n    );\n  }\n\n  // Indexes:\n  // -------\n\n  primary(columns, constraintName) {\n    let deferrable;\n    if (isObject(constraintName)) {\n      ({ constraintName, deferrable } = constraintName);\n    }\n    deferrable = deferrable ? ` deferrable initially ${deferrable}` : '';\n    constraintName = constraintName\n      ? this.formatter.wrap(constraintName)\n      : this.formatter.wrap(`${this.tableNameRaw}_pkey`);\n    if (this.method !== 'create' && this.method !== 'createIfNot') {\n      this.pushQuery(\n        `alter table ${this.tableName()} add constraint ${constraintName} primary key (${this.formatter.columnize(\n          columns\n        )})${deferrable}`\n      );\n    }\n  }\n\n  unique(columns, indexName) {\n    let deferrable;\n    let useConstraint = true;\n    let predicate;\n    if (isObject(indexName)) {\n      ({ indexName, deferrable, useConstraint, predicate } = indexName);\n      if (useConstraint === undefined) {\n        useConstraint = !!deferrable || !predicate;\n      }\n    }\n    if (!useConstraint && deferrable && deferrable !== 'not deferrable') {\n      throw new Error('postgres cannot create deferrable index');\n    }\n    if (useConstraint && predicate) {\n      throw new Error('postgres cannot create constraint with predicate');\n    }\n    deferrable = deferrable ? ` deferrable initially ${deferrable}` : '';\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('unique', this.tableNameRaw, columns);\n\n    if (useConstraint) {\n      this.pushQuery(\n        `alter table ${this.tableName()} add constraint ${indexName}` +\n          ' unique (' +\n          this.formatter.columnize(columns) +\n          ')' +\n          deferrable\n      );\n    } else {\n      const predicateQuery = predicate\n        ? ' ' + this.client.queryCompiler(predicate).where()\n        : '';\n\n      this.pushQuery(\n        `create unique index ${indexName} on ${this.tableName()} (${this.formatter.columnize(\n          columns\n        )})${predicateQuery}`\n      );\n    }\n  }\n\n  index(columns, indexName, options) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('index', this.tableNameRaw, columns);\n\n    let predicate;\n    let storageEngineIndexType;\n    let indexType;\n\n    if (isString(options)) {\n      storageEngineIndexType = options;\n    } else if (isObject(options)) {\n      ({ indexType, storageEngineIndexType, predicate } = options);\n    }\n\n    const predicateQuery = predicate\n      ? ' ' + this.client.queryCompiler(predicate).where()\n      : '';\n\n    this.pushQuery(\n      `create${\n        typeof indexType === 'string' && indexType.toLowerCase() === 'unique'\n          ? ' unique'\n          : ''\n      } index ${indexName} on ${this.tableName()}${\n        (storageEngineIndexType && ` using ${storageEngineIndexType}`) || ''\n      }` +\n        ' (' +\n        this.formatter.columnize(columns) +\n        ')' +\n        `${predicateQuery}`\n    );\n  }\n\n  dropPrimary(constraintName) {\n    constraintName = constraintName\n      ? this.formatter.wrap(constraintName)\n      : this.formatter.wrap(this.tableNameRaw + '_pkey');\n    this.pushQuery(\n      `alter table ${this.tableName()} drop constraint ${constraintName}`\n    );\n  }\n\n  dropIndex(columns, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('index', this.tableNameRaw, columns);\n    indexName = this.schemaNameRaw\n      ? `${this.formatter.wrap(this.schemaNameRaw)}.${indexName}`\n      : indexName;\n    this.pushQuery(`drop index ${indexName}`);\n  }\n\n  dropUnique(columns, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('unique', this.tableNameRaw, columns);\n    this.pushQuery(\n      `alter table ${this.tableName()} drop constraint ${indexName}`\n    );\n  }\n\n  dropForeign(columns, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('foreign', this.tableNameRaw, columns);\n    this.pushQuery(\n      `alter table ${this.tableName()} drop constraint ${indexName}`\n    );\n  }\n}\n\nmodule.exports = TableCompiler_PG;\n"],"names":[],"mappings":"AAAA,qBAAqB,GAErB,sCAAsC;AACtC,UAAU;AAEV,MAAM;AACN,MAAM;AACN,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE;AAE5B,MAAM,yBAAyB;IAC7B,YAAY,MAAM,EAAE,YAAY,CAAE;QAChC,KAAK,CAAC,QAAQ;IAChB;IAEA,mCAAmC;IACnC,aAAa,IAAI,EAAE,EAAE,EAAE;QACrB,OAAO,IAAI,CAAC,SAAS,CAAC;YACpB,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,GAAG,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAChE,MACA,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK;QACnC;IACF;IAEA,kBAAkB,MAAM,EAAE,UAAU,EAAE;QACpC,MAAM,mBAAmB,aAAa,kBAAkB;QACxD,MAAM,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,GAAG,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAC7E,QACA,CAAC,EAAE,kBAAkB;QACvB,OAAO,IAAI,CAAC,SAAS,CAAC;YACpB,KAAK;QACP;IACF;IAEA,WAAW,OAAO,EAAE;QAClB,MAAM,QAAQ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;QAClC,MAAM,UAAU,IAAI,CAAC,WAAW,CAAC,cAAc,IAAI,CAAC,UAAU,CAAC;QAC/D,OAAO,IAAI,CAAC,SAAS,CAAC;YACpB,KAAK,CAAC,YAAY,EAAE,MAAM,CAAC,EAAE,QAAQ,IAAI,CAAC,OAAO;QACnD;IACF;IAEA,iDAAiD;IACjD,YAAY,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE;QAChC,MAAM,kBAAkB,QACpB,gCACA;QACJ,MAAM,aAAa,CAAC,EAAE,EAAE,QAAQ,GAAG,CAAC,IAAI,CAAC,QACvC,IAAI,CAAC,WAAW,MAAM,KACrB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QAEvB,IAAI,MACF,kBACA,IAAI,CAAC,SAAS,KACd,CAAC,QAAQ,IAAI,CAAC,aAAa,KACvB,YACA,IAAI,CAAC,aAAa,KAClB,mBACA,CAAC,QAAQ,GAAG,CAAC,MAAM,GAAG,OAAO,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,IACxD,MACA,UAAU;QAChB,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EACtB,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;QACnE,IAAI,CAAC,SAAS,CAAC;YACb;YACA,UAAU,QAAQ,QAAQ;QAC5B;QACA,MAAM,aAAa,IAAI,IAAI,CAAC,MAAM,EAAE;QACpC,IAAI,YAAY,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO;IAClD;IAEA,cAAc;QACZ,MAAM,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE,EAAE,MAAM,CAChD,CAAC,IAAM,EAAE,MAAM,KAAK;QAEtB,IAAI,IAAI,MAAM,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG;YAC5C,MAAM,UAAU,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;YAC9B,IAAI,iBAAiB,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,IAAI;YACvC,IAAI;YACJ,IAAI,SAAS,iBAAiB;gBAC5B,CAAC,EAAE,cAAc,EAAE,UAAU,EAAE,GAAG,cAAc;YAClD;YACA,aAAa,aAAa,CAAC,sBAAsB,EAAE,YAAY,GAAG;YAClE,iBAAiB,iBACb,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBACpB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAEnD,OAAO,CAAC,aAAa,EAAE,eAAe,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAC5E,SACA,CAAC,EAAE,YAAY;QACnB;IACF;IAEA,WAAW,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE;QACxC,IAAI,WAAW,IAAI,CAAC,kBAAkB,EAAE;YACtC,gBAAgB;YAChB,KAAK,MAAM,OAAO,aAAc;gBAC9B,IAAI,CAAC,UAAU,CAAC;YAClB;QACF,OAAO;YACL,2CAA2C;YAC3C,KAAK,CAAC,WAAW,SAAS;QAC5B;IACF;IAEA,WAAW,GAAG,EAAE;QACd,MAAM,kBAAkB,IAAI,CAAC,SAAS;QACtC,MAAM,OAAO,IAAI,aAAa;QAC9B,kGAAkG;QAClG,mGAAmG;QACnG,oGAAoG;QACpG,uFAAuF;QACvF,MAAM,UAAU,IAAI,CAAC,MAAM,CAAC,cAAc,CACxC,IAAI,aAAa,IACjB,IAAI,aAAa,CAAC,YAAY;QAGhC,wDAAwD;QACxD,MAAM,SAAS,IAAI,IAAI,KAAK;QAC5B,IAAI,CAAC,SAAS,CAAC;YACb,KAAK,CAAC,YAAY,EAAE,gBAAgB,cAAc,EAAE,QAAQ,aAAa,CAAC;YAC1E,UAAU,EAAE;QACd;QAEA,MAAM,gBAAgB,IAAI,aAAa,CAAC,aAAa;QACrD,IAAI,eAAe;YACjB,IAAI,CAAC,SAAS,CAAC;gBACb,KAAK,CAAC,YAAY,EAAE,gBAAgB,cAAc,EAAE,QAAQ,cAAc,CAAC;gBAC3E,UAAU,EAAE;YACd;QACF;QAEA,MAAM,YAAY,IAAI,aAAa,CAAC,SAAS;QAC7C,IAAI,WAAW;YACb,IAAI,CAAC,SAAS,CAAC;gBACb,KAAK,CAAC,YAAY,EAAE,gBAAgB,cAAc,EAAE,QAAQ,MAAM,EAAE,KAAK,QAAQ,EAAE,UACjF,SAAS,aAAa,OACrB,KAAK,CAAC,CAAC;gBACV,UAAU,EAAE;YACd;QACF;QAEA,MAAM,YAAY,IAAI,QAAQ,CAAC,YAAY;QAC3C,IAAI,WAAW;YACb,MAAM,WAAW,IAAI,SAAS,CAAC,KAAK,CAAC,KAAK;YAC1C,IAAI,CAAC,SAAS,CAAC;gBACb,KAAK,CAAC,YAAY,EAAE,gBAAgB,cAAc,EAAE,QAAQ,KAAK,EAAE,UAAU;gBAC7E,UAAU,EAAE;YACd;QACF;QAEA,IAAI,eAAe;YACjB,MAAM,WAAW,IAAI,QAAQ,CAAC,WAAW;YACzC,IAAI,YAAY,QAAQ,CAAC,EAAE,KAAK,OAAO;gBACrC,IAAI,CAAC,SAAS,CAAC;oBACb,KAAK,CAAC,YAAY,EAAE,gBAAgB,cAAc,EAAE,QAAQ,aAAa,CAAC;oBAC1E,UAAU,EAAE;gBACd;YACF;QACF;IACF;IAEA,qCAAqC;IACrC,QAAQ,OAAO,EAAE;QACf,IAAI,CAAC,SAAS,CACZ,CAAC,iBAAiB,EAAE,IAAI,CAAC,SAAS,GAAG,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;IAEtE;IAEA,WAAW;IACX,UAAU;IAEV,QAAQ,OAAO,EAAE,cAAc,EAAE;QAC/B,IAAI;QACJ,IAAI,SAAS,iBAAiB;YAC5B,CAAC,EAAE,cAAc,EAAE,UAAU,EAAE,GAAG,cAAc;QAClD;QACA,aAAa,aAAa,CAAC,sBAAsB,EAAE,YAAY,GAAG;QAClE,iBAAiB,iBACb,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBACpB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;QACnD,IAAI,IAAI,CAAC,MAAM,KAAK,YAAY,IAAI,CAAC,MAAM,KAAK,eAAe;YAC7D,IAAI,CAAC,SAAS,CACZ,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,GAAG,gBAAgB,EAAE,eAAe,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CACvG,SACA,CAAC,EAAE,YAAY;QAErB;IACF;IAEA,OAAO,OAAO,EAAE,SAAS,EAAE;QACzB,IAAI;QACJ,IAAI,gBAAgB;QACpB,IAAI;QACJ,IAAI,SAAS,YAAY;YACvB,CAAC,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa,EAAE,SAAS,EAAE,GAAG,SAAS;YAChE,IAAI,kBAAkB,WAAW;gBAC/B,gBAAgB,CAAC,CAAC,cAAc,CAAC;YACnC;QACF;QACA,IAAI,CAAC,iBAAiB,cAAc,eAAe,kBAAkB;YACnE,MAAM,IAAI,MAAM;QAClB;QACA,IAAI,iBAAiB,WAAW;YAC9B,MAAM,IAAI,MAAM;QAClB;QACA,aAAa,aAAa,CAAC,sBAAsB,EAAE,YAAY,GAAG;QAClE,YAAY,YACR,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aACpB,IAAI,CAAC,aAAa,CAAC,UAAU,IAAI,CAAC,YAAY,EAAE;QAEpD,IAAI,eAAe;YACjB,IAAI,CAAC,SAAS,CACZ,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,GAAG,gBAAgB,EAAE,WAAW,GAC3D,cACA,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,WACzB,MACA;QAEN,OAAO;YACL,MAAM,iBAAiB,YACnB,MAAM,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,KAAK,KAChD;YAEJ,IAAI,CAAC,SAAS,CACZ,CAAC,oBAAoB,EAAE,UAAU,IAAI,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAClF,SACA,CAAC,EAAE,gBAAgB;QAEzB;IACF;IAEA,MAAM,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE;QACjC,YAAY,YACR,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aACpB,IAAI,CAAC,aAAa,CAAC,SAAS,IAAI,CAAC,YAAY,EAAE;QAEnD,IAAI;QACJ,IAAI;QACJ,IAAI;QAEJ,IAAI,SAAS,UAAU;YACrB,yBAAyB;QAC3B,OAAO,IAAI,SAAS,UAAU;YAC5B,CAAC,EAAE,SAAS,EAAE,sBAAsB,EAAE,SAAS,EAAE,GAAG,OAAO;QAC7D;QAEA,MAAM,iBAAiB,YACnB,MAAM,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,KAAK,KAChD;QAEJ,IAAI,CAAC,SAAS,CACZ,CAAC,MAAM,EACL,OAAO,cAAc,YAAY,UAAU,WAAW,OAAO,WACzD,YACA,GACL,OAAO,EAAE,UAAU,IAAI,EAAE,IAAI,CAAC,SAAS,KACtC,AAAC,0BAA0B,CAAC,OAAO,EAAE,wBAAwB,IAAK,IAClE,GACA,OACA,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,WACzB,MACA,GAAG,gBAAgB;IAEzB;IAEA,YAAY,cAAc,EAAE;QAC1B,iBAAiB,iBACb,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBACpB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG;QAC5C,IAAI,CAAC,SAAS,CACZ,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,GAAG,iBAAiB,EAAE,gBAAgB;IAEvE;IAEA,UAAU,OAAO,EAAE,SAAS,EAAE;QAC5B,YAAY,YACR,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aACpB,IAAI,CAAC,aAAa,CAAC,SAAS,IAAI,CAAC,YAAY,EAAE;QACnD,YAAY,IAAI,CAAC,aAAa,GAC1B,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,EAAE,WAAW,GACzD;QACJ,IAAI,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,WAAW;IAC1C;IAEA,WAAW,OAAO,EAAE,SAAS,EAAE;QAC7B,YAAY,YACR,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aACpB,IAAI,CAAC,aAAa,CAAC,UAAU,IAAI,CAAC,YAAY,EAAE;QACpD,IAAI,CAAC,SAAS,CACZ,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,GAAG,iBAAiB,EAAE,WAAW;IAElE;IAEA,YAAY,OAAO,EAAE,SAAS,EAAE;QAC9B,YAAY,YACR,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aACpB,IAAI,CAAC,aAAa,CAAC,WAAW,IAAI,CAAC,YAAY,EAAE;QACrD,IAAI,CAAC,SAAS,CACZ,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,GAAG,iBAAiB,EAAE,WAAW;IAElE;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11389, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/postgres/schema/pg-viewcompiler.js"],"sourcesContent":["/* eslint max-len: 0 */\n\nconst ViewCompiler = require('../../../schema/viewcompiler.js');\n\nclass ViewCompiler_PG extends ViewCompiler {\n  constructor(client, viewCompiler) {\n    super(client, viewCompiler);\n  }\n\n  renameColumn(from, to) {\n    return this.pushQuery({\n      sql: `alter view ${this.viewName()} rename ${this.formatter.wrap(\n        from\n      )} to ${this.formatter.wrap(to)}`,\n    });\n  }\n\n  defaultTo(column, defaultValue) {\n    return this.pushQuery({\n      sql: `alter view ${this.viewName()} alter ${this.formatter.wrap(\n        column\n      )} set default ${defaultValue}`,\n    });\n  }\n\n  createOrReplace() {\n    this.createQuery(this.columns, this.selectQuery, false, true);\n  }\n\n  createMaterializedView() {\n    this.createQuery(this.columns, this.selectQuery, true);\n  }\n}\n\nmodule.exports = ViewCompiler_PG;\n"],"names":[],"mappings":"AAAA,qBAAqB,GAErB,MAAM;AAEN,MAAM,wBAAwB;IAC5B,YAAY,MAAM,EAAE,YAAY,CAAE;QAChC,KAAK,CAAC,QAAQ;IAChB;IAEA,aAAa,IAAI,EAAE,EAAE,EAAE;QACrB,OAAO,IAAI,CAAC,SAAS,CAAC;YACpB,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,GAAG,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAC9D,MACA,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK;QACnC;IACF;IAEA,UAAU,MAAM,EAAE,YAAY,EAAE;QAC9B,OAAO,IAAI,CAAC,SAAS,CAAC;YACpB,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,GAAG,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAC7D,QACA,aAAa,EAAE,cAAc;QACjC;IACF;IAEA,kBAAkB;QAChB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,OAAO;IAC1D;IAEA,yBAAyB;QACvB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE;IACnD;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11417, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/postgres/schema/pg-viewbuilder.js"],"sourcesContent":["const ViewBuilder = require('../../../schema/viewbuilder.js');\n\nclass ViewBuilder_PG extends ViewBuilder {\n  constructor() {\n    super(...arguments);\n  }\n\n  checkOption() {\n    this._single.checkOption = 'default_option';\n  }\n\n  localCheckOption() {\n    this._single.checkOption = 'local';\n  }\n\n  cascadedCheckOption() {\n    this._single.checkOption = 'cascaded';\n  }\n}\n\nmodule.exports = ViewBuilder_PG;\n"],"names":[],"mappings":"AAAA,MAAM;AAEN,MAAM,uBAAuB;IAC3B,aAAc;QACZ,KAAK,IAAI;IACX;IAEA,cAAc;QACZ,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG;IAC7B;IAEA,mBAAmB;QACjB,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG;IAC7B;IAEA,sBAAsB;QACpB,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG;IAC7B;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11438, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/postgres/schema/pg-compiler.js"],"sourcesContent":["// PostgreSQL Schema Compiler\n// -------\n\nconst SchemaCompiler = require('../../../schema/compiler');\n\nclass SchemaCompiler_PG extends SchemaCompiler {\n  constructor(client, builder) {\n    super(client, builder);\n  }\n\n  // Check whether the current table\n  hasTable(tableName) {\n    let sql = 'select * from information_schema.tables where table_name = ?';\n    const bindings = [tableName];\n\n    if (this.schema) {\n      sql += ' and table_schema = ?';\n      bindings.push(this.schema);\n    } else {\n      sql += ' and table_schema = current_schema()';\n    }\n\n    this.pushQuery({\n      sql,\n      bindings,\n      output(resp) {\n        return resp.rows.length > 0;\n      },\n    });\n  }\n\n  // Compile the query to determine if a column exists in a table.\n  hasColumn(tableName, columnName) {\n    let sql =\n      'select * from information_schema.columns where table_name = ? and column_name = ?';\n    const bindings = [tableName, columnName];\n\n    if (this.schema) {\n      sql += ' and table_schema = ?';\n      bindings.push(this.schema);\n    } else {\n      sql += ' and table_schema = current_schema()';\n    }\n\n    this.pushQuery({\n      sql,\n      bindings,\n      output(resp) {\n        return resp.rows.length > 0;\n      },\n    });\n  }\n\n  qualifiedTableName(tableName) {\n    const name = this.schema ? `${this.schema}.${tableName}` : tableName;\n    return this.formatter.wrap(name);\n  }\n\n  // Compile a rename table command.\n  renameTable(from, to) {\n    this.pushQuery(\n      `alter table ${this.qualifiedTableName(\n        from\n      )} rename to ${this.formatter.wrap(to)}`\n    );\n  }\n\n  createSchema(schemaName) {\n    this.pushQuery(`create schema ${this.formatter.wrap(schemaName)}`);\n  }\n\n  createSchemaIfNotExists(schemaName) {\n    this.pushQuery(\n      `create schema if not exists ${this.formatter.wrap(schemaName)}`\n    );\n  }\n\n  dropSchema(schemaName, cascade = false) {\n    this.pushQuery(\n      `drop schema ${this.formatter.wrap(schemaName)}${\n        cascade ? ' cascade' : ''\n      }`\n    );\n  }\n\n  dropSchemaIfExists(schemaName, cascade = false) {\n    this.pushQuery(\n      `drop schema if exists ${this.formatter.wrap(schemaName)}${\n        cascade ? ' cascade' : ''\n      }`\n    );\n  }\n\n  dropExtension(extensionName) {\n    this.pushQuery(`drop extension ${this.formatter.wrap(extensionName)}`);\n  }\n\n  dropExtensionIfExists(extensionName) {\n    this.pushQuery(\n      `drop extension if exists ${this.formatter.wrap(extensionName)}`\n    );\n  }\n\n  createExtension(extensionName) {\n    this.pushQuery(`create extension ${this.formatter.wrap(extensionName)}`);\n  }\n\n  createExtensionIfNotExists(extensionName) {\n    this.pushQuery(\n      `create extension if not exists ${this.formatter.wrap(extensionName)}`\n    );\n  }\n\n  renameView(from, to) {\n    this.pushQuery(\n      this.alterViewPrefix +\n        `${this.formatter.wrap(from)} rename to ${this.formatter.wrap(to)}`\n    );\n  }\n\n  refreshMaterializedView(viewName, concurrently = false) {\n    this.pushQuery({\n      sql: `refresh materialized view${\n        concurrently ? ' concurrently' : ''\n      } ${this.formatter.wrap(viewName)}`,\n    });\n  }\n\n  dropMaterializedView(viewName) {\n    this._dropView(viewName, false, true);\n  }\n\n  dropMaterializedViewIfExists(viewName) {\n    this._dropView(viewName, true, true);\n  }\n}\n\nmodule.exports = SchemaCompiler_PG;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11539, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/postgres/index.js"],"sourcesContent":["// PostgreSQL\n// -------\nconst extend = require('lodash/extend');\nconst map = require('lodash/map');\nconst { promisify } = require('util');\nconst Client = require('../../client');\n\nconst Transaction = require('./execution/pg-transaction');\nconst QueryCompiler = require('./query/pg-querycompiler');\nconst QueryBuilder = require('./query/pg-querybuilder');\nconst ColumnCompiler = require('./schema/pg-columncompiler');\nconst TableCompiler = require('./schema/pg-tablecompiler');\nconst ViewCompiler = require('./schema/pg-viewcompiler');\nconst ViewBuilder = require('./schema/pg-viewbuilder');\nconst SchemaCompiler = require('./schema/pg-compiler');\nconst { makeEscape } = require('../../util/string');\nconst { isString } = require('../../util/is');\n\nclass Client_PG extends Client {\n  constructor(config) {\n    super(config);\n    if (config.returning) {\n      this.defaultReturning = config.returning;\n    }\n\n    if (config.searchPath) {\n      this.searchPath = config.searchPath;\n    }\n  }\n  transaction() {\n    return new Transaction(this, ...arguments);\n  }\n\n  queryBuilder() {\n    return new QueryBuilder(this);\n  }\n\n  queryCompiler(builder, formatter) {\n    return new QueryCompiler(this, builder, formatter);\n  }\n\n  columnCompiler() {\n    return new ColumnCompiler(this, ...arguments);\n  }\n\n  schemaCompiler() {\n    return new SchemaCompiler(this, ...arguments);\n  }\n\n  tableCompiler() {\n    return new TableCompiler(this, ...arguments);\n  }\n\n  viewCompiler() {\n    return new ViewCompiler(this, ...arguments);\n  }\n\n  viewBuilder() {\n    return new ViewBuilder(this, ...arguments);\n  }\n\n  _driver() {\n    return require('pg');\n  }\n\n  wrapIdentifierImpl(value) {\n    if (value === '*') return value;\n\n    let arrayAccessor = '';\n    const arrayAccessorMatch = value.match(/(.*?)(\\[[0-9]+\\])/);\n\n    if (arrayAccessorMatch) {\n      value = arrayAccessorMatch[1];\n      arrayAccessor = arrayAccessorMatch[2];\n    }\n\n    return `\"${value.replace(/\"/g, '\"\"')}\"${arrayAccessor}`;\n  }\n\n  _acquireOnlyConnection() {\n    const connection = new this.driver.Client(this.connectionSettings);\n\n    connection.on('error', (err) => {\n      connection.__knex__disposed = err;\n    });\n\n    connection.on('end', (err) => {\n      connection.__knex__disposed = err || 'Connection ended unexpectedly';\n    });\n\n    return connection.connect().then(() => connection);\n  }\n\n  // Get a raw connection, called by the `pool` whenever a new\n  // connection needs to be added to the pool.\n  acquireRawConnection() {\n    const client = this;\n\n    return this._acquireOnlyConnection()\n      .then(function (connection) {\n        if (!client.version) {\n          return client.checkVersion(connection).then(function (version) {\n            client.version = version;\n            return connection;\n          });\n        }\n\n        return connection;\n      })\n      .then(async function setSearchPath(connection) {\n        await client.setSchemaSearchPath(connection);\n        return connection;\n      });\n  }\n\n  // Used to explicitly close a connection, called internally by the pool\n  // when a connection times out or the pool is shutdown.\n  async destroyRawConnection(connection) {\n    const end = promisify((cb) => connection.end(cb));\n    return end();\n  }\n\n  // In PostgreSQL, we need to do a version check to do some feature\n  // checking on the database.\n  checkVersion(connection) {\n    return new Promise((resolve, reject) => {\n      connection.query('select version();', (err, resp) => {\n        if (err) return reject(err);\n        resolve(this._parseVersion(resp.rows[0].version));\n      });\n    });\n  }\n\n  _parseVersion(versionString) {\n    return /^PostgreSQL (.*?)( |$)/.exec(versionString)[1];\n  }\n\n  // Position the bindings for the query. The escape sequence for question mark\n  // is \\? (e.g. knex.raw(\"\\\\?\") since javascript requires '\\' to be escaped too...)\n  positionBindings(sql) {\n    let questionCount = 0;\n    return sql.replace(/(\\\\*)(\\?)/g, function (match, escapes) {\n      if (escapes.length % 2) {\n        return '?';\n      } else {\n        questionCount++;\n        return `$${questionCount}`;\n      }\n    });\n  }\n\n  setSchemaSearchPath(connection, searchPath) {\n    let path = searchPath || this.searchPath;\n\n    if (!path) return Promise.resolve(true);\n\n    if (!Array.isArray(path) && !isString(path)) {\n      throw new TypeError(\n        `knex: Expected searchPath to be Array/String, got: ${typeof path}`\n      );\n    }\n\n    if (isString(path)) {\n      if (path.includes(',')) {\n        const parts = path.split(',');\n        const arraySyntax = `[${parts\n          .map((searchPath) => `'${searchPath}'`)\n          .join(', ')}]`;\n        this.logger.warn(\n          `Detected comma in searchPath \"${path}\".` +\n            `If you are trying to specify multiple schemas, use Array syntax: ${arraySyntax}`\n        );\n      }\n      path = [path];\n    }\n\n    path = path.map((schemaName) => `\"${schemaName}\"`).join(',');\n\n    return new Promise(function (resolver, rejecter) {\n      connection.query(`set search_path to ${path}`, function (err) {\n        if (err) return rejecter(err);\n        resolver(true);\n      });\n    });\n  }\n\n  _stream(connection, obj, stream, options) {\n    if (!obj.sql) throw new Error('The query is empty');\n\n    const PGQueryStream = process.browser\n      ? undefined\n      : require('pg-query-stream');\n    const sql = obj.sql;\n\n    return new Promise(function (resolver, rejecter) {\n      const queryStream = connection.query(\n        new PGQueryStream(sql, obj.bindings, options),\n        (err) => {\n          rejecter(err);\n        }\n      );\n\n      queryStream.on('error', function (error) {\n        rejecter(error);\n        stream.emit('error', error);\n      });\n\n      // 'end' IS propagated by .pipe, by default\n      stream.on('end', resolver);\n      queryStream.pipe(stream);\n    });\n  }\n\n  // Runs the query on the specified connection, providing the bindings\n  // and any other necessary prep work.\n  _query(connection, obj) {\n    if (!obj.sql) throw new Error('The query is empty');\n\n    let queryConfig = {\n      text: obj.sql,\n      values: obj.bindings || [],\n    };\n\n    if (obj.options) {\n      queryConfig = extend(queryConfig, obj.options);\n    }\n\n    return new Promise(function (resolver, rejecter) {\n      connection.query(queryConfig, function (err, response) {\n        if (err) return rejecter(err);\n        obj.response = response;\n        resolver(obj);\n      });\n    });\n  }\n\n  // Ensures the response is returned in the same format as other clients.\n  processResponse(obj, runner) {\n    const resp = obj.response;\n    if (obj.output) return obj.output.call(runner, resp);\n    if (obj.method === 'raw') return resp;\n    const { returning } = obj;\n    if (resp.command === 'SELECT') {\n      if (obj.method === 'first') return resp.rows[0];\n      if (obj.method === 'pluck') return map(resp.rows, obj.pluck);\n      return resp.rows;\n    }\n    if (returning) {\n      const returns = [];\n      for (let i = 0, l = resp.rows.length; i < l; i++) {\n        const row = resp.rows[i];\n        returns[i] = row;\n      }\n      return returns;\n    }\n    if (resp.command === 'UPDATE' || resp.command === 'DELETE') {\n      return resp.rowCount;\n    }\n    return resp;\n  }\n\n  async cancelQuery(connectionToKill) {\n    const conn = await this.acquireRawConnection();\n\n    try {\n      return await this._wrappedCancelQueryCall(conn, connectionToKill);\n    } finally {\n      await this.destroyRawConnection(conn).catch((err) => {\n        this.logger.warn(`Connection Error: ${err}`);\n      });\n    }\n  }\n  _wrappedCancelQueryCall(conn, connectionToKill) {\n    return this._query(conn, {\n      sql: 'SELECT pg_cancel_backend($1);',\n      bindings: [connectionToKill.processID],\n      options: {},\n    });\n  }\n\n  toPathForJson(jsonPath) {\n    const PG_PATH_REGEX = /^{.*}$/;\n    if (jsonPath.match(PG_PATH_REGEX)) {\n      return jsonPath;\n    }\n    return (\n      '{' +\n      jsonPath\n        .replace(/^(\\$\\.)/, '') // remove the first dollar\n        .replace('.', ',')\n        .replace(/\\[([0-9]+)]/, ',$1') + // transform [number] to ,number\n      '}'\n    );\n  }\n}\n\nObject.assign(Client_PG.prototype, {\n  dialect: 'postgresql',\n\n  driverName: 'pg',\n  canCancelQuery: true,\n\n  _escapeBinding: makeEscape({\n    escapeArray(val, esc) {\n      return esc(arrayString(val, esc));\n    },\n    escapeString(str) {\n      let hasBackslash = false;\n      let escaped = \"'\";\n      for (let i = 0; i < str.length; i++) {\n        const c = str[i];\n        if (c === \"'\") {\n          escaped += c + c;\n        } else if (c === '\\\\') {\n          escaped += c + c;\n          hasBackslash = true;\n        } else {\n          escaped += c;\n        }\n      }\n      escaped += \"'\";\n      if (hasBackslash === true) {\n        escaped = 'E' + escaped;\n      }\n      return escaped;\n    },\n    escapeObject(val, prepareValue, timezone, seen = []) {\n      if (val && typeof val.toPostgres === 'function') {\n        seen = seen || [];\n        if (seen.indexOf(val) !== -1) {\n          throw new Error(\n            `circular reference detected while preparing \"${val}\" for query`\n          );\n        }\n        seen.push(val);\n        return prepareValue(val.toPostgres(prepareValue), seen);\n      }\n      return JSON.stringify(val);\n    },\n  }),\n});\n\nfunction arrayString(arr, esc) {\n  let result = '{';\n  for (let i = 0; i < arr.length; i++) {\n    if (i > 0) result += ',';\n    const val = arr[i];\n    if (val === null || typeof val === 'undefined') {\n      result += 'NULL';\n    } else if (Array.isArray(val)) {\n      result += arrayString(val, esc);\n    } else if (typeof val === 'number') {\n      result += val;\n    } else {\n      result += JSON.stringify(typeof val === 'string' ? val : esc(val));\n    }\n  }\n  return result + '}';\n}\n\nmodule.exports = Client_PG;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11846, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/cockroachdb/crdb-querycompiler.js"],"sourcesContent":["const QueryCompiler_PG = require('../postgres/query/pg-querycompiler');\nconst {\n  columnize: columnize_,\n  wrap: wrap_,\n  operator: operator_,\n} = require('../../formatter/wrappingFormatter');\n\nclass QueryCompiler_CRDB extends QueryCompiler_PG {\n  truncate() {\n    return `truncate ${this.tableName}`;\n  }\n\n  upsert() {\n    let sql = this._upsert();\n    if (sql === '') return sql;\n    const { returning } = this.single;\n    if (returning) sql += this._returning(returning);\n    return {\n      sql: sql,\n      returning,\n    };\n  }\n\n  _upsert() {\n    const upsertValues = this.single.upsert || [];\n    const sql = this.with() + `upsert into ${this.tableName} `;\n    const body = this._insertBody(upsertValues);\n    return body === '' ? '' : sql + body;\n  }\n\n  _groupOrder(item, type) {\n    // CockroachDB don't support PostgreSQL order nulls first/last syntax, we take the generic one.\n    return this._basicGroupOrder(item, type);\n  }\n\n  whereJsonPath(statement) {\n    let castValue = '';\n    if (!isNaN(statement.value) && parseInt(statement.value)) {\n      castValue = '::int';\n    } else if (!isNaN(statement.value) && parseFloat(statement.value)) {\n      castValue = '::float';\n    } else {\n      castValue = \" #>> '{}'\";\n    }\n    return `json_extract_path(${this._columnClause(\n      statement\n    )}, ${this.client.toArrayPathFromJsonPath(\n      statement.jsonPath,\n      this.builder,\n      this.bindingsHolder\n    )})${castValue} ${operator_(\n      statement.operator,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    )} ${this._jsonValueClause(statement)}`;\n  }\n\n  // Json common functions\n  _jsonExtract(nameFunction, params) {\n    let extractions;\n    if (Array.isArray(params.column)) {\n      extractions = params.column;\n    } else {\n      extractions = [params];\n    }\n    return extractions\n      .map((extraction) => {\n        const jsonCol = `json_extract_path(${columnize_(\n          extraction.column || extraction[0],\n          this.builder,\n          this.client,\n          this.bindingsHolder\n        )}, ${this.client.toArrayPathFromJsonPath(\n          extraction.path || extraction[1],\n          this.builder,\n          this.bindingsHolder\n        )})`;\n        const alias = extraction.alias || extraction[2];\n        return alias\n          ? this.client.alias(jsonCol, this.formatter.wrap(alias))\n          : jsonCol;\n      })\n      .join(', ');\n  }\n\n  _onJsonPathEquals(nameJoinFunction, clause) {\n    return (\n      'json_extract_path(' +\n      wrap_(\n        clause.columnFirst,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ', ' +\n      this.client.toArrayPathFromJsonPath(\n        clause.jsonPathFirst,\n        this.builder,\n        this.bindingsHolder\n      ) +\n      ') = json_extract_path(' +\n      wrap_(\n        clause.columnSecond,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      ) +\n      ', ' +\n      this.client.toArrayPathFromJsonPath(\n        clause.jsonPathSecond,\n        this.builder,\n        this.bindingsHolder\n      ) +\n      ')'\n    );\n  }\n}\n\nmodule.exports = QueryCompiler_CRDB;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11909, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/cockroachdb/crdb-columncompiler.js"],"sourcesContent":["const ColumnCompiler_PG = require('../postgres/schema/pg-columncompiler.js');\n\nclass ColumnCompiler_CRDB extends ColumnCompiler_PG {\n  uuid(options = { primaryKey: false }) {\n    return (\n      'uuid' +\n      (this.tableCompiler._canBeAddPrimaryKey(options)\n        ? ' primary key default gen_random_uuid()'\n        : '')\n    );\n  }\n}\n\nmodule.exports = ColumnCompiler_CRDB;\n"],"names":[],"mappings":"AAAA,MAAM;AAEN,MAAM,4BAA4B;IAChC,KAAK,UAAU;QAAE,YAAY;IAAM,CAAC,EAAE;QACpC,OACE,SACA,CAAC,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,WACpC,2CACA,EAAE;IAEV;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11923, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/cockroachdb/crdb-tablecompiler.js"],"sourcesContent":["/* eslint max-len: 0 */\n\nconst TableCompiler = require('../postgres/schema/pg-tablecompiler');\n\nclass TableCompiler_CRDB extends TableCompiler {\n  constructor(client, tableBuilder) {\n    super(client, tableBuilder);\n  }\n\n  addColumns(columns, prefix, colCompilers) {\n    if (prefix === this.alterColumnsPrefix) {\n      // alter columns\n      for (const col of colCompilers) {\n        this.client.logger.warn(\n          'Experimental alter column in use, see issue: https://github.com/cockroachdb/cockroach/issues/49329'\n        );\n        this.pushQuery({\n          sql: 'SET enable_experimental_alter_column_type_general = true',\n          bindings: [],\n        });\n        super._addColumn(col);\n      }\n    } else {\n      // base class implementation for normal add\n      super.addColumns(columns, prefix);\n    }\n  }\n\n  dropUnique(columns, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('unique', this.tableNameRaw, columns);\n    this.pushQuery(`drop index ${this.tableName()}@${indexName} cascade `);\n  }\n}\n\nmodule.exports = TableCompiler_CRDB;\n"],"names":[],"mappings":"AAAA,qBAAqB,GAErB,MAAM;AAEN,MAAM,2BAA2B;IAC/B,YAAY,MAAM,EAAE,YAAY,CAAE;QAChC,KAAK,CAAC,QAAQ;IAChB;IAEA,WAAW,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE;QACxC,IAAI,WAAW,IAAI,CAAC,kBAAkB,EAAE;YACtC,gBAAgB;YAChB,KAAK,MAAM,OAAO,aAAc;gBAC9B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CACrB;gBAEF,IAAI,CAAC,SAAS,CAAC;oBACb,KAAK;oBACL,UAAU,EAAE;gBACd;gBACA,KAAK,CAAC,WAAW;YACnB;QACF,OAAO;YACL,2CAA2C;YAC3C,KAAK,CAAC,WAAW,SAAS;QAC5B;IACF;IAEA,WAAW,OAAO,EAAE,SAAS,EAAE;QAC7B,YAAY,YACR,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aACpB,IAAI,CAAC,aAAa,CAAC,UAAU,IAAI,CAAC,YAAY,EAAE;QACpD,IAAI,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE,UAAU,SAAS,CAAC;IACvE;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11955, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/cockroachdb/crdb-viewcompiler.js"],"sourcesContent":["const ViewCompiler_PG = require('../postgres/schema/pg-viewcompiler.js');\n\nclass ViewCompiler_CRDB extends ViewCompiler_PG {\n  renameColumn(from, to) {\n    throw new Error('rename column of views is not supported by this dialect.');\n  }\n\n  defaultTo(column, defaultValue) {\n    throw new Error(\n      'change default values of views is not supported by this dialect.'\n    );\n  }\n}\n\nmodule.exports = ViewCompiler_CRDB;\n"],"names":[],"mappings":"AAAA,MAAM;AAEN,MAAM,0BAA0B;IAC9B,aAAa,IAAI,EAAE,EAAE,EAAE;QACrB,MAAM,IAAI,MAAM;IAClB;IAEA,UAAU,MAAM,EAAE,YAAY,EAAE;QAC9B,MAAM,IAAI,MACR;IAEJ;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11970, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/cockroachdb/crdb-querybuilder.js"],"sourcesContent":["const QueryBuilder = require('../../query/querybuilder');\nconst isEmpty = require('lodash/isEmpty');\n\nmodule.exports = class QueryBuilder_CockroachDB extends QueryBuilder {\n  upsert(values, returning, options) {\n    this._method = 'upsert';\n    if (!isEmpty(returning)) this.returning(returning, options);\n    this._single.upsert = values;\n    return this;\n  }\n};\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AAEN,OAAO,OAAO,GAAG,MAAM,iCAAiC;IACtD,OAAO,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE;QACjC,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,QAAQ,YAAY,IAAI,CAAC,SAAS,CAAC,WAAW;QACnD,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG;QACtB,OAAO,IAAI;IACb;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11985, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/cockroachdb/index.js"],"sourcesContent":["// CockroachDB Client\n// -------\nconst Client_PostgreSQL = require('../postgres');\nconst Transaction = require('../postgres/execution/pg-transaction');\nconst QueryCompiler = require('./crdb-querycompiler');\nconst ColumnCompiler = require('./crdb-columncompiler');\nconst TableCompiler = require('./crdb-tablecompiler');\nconst ViewCompiler = require('./crdb-viewcompiler');\nconst QueryBuilder = require('./crdb-querybuilder');\n\n// Always initialize with the \"QueryBuilder\" and \"QueryCompiler\"\n// objects, which extend the base 'lib/query/builder' and\n// 'lib/query/compiler', respectively.\nclass Client_CockroachDB extends Client_PostgreSQL {\n  transaction() {\n    return new Transaction(this, ...arguments);\n  }\n\n  queryCompiler(builder, formatter) {\n    return new QueryCompiler(this, builder, formatter);\n  }\n\n  columnCompiler() {\n    return new ColumnCompiler(this, ...arguments);\n  }\n\n  tableCompiler() {\n    return new TableCompiler(this, ...arguments);\n  }\n\n  viewCompiler() {\n    return new ViewCompiler(this, ...arguments);\n  }\n\n  queryBuilder() {\n    return new QueryBuilder(this);\n  }\n\n  _parseVersion(versionString) {\n    return versionString.split(' ')[2];\n  }\n\n  async cancelQuery(connectionToKill) {\n    try {\n      return await this._wrappedCancelQueryCall(null, connectionToKill);\n    } catch (err) {\n      this.logger.warn(`Connection Error: ${err}`);\n      throw err;\n    }\n  }\n\n  _wrappedCancelQueryCall(emptyConnection, connectionToKill) {\n    // FixMe https://github.com/cockroachdb/cockroach/issues/41335\n    if (\n      connectionToKill.activeQuery.processID === 0 &&\n      connectionToKill.activeQuery.secretKey === 0\n    ) {\n      return;\n    }\n\n    return connectionToKill.cancel(\n      connectionToKill,\n      connectionToKill.activeQuery\n    );\n  }\n\n  toArrayPathFromJsonPath(jsonPath, builder, bindingsHolder) {\n    return jsonPath\n      .replace(/^(\\$\\.)/, '') // remove the first dollar\n      .replace(/\\[([0-9]+)]/, '.$1')\n      .split('.')\n      .map(\n        function (v) {\n          return this.parameter(v, builder, bindingsHolder);\n        }.bind(this)\n      )\n      .join(', ');\n  }\n}\n\nObject.assign(Client_CockroachDB.prototype, {\n  // The \"dialect\", for reference elsewhere.\n  driverName: 'cockroachdb',\n});\n\nmodule.exports = Client_CockroachDB;\n"],"names":[],"mappings":"AAAA,qBAAqB;AACrB,UAAU;AACV,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AAEN,gEAAgE;AAChE,yDAAyD;AACzD,sCAAsC;AACtC,MAAM,2BAA2B;IAC/B,cAAc;QACZ,OAAO,IAAI,YAAY,IAAI,KAAK;IAClC;IAEA,cAAc,OAAO,EAAE,SAAS,EAAE;QAChC,OAAO,IAAI,cAAc,IAAI,EAAE,SAAS;IAC1C;IAEA,iBAAiB;QACf,OAAO,IAAI,eAAe,IAAI,KAAK;IACrC;IAEA,gBAAgB;QACd,OAAO,IAAI,cAAc,IAAI,KAAK;IACpC;IAEA,eAAe;QACb,OAAO,IAAI,aAAa,IAAI,KAAK;IACnC;IAEA,eAAe;QACb,OAAO,IAAI,aAAa,IAAI;IAC9B;IAEA,cAAc,aAAa,EAAE;QAC3B,OAAO,cAAc,KAAK,CAAC,IAAI,CAAC,EAAE;IACpC;IAEA,MAAM,YAAY,gBAAgB,EAAE;QAClC,IAAI;YACF,OAAO,MAAM,IAAI,CAAC,uBAAuB,CAAC,MAAM;QAClD,EAAE,OAAO,KAAK;YACZ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,kBAAkB,EAAE,KAAK;YAC3C,MAAM;QACR;IACF;IAEA,wBAAwB,eAAe,EAAE,gBAAgB,EAAE;QACzD,8DAA8D;QAC9D,IACE,iBAAiB,WAAW,CAAC,SAAS,KAAK,KAC3C,iBAAiB,WAAW,CAAC,SAAS,KAAK,GAC3C;YACA;QACF;QAEA,OAAO,iBAAiB,MAAM,CAC5B,kBACA,iBAAiB,WAAW;IAEhC;IAEA,wBAAwB,QAAQ,EAAE,OAAO,EAAE,cAAc,EAAE;QACzD,OAAO,SACJ,OAAO,CAAC,WAAW,IAAI,0BAA0B;SACjD,OAAO,CAAC,eAAe,OACvB,KAAK,CAAC,KACN,GAAG,CACF,CAAA,SAAU,CAAC;YACT,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,SAAS;QACpC,CAAA,EAAE,IAAI,CAAC,IAAI,GAEZ,IAAI,CAAC;IACV;AACF;AAEA,OAAO,MAAM,CAAC,mBAAmB,SAAS,EAAE;IAC1C,0CAA0C;IAC1C,YAAY;AACd;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12051, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/mssql/mssql-formatter.js"],"sourcesContent":["const Formatter = require('../../formatter');\n\nclass MSSQL_Formatter extends Formatter {\n  // Accepts a string or array of columns to wrap as appropriate.\n  columnizeWithPrefix(prefix, target) {\n    const columns = typeof target === 'string' ? [target] : target;\n    let str = '',\n      i = -1;\n    while (++i < columns.length) {\n      if (i > 0) str += ', ';\n      str += prefix + this.wrap(columns[i]);\n    }\n    return str;\n  }\n\n  /**\n   * Returns its argument with single quotes escaped, so it can be included into a single-quoted string.\n   *\n   * For example, it converts \"has'quote\" to \"has''quote\".\n   *\n   * This assumes QUOTED_IDENTIFIER ON so it is only ' that need escaping,\n   * never \", because \" cannot be used to quote a string when that's on;\n   * otherwise we'd need to be aware of whether the string is quoted with \" or '.\n   *\n   * This assumption is consistent with the SQL Knex generates.\n   * @param {string} string\n   * @returns {string}\n   */\n  escapingStringDelimiters(string) {\n    return (string || '').replace(/'/g, \"''\");\n  }\n}\n\nmodule.exports = MSSQL_Formatter;\n"],"names":[],"mappings":"AAAA,MAAM;AAEN,MAAM,wBAAwB;IAC5B,+DAA+D;IAC/D,oBAAoB,MAAM,EAAE,MAAM,EAAE;QAClC,MAAM,UAAU,OAAO,WAAW,WAAW;YAAC;SAAO,GAAG;QACxD,IAAI,MAAM,IACR,IAAI,CAAC;QACP,MAAO,EAAE,IAAI,QAAQ,MAAM,CAAE;YAC3B,IAAI,IAAI,GAAG,OAAO;YAClB,OAAO,SAAS,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;QACtC;QACA,OAAO;IACT;IAEA;;;;;;;;;;;;GAYC,GACD,yBAAyB,MAAM,EAAE;QAC/B,OAAO,CAAC,UAAU,EAAE,EAAE,OAAO,CAAC,MAAM;IACtC;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12087, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/mssql/transaction.js"],"sourcesContent":["const Transaction = require('../../execution/transaction');\nconst debug = require('debug')('knex:tx');\n\nclass Transaction_MSSQL extends Transaction {\n  begin(/** @type {import('tedious').Connection} */ conn) {\n    debug('transaction::begin id=%s', this.txid);\n\n    return new Promise((resolve, reject) => {\n      conn.beginTransaction(\n        (err) => {\n          if (err) {\n            debug(\n              'transaction::begin error id=%s message=%s',\n              this.txid,\n              err.message\n            );\n            return reject(err);\n          }\n          resolve();\n        },\n        this.outerTx ? this.txid : undefined,\n        nameToIsolationLevelEnum(this.isolationLevel)\n      );\n    }).then(this._resolver, this._rejecter);\n  }\n\n  savepoint(conn) {\n    debug('transaction::savepoint id=%s', this.txid);\n\n    return new Promise((resolve, reject) => {\n      conn.saveTransaction(\n        (err) => {\n          if (err) {\n            debug(\n              'transaction::savepoint id=%s message=%s',\n              this.txid,\n              err.message\n            );\n            return reject(err);\n          }\n\n          this.trxClient.emit('query', {\n            __knexUid: this.trxClient.__knexUid,\n            __knexTxId: this.trxClient.__knexTxId,\n            autogenerated: true,\n            sql: this.outerTx\n              ? `SAVE TRANSACTION [${this.txid}]`\n              : `SAVE TRANSACTION`,\n          });\n          resolve();\n        },\n        this.outerTx ? this.txid : undefined\n      );\n    });\n  }\n\n  commit(conn, value) {\n    debug('transaction::commit id=%s', this.txid);\n\n    return new Promise((resolve, reject) => {\n      conn.commitTransaction(\n        (err) => {\n          if (err) {\n            debug(\n              'transaction::commit error id=%s message=%s',\n              this.txid,\n              err.message\n            );\n            return reject(err);\n          }\n\n          this._completed = true;\n          resolve(value);\n        },\n        this.outerTx ? this.txid : undefined\n      );\n    }).then(() => this._resolver(value), this._rejecter);\n  }\n\n  release(conn, value) {\n    return this._resolver(value);\n  }\n\n  rollback(conn, error) {\n    this._completed = true;\n    debug('transaction::rollback id=%s', this.txid);\n\n    return new Promise((_resolve, reject) => {\n      if (!conn.inTransaction) {\n        return reject(\n          error || new Error('Transaction rejected with non-error: undefined')\n        );\n      }\n\n      if (conn.state.name !== 'LoggedIn') {\n        return reject(\n          new Error(\n            \"Can't rollback transaction. There is a request in progress\"\n          )\n        );\n      }\n\n      conn.rollbackTransaction(\n        (err) => {\n          if (err) {\n            debug(\n              'transaction::rollback error id=%s message=%s',\n              this.txid,\n              err.message\n            );\n          }\n\n          reject(\n            err ||\n              error ||\n              new Error('Transaction rejected with non-error: undefined')\n          );\n        },\n        this.outerTx ? this.txid : undefined\n      );\n    }).catch((err) => {\n      if (!error && this.doNotRejectOnRollback) {\n        this._resolver();\n        return;\n      }\n      if (error) {\n        try {\n          err.originalError = error;\n        } catch (_err) {\n          // This is to handle https://github.com/knex/knex/issues/4128\n        }\n      }\n      this._rejecter(err);\n    });\n  }\n\n  rollbackTo(conn, error) {\n    return this.rollback(conn, error).then(\n      () =>\n        void this.trxClient.emit('query', {\n          __knexUid: this.trxClient.__knexUid,\n          __knexTxId: this.trxClient.__knexTxId,\n          autogenerated: true,\n          sql: `ROLLBACK TRANSACTION`,\n        })\n    );\n  }\n}\n\nmodule.exports = Transaction_MSSQL;\n\nfunction nameToIsolationLevelEnum(level) {\n  if (!level) return;\n  level = level.toUpperCase().replace(' ', '_');\n  const knownEnum = isolationEnum[level];\n  if (!knownEnum) {\n    throw new Error(\n      `Unknown Isolation level, was expecting one of: ${JSON.stringify(\n        humanReadableKeys\n      )}`\n    );\n  }\n  return knownEnum;\n}\n\n// Based on: https://github.com/tediousjs/node-mssql/blob/master/lib/isolationlevel.js\nconst isolationEnum = {\n  READ_UNCOMMITTED: 0x01,\n  READ_COMMITTED: 0x02,\n  REPEATABLE_READ: 0x03,\n  SERIALIZABLE: 0x04,\n  SNAPSHOT: 0x05,\n};\nconst humanReadableKeys = Object.keys(isolationEnum).map((key) =>\n  key.toLowerCase().replace('_', ' ')\n);\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12200, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/mssql/query/mssql-querycompiler.js"],"sourcesContent":["// MSSQL Query Compiler\n// ------\nconst QueryCompiler = require('../../../query/querycompiler');\n\nconst compact = require('lodash/compact');\nconst identity = require('lodash/identity');\nconst isEmpty = require('lodash/isEmpty');\nconst Raw = require('../../../raw.js');\nconst {\n  columnize: columnize_,\n} = require('../../../formatter/wrappingFormatter');\n\nconst components = [\n  'comments',\n  'columns',\n  'join',\n  'lock',\n  'where',\n  'union',\n  'group',\n  'having',\n  'order',\n  'limit',\n  'offset',\n];\n\nclass QueryCompiler_MSSQL extends QueryCompiler {\n  constructor(client, builder, formatter) {\n    super(client, builder, formatter);\n\n    const { onConflict } = this.single;\n    if (onConflict) {\n      throw new Error('.onConflict() is not supported for mssql.');\n    }\n\n    this._emptyInsertValue = 'default values';\n  }\n\n  with() {\n    // WITH RECURSIVE is a syntax error:\n    // SQL Server does not syntactically distinguish recursive and non-recursive CTEs.\n    // So mark all statements as non-recursive, generate the SQL, then restore.\n    // This approach ensures any changes in base class with() get propagated here.\n    const undoList = [];\n    if (this.grouped.with) {\n      for (const stmt of this.grouped.with) {\n        if (stmt.recursive) {\n          undoList.push(stmt);\n          stmt.recursive = false;\n        }\n      }\n    }\n\n    const result = super.with();\n\n    // Restore the recursive markings, in case this same query gets cloned and passed to other drivers.\n    for (const stmt of undoList) {\n      stmt.recursive = true;\n    }\n    return result;\n  }\n\n  select() {\n    const sql = this.with();\n    const statements = components.map((component) => this[component](this));\n    return sql + compact(statements).join(' ');\n  }\n\n  //#region Insert\n  // Compiles an \"insert\" query, allowing for multiple\n  // inserts using a single query statement.\n  insert() {\n    if (\n      this.single.options &&\n      this.single.options.includeTriggerModifications\n    ) {\n      return this.insertWithTriggers();\n    } else {\n      return this.standardInsert();\n    }\n  }\n\n  insertWithTriggers() {\n    const insertValues = this.single.insert || [];\n    const { returning } = this.single;\n    let sql =\n      this.with() +\n      `${this._buildTempTable(returning)}insert into ${this.tableName} `;\n    const returningSql = returning\n      ? this._returning('insert', returning, true) + ' '\n      : '';\n\n    if (Array.isArray(insertValues)) {\n      if (insertValues.length === 0) {\n        return '';\n      }\n    } else if (typeof insertValues === 'object' && isEmpty(insertValues)) {\n      return {\n        sql:\n          sql +\n          returningSql +\n          this._emptyInsertValue +\n          this._buildReturningSelect(returning),\n        returning,\n      };\n    }\n    sql += this._buildInsertData(insertValues, returningSql);\n\n    if (returning) {\n      sql += this._buildReturningSelect(returning);\n    }\n\n    return {\n      sql,\n      returning,\n    };\n  }\n\n  _buildInsertData(insertValues, returningSql) {\n    let sql = '';\n    const insertData = this._prepInsert(insertValues);\n    if (typeof insertData === 'string') {\n      sql += insertData;\n    } else {\n      if (insertData.columns.length) {\n        sql += `(${this.formatter.columnize(insertData.columns)}`;\n        sql +=\n          `) ${returningSql}values (` +\n          this._buildInsertValues(insertData) +\n          ')';\n      } else if (insertValues.length === 1 && insertValues[0]) {\n        sql += returningSql + this._emptyInsertValue;\n      } else {\n        return '';\n      }\n    }\n    return sql;\n  }\n\n  standardInsert() {\n    const insertValues = this.single.insert || [];\n    let sql = this.with() + `insert into ${this.tableName} `;\n    const { returning } = this.single;\n    const returningSql = returning\n      ? this._returning('insert', returning) + ' '\n      : '';\n\n    if (Array.isArray(insertValues)) {\n      if (insertValues.length === 0) {\n        return '';\n      }\n    } else if (typeof insertValues === 'object' && isEmpty(insertValues)) {\n      return {\n        sql: sql + returningSql + this._emptyInsertValue,\n        returning,\n      };\n    }\n\n    sql += this._buildInsertData(insertValues, returningSql);\n\n    return {\n      sql,\n      returning,\n    };\n  }\n  //#endregion\n\n  //#region Update\n  // Compiles an `update` query, allowing for a return value.\n  update() {\n    if (\n      this.single.options &&\n      this.single.options.includeTriggerModifications\n    ) {\n      return this.updateWithTriggers();\n    } else {\n      return this.standardUpdate();\n    }\n  }\n\n  updateWithTriggers() {\n    const top = this.top();\n    const withSQL = this.with();\n    const updates = this._prepUpdate(this.single.update);\n    const join = this.join();\n    const where = this.where();\n    const order = this.order();\n    const { returning } = this.single;\n    const declaredTemp = this._buildTempTable(returning);\n    return {\n      sql:\n        withSQL +\n        declaredTemp +\n        `update ${top ? top + ' ' : ''}${this.tableName}` +\n        ' set ' +\n        updates.join(', ') +\n        (returning ? ` ${this._returning('update', returning, true)}` : '') +\n        (join ? ` from ${this.tableName} ${join}` : '') +\n        (where ? ` ${where}` : '') +\n        (order ? ` ${order}` : '') +\n        (!returning\n          ? this._returning('rowcount', '@@rowcount')\n          : this._buildReturningSelect(returning)),\n      returning: returning || '@@rowcount',\n    };\n  }\n\n  _formatGroupsItemValue(value, nulls) {\n    const column = super._formatGroupsItemValue(value);\n    // MSSQL dont support 'is null' syntax in order by,\n    // so we override this function and add MSSQL specific syntax.\n    if (nulls && !(value instanceof Raw)) {\n      const collNulls = `IIF(${column} is null,`;\n      if (nulls === 'first') {\n        return `${collNulls}0,1)`;\n      } else if (nulls === 'last') {\n        return `${collNulls}1,0)`;\n      }\n    }\n    return column;\n  }\n\n  standardUpdate() {\n    const top = this.top();\n    const withSQL = this.with();\n    const updates = this._prepUpdate(this.single.update);\n    const join = this.join();\n    const where = this.where();\n    const order = this.order();\n    const { returning } = this.single;\n    return {\n      sql:\n        withSQL +\n        `update ${top ? top + ' ' : ''}${this.tableName}` +\n        ' set ' +\n        updates.join(', ') +\n        (returning ? ` ${this._returning('update', returning)}` : '') +\n        (join ? ` from ${this.tableName} ${join}` : '') +\n        (where ? ` ${where}` : '') +\n        (order ? ` ${order}` : '') +\n        (!returning ? this._returning('rowcount', '@@rowcount') : ''),\n      returning: returning || '@@rowcount',\n    };\n  }\n  //#endregion\n\n  //#region Delete\n  // Compiles a `delete` query.\n  del() {\n    if (\n      this.single.options &&\n      this.single.options.includeTriggerModifications\n    ) {\n      return this.deleteWithTriggers();\n    } else {\n      return this.standardDelete();\n    }\n  }\n\n  deleteWithTriggers() {\n    // Make sure tableName is processed by the formatter first.\n    const withSQL = this.with();\n    const { tableName } = this;\n    const wheres = this.where();\n    const joins = this.join();\n    const { returning } = this.single;\n    const returningStr = returning\n      ? ` ${this._returning('del', returning, true)}`\n      : '';\n    const deleteSelector = joins ? `${tableName}${returningStr} ` : '';\n    return {\n      sql:\n        withSQL +\n        `${this._buildTempTable(\n          returning\n        )}delete ${deleteSelector}from ${tableName}` +\n        (!joins ? returningStr : '') +\n        (joins ? ` ${joins}` : '') +\n        (wheres ? ` ${wheres}` : '') +\n        (!returning\n          ? this._returning('rowcount', '@@rowcount')\n          : this._buildReturningSelect(returning)),\n      returning: returning || '@@rowcount',\n    };\n  }\n\n  standardDelete() {\n    // Make sure tableName is processed by the formatter first.\n    const withSQL = this.with();\n    const { tableName } = this;\n    const wheres = this.where();\n    const joins = this.join();\n    const { returning } = this.single;\n    const returningStr = returning\n      ? ` ${this._returning('del', returning)}`\n      : '';\n    // returning needs to be before \"from\" when using join\n    const deleteSelector = joins ? `${tableName}${returningStr} ` : '';\n    return {\n      sql:\n        withSQL +\n        `delete ${deleteSelector}from ${tableName}` +\n        (!joins ? returningStr : '') +\n        (joins ? ` ${joins}` : '') +\n        (wheres ? ` ${wheres}` : '') +\n        (!returning ? this._returning('rowcount', '@@rowcount') : ''),\n      returning: returning || '@@rowcount',\n    };\n  }\n  //#endregion\n\n  // Compiles the columns in the query, specifying if an item was distinct.\n  columns() {\n    let distinctClause = '';\n    if (this.onlyUnions()) return '';\n    const top = this.top();\n    const hints = this._hintComments();\n    const columns = this.grouped.columns || [];\n    let i = -1,\n      sql = [];\n    if (columns) {\n      while (++i < columns.length) {\n        const stmt = columns[i];\n        if (stmt.distinct) distinctClause = 'distinct ';\n        if (stmt.distinctOn) {\n          distinctClause = this.distinctOn(stmt.value);\n          continue;\n        }\n        if (stmt.type === 'aggregate') {\n          sql.push(...this.aggregate(stmt));\n        } else if (stmt.type === 'aggregateRaw') {\n          sql.push(this.aggregateRaw(stmt));\n        } else if (stmt.type === 'analytic') {\n          sql.push(this.analytic(stmt));\n        } else if (stmt.type === 'json') {\n          sql.push(this.json(stmt));\n        } else if (stmt.value && stmt.value.length > 0) {\n          sql.push(this.formatter.columnize(stmt.value));\n        }\n      }\n    }\n    if (sql.length === 0) sql = ['*'];\n    const select = this.onlyJson() ? '' : 'select ';\n    return (\n      `${select}${hints}${distinctClause}` +\n      (top ? top + ' ' : '') +\n      sql.join(', ') +\n      (this.tableName ? ` from ${this.tableName}` : '')\n    );\n  }\n\n  _returning(method, value, withTrigger) {\n    switch (method) {\n      case 'update':\n      case 'insert':\n        return value\n          ? `output ${this.formatter.columnizeWithPrefix('inserted.', value)}${\n              withTrigger ? ' into #out' : ''\n            }`\n          : '';\n      case 'del':\n        return value\n          ? `output ${this.formatter.columnizeWithPrefix('deleted.', value)}${\n              withTrigger ? ' into #out' : ''\n            }`\n          : '';\n      case 'rowcount':\n        return value ? ';select @@rowcount' : '';\n    }\n  }\n\n  _buildTempTable(values) {\n    // If value is nothing then return an empty string\n    if (values && values.length > 0) {\n      let selections = '';\n\n      // Build values that will be returned from this procedure\n      if (Array.isArray(values)) {\n        selections = values\n          .map((value) => `[t].${this.formatter.columnize(value)}`)\n          .join(',');\n      } else {\n        selections = `[t].${this.formatter.columnize(values)}`;\n      }\n\n      // Force #out to be correctly populated with the correct column structure.\n      let sql = `select top(0) ${selections} into #out `;\n      sql += `from ${this.tableName} as t `;\n      sql += `left join ${this.tableName} on 0=1;`;\n\n      return sql;\n    }\n\n    return '';\n  }\n\n  _buildReturningSelect(values) {\n    // If value is nothing then return an empty string\n    if (values && values.length > 0) {\n      let selections = '';\n\n      // Build columns to return\n      if (Array.isArray(values)) {\n        selections = values\n          .map((value) => `${this.formatter.columnize(value)}`)\n          .join(',');\n      } else {\n        selections = this.formatter.columnize(values);\n      }\n\n      // Get the returned values\n      let sql = `; select ${selections} from #out; `;\n      // Drop the temp table to prevent memory leaks\n      sql += `drop table #out;`;\n\n      return sql;\n    }\n\n    return '';\n  }\n\n  // Compiles a `truncate` query.\n  truncate() {\n    return `truncate table ${this.tableName}`;\n  }\n\n  forUpdate() {\n    // this doesn't work exacltly as it should, one should also mention index while locking\n    // https://stackoverflow.com/a/9818448/360060\n    return 'with (UPDLOCK)';\n  }\n\n  forShare() {\n    // http://www.sqlteam.com/article/introduction-to-locking-in-sql-server\n    return 'with (HOLDLOCK)';\n  }\n\n  // Compiles a `columnInfo` query.\n  columnInfo() {\n    const column = this.single.columnInfo;\n    let schema = this.single.schema;\n\n    // The user may have specified a custom wrapIdentifier function in the config. We\n    // need to run the identifiers through that function, but not format them as\n    // identifiers otherwise.\n    const table = this.client.customWrapIdentifier(this.single.table, identity);\n\n    if (schema) {\n      schema = this.client.customWrapIdentifier(schema, identity);\n    }\n\n    // GOTCHA: INFORMATION_SCHEMA.COLUMNS must be capitalized to work when the database has a case-sensitive collation. [#4573]\n    let sql = `select [COLUMN_NAME], [COLUMN_DEFAULT], [DATA_TYPE], [CHARACTER_MAXIMUM_LENGTH], [IS_NULLABLE] from INFORMATION_SCHEMA.COLUMNS where table_name = ? and table_catalog = ?`;\n    const bindings = [table, this.client.database()];\n\n    if (schema) {\n      sql += ' and table_schema = ?';\n      bindings.push(schema);\n    } else {\n      sql += ` and table_schema = 'dbo'`;\n    }\n\n    return {\n      sql,\n      bindings: bindings,\n      output(resp) {\n        const out = resp.reduce((columns, val) => {\n          columns[val[0].value] = {\n            defaultValue: val[1].value,\n            type: val[2].value,\n            maxLength: val[3].value,\n            nullable: val[4].value === 'YES',\n          };\n          return columns;\n        }, {});\n        return (column && out[column]) || out;\n      },\n    };\n  }\n\n  top() {\n    const noLimit = !this.single.limit && this.single.limit !== 0;\n    const noOffset = !this.single.offset;\n    if (noLimit || !noOffset) return '';\n    return `top (${this._getValueOrParameterFromAttribute('limit')})`;\n  }\n\n  limit() {\n    return '';\n  }\n\n  offset() {\n    const noLimit = !this.single.limit && this.single.limit !== 0;\n    const noOffset = !this.single.offset;\n    if (noOffset) return '';\n    let offset = `offset ${\n      noOffset ? '0' : this._getValueOrParameterFromAttribute('offset')\n    } rows`;\n    if (!noLimit) {\n      offset += ` fetch next ${this._getValueOrParameterFromAttribute(\n        'limit'\n      )} rows only`;\n    }\n    return offset;\n  }\n\n  whereLike(statement) {\n    return `${this._columnClause(\n      statement\n    )} collate SQL_Latin1_General_CP1_CS_AS ${this._not(\n      statement,\n      'like '\n    )}${this._valueClause(statement)}`;\n  }\n\n  whereILike(statement) {\n    return `${this._columnClause(\n      statement\n    )} collate SQL_Latin1_General_CP1_CI_AS ${this._not(\n      statement,\n      'like '\n    )}${this._valueClause(statement)}`;\n  }\n\n  jsonExtract(params) {\n    // JSON_VALUE return NULL if we query object or array\n    // JSON_QUERY return NULL if we query literal/single value\n    return this._jsonExtract(\n      params.singleValue ? 'JSON_VALUE' : 'JSON_QUERY',\n      params\n    );\n  }\n\n  jsonSet(params) {\n    return this._jsonSet('JSON_MODIFY', params);\n  }\n\n  jsonInsert(params) {\n    return this._jsonSet('JSON_MODIFY', params);\n  }\n\n  jsonRemove(params) {\n    const jsonCol = `JSON_MODIFY(${columnize_(\n      params.column,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    )},${this.client.parameter(\n      params.path,\n      this.builder,\n      this.bindingsHolder\n    )}, NULL)`;\n    return params.alias\n      ? this.client.alias(jsonCol, this.formatter.wrap(params.alias))\n      : jsonCol;\n  }\n\n  whereJsonPath(statement) {\n    return this._whereJsonPath('JSON_VALUE', statement);\n  }\n\n  whereJsonSupersetOf(statement) {\n    throw new Error(\n      'Json superset where clause not actually supported by MSSQL'\n    );\n  }\n\n  whereJsonSubsetOf(statement) {\n    throw new Error('Json subset where clause not actually supported by MSSQL');\n  }\n\n  _getExtracts(statement, operator) {\n    const column = columnize_(\n      statement.column,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    );\n    return (\n      Array.isArray(statement.values) ? statement.values : [statement.values]\n    )\n      .map(function (value) {\n        return (\n          'JSON_VALUE(' +\n          column +\n          ',' +\n          this.client.parameter(value, this.builder, this.bindingsHolder) +\n          ')'\n        );\n      }, this)\n      .join(operator);\n  }\n\n  onJsonPathEquals(clause) {\n    return this._onJsonPathEquals('JSON_VALUE', clause);\n  }\n}\n\n// Set the QueryBuilder & QueryCompiler on the client object,\n// in case anyone wants to modify things to suit their own purposes.\nmodule.exports = QueryCompiler_MSSQL;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12623, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/mssql/schema/mssql-compiler.js"],"sourcesContent":["// MySQL Schema Compiler\n// -------\nconst SchemaCompiler = require('../../../schema/compiler');\n\nclass SchemaCompiler_MSSQL extends SchemaCompiler {\n  constructor(client, builder) {\n    super(client, builder);\n  }\n\n  dropTableIfExists(tableName) {\n    const name = this.formatter.wrap(prefixedTableName(this.schema, tableName));\n    this.pushQuery(\n      `if object_id('${name}', 'U') is not null DROP TABLE ${name}`\n    );\n  }\n\n  dropViewIfExists(viewName) {\n    const name = this.formatter.wrap(prefixedTableName(this.schema, viewName));\n    this.pushQuery(\n      `if object_id('${name}', 'V') is not null DROP VIEW ${name}`\n    );\n  }\n\n  // Rename a table on the schema.\n  renameTable(tableName, to) {\n    this.pushQuery(\n      `exec sp_rename ${this.client.parameter(\n        prefixedTableName(this.schema, tableName),\n        this.builder,\n        this.bindingsHolder\n      )}, ${this.client.parameter(to, this.builder, this.bindingsHolder)}`\n    );\n  }\n\n  renameView(viewTable, to) {\n    this.pushQuery(\n      `exec sp_rename ${this.client.parameter(\n        prefixedTableName(this.schema, viewTable),\n        this.builder,\n        this.bindingsHolder\n      )}, ${this.client.parameter(to, this.builder, this.bindingsHolder)}`\n    );\n  }\n\n  // Check whether a table exists on the query.\n  hasTable(tableName) {\n    const formattedTable = this.client.parameter(\n      prefixedTableName(this.schema, tableName),\n      this.builder,\n      this.bindingsHolder\n    );\n    const bindings = [tableName];\n    let sql =\n      `SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES ` +\n      `WHERE TABLE_NAME = ${formattedTable}`;\n\n    if (this.schema) {\n      sql += ' AND TABLE_SCHEMA = ?';\n      bindings.push(this.schema);\n    }\n\n    this.pushQuery({ sql, bindings, output: (resp) => resp.length > 0 });\n  }\n\n  // Check whether a column exists on the schema.\n  hasColumn(tableName, column) {\n    const formattedColumn = this.client.parameter(\n      column,\n      this.builder,\n      this.bindingsHolder\n    );\n    const formattedTable = this.client.parameter(\n      this.formatter.wrap(prefixedTableName(this.schema, tableName)),\n      this.builder,\n      this.bindingsHolder\n    );\n    const sql =\n      `select object_id from sys.columns ` +\n      `where name = ${formattedColumn} ` +\n      `and object_id = object_id(${formattedTable})`;\n    this.pushQuery({ sql, output: (resp) => resp.length > 0 });\n  }\n}\n\nSchemaCompiler_MSSQL.prototype.dropTablePrefix = 'DROP TABLE ';\n\nfunction prefixedTableName(prefix, table) {\n  return prefix ? `${prefix}.${table}` : table;\n}\n\nmodule.exports = SchemaCompiler_MSSQL;\n"],"names":[],"mappings":"AAAA,wBAAwB;AACxB,UAAU;AACV,MAAM;AAEN,MAAM,6BAA6B;IACjC,YAAY,MAAM,EAAE,OAAO,CAAE;QAC3B,KAAK,CAAC,QAAQ;IAChB;IAEA,kBAAkB,SAAS,EAAE;QAC3B,MAAM,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,IAAI,CAAC,MAAM,EAAE;QAChE,IAAI,CAAC,SAAS,CACZ,CAAC,cAAc,EAAE,KAAK,+BAA+B,EAAE,MAAM;IAEjE;IAEA,iBAAiB,QAAQ,EAAE;QACzB,MAAM,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,IAAI,CAAC,MAAM,EAAE;QAChE,IAAI,CAAC,SAAS,CACZ,CAAC,cAAc,EAAE,KAAK,8BAA8B,EAAE,MAAM;IAEhE;IAEA,gCAAgC;IAChC,YAAY,SAAS,EAAE,EAAE,EAAE;QACzB,IAAI,CAAC,SAAS,CACZ,CAAC,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CACrC,kBAAkB,IAAI,CAAC,MAAM,EAAE,YAC/B,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,cAAc,EACnB,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,GAAG;IAExE;IAEA,WAAW,SAAS,EAAE,EAAE,EAAE;QACxB,IAAI,CAAC,SAAS,CACZ,CAAC,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CACrC,kBAAkB,IAAI,CAAC,MAAM,EAAE,YAC/B,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,cAAc,EACnB,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,GAAG;IAExE;IAEA,6CAA6C;IAC7C,SAAS,SAAS,EAAE;QAClB,MAAM,iBAAiB,IAAI,CAAC,MAAM,CAAC,SAAS,CAC1C,kBAAkB,IAAI,CAAC,MAAM,EAAE,YAC/B,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,cAAc;QAErB,MAAM,WAAW;YAAC;SAAU;QAC5B,IAAI,MACF,CAAC,iDAAiD,CAAC,GACnD,CAAC,mBAAmB,EAAE,gBAAgB;QAExC,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,OAAO;YACP,SAAS,IAAI,CAAC,IAAI,CAAC,MAAM;QAC3B;QAEA,IAAI,CAAC,SAAS,CAAC;YAAE;YAAK;YAAU,QAAQ,CAAC,OAAS,KAAK,MAAM,GAAG;QAAE;IACpE;IAEA,+CAA+C;IAC/C,UAAU,SAAS,EAAE,MAAM,EAAE;QAC3B,MAAM,kBAAkB,IAAI,CAAC,MAAM,CAAC,SAAS,CAC3C,QACA,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,cAAc;QAErB,MAAM,iBAAiB,IAAI,CAAC,MAAM,CAAC,SAAS,CAC1C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,IAAI,CAAC,MAAM,EAAE,aACnD,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,cAAc;QAErB,MAAM,MACJ,CAAC,kCAAkC,CAAC,GACpC,CAAC,aAAa,EAAE,gBAAgB,CAAC,CAAC,GAClC,CAAC,0BAA0B,EAAE,eAAe,CAAC,CAAC;QAChD,IAAI,CAAC,SAAS,CAAC;YAAE;YAAK,QAAQ,CAAC,OAAS,KAAK,MAAM,GAAG;QAAE;IAC1D;AACF;AAEA,qBAAqB,SAAS,CAAC,eAAe,GAAG;AAEjD,SAAS,kBAAkB,MAAM,EAAE,KAAK;IACtC,OAAO,SAAS,GAAG,OAAO,CAAC,EAAE,OAAO,GAAG;AACzC;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12683, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/mssql/schema/mssql-tablecompiler.js"],"sourcesContent":["/* eslint max-len:0 */\n\n// MSSQL Table Builder & Compiler\n// -------\nconst TableCompiler = require('../../../schema/tablecompiler');\nconst helpers = require('../../../util/helpers');\nconst { isObject } = require('../../../util/is');\n\n// Table Compiler\n// ------\n\nclass TableCompiler_MSSQL extends TableCompiler {\n  constructor(client, tableBuilder) {\n    super(client, tableBuilder);\n  }\n\n  createQuery(columns, ifNot, like) {\n    let createStatement = ifNot\n      ? `if object_id('${this.tableName()}', 'U') is null `\n      : '';\n\n    if (like) {\n      // This query copy only columns and not all indexes and keys like other databases.\n      createStatement += `SELECT * INTO ${this.tableName()} FROM ${this.tableNameLike()} WHERE 0=1`;\n    } else {\n      createStatement +=\n        'CREATE TABLE ' +\n        this.tableName() +\n        (this._formatting ? ' (\\n    ' : ' (') +\n        columns.sql.join(this._formatting ? ',\\n    ' : ', ') +\n        this._addChecks() +\n        ')';\n    }\n\n    this.pushQuery(createStatement);\n\n    if (this.single.comment) {\n      this.comment(this.single.comment);\n    }\n    if (like) {\n      this.addColumns(columns, this.addColumnsPrefix);\n    }\n  }\n\n  comment(/** @type {string} */ comment) {\n    if (!comment) {\n      return;\n    }\n\n    // XXX: This is a byte limit, not character, so we cannot definitively say they'll exceed the limit without server collation info.\n    // When I checked in SQL Server 2019, the ctext column in sys.syscomments is defined as a varbinary(8000), so it doesn't even have its own defined collation.\n    if (comment.length > 7500 / 2) {\n      this.client.logger.warn(\n        'Your comment might be longer than the max comment length for MSSQL of 7,500 bytes.'\n      );\n    }\n\n    // See: https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-addextendedproperty-transact-sql?view=sql-server-ver15#f-adding-an-extended-property-to-a-table\n    const value = this.formatter.escapingStringDelimiters(comment);\n    const level0name = this.formatter.escapingStringDelimiters(\n      this.schemaNameRaw || 'dbo'\n    );\n    const level1name = this.formatter.escapingStringDelimiters(\n      this.tableNameRaw\n    );\n    const args = `N'MS_Description', N'${value}', N'Schema', N'${level0name}', N'Table', N'${level1name}'`;\n    const isAlreadyDefined = `EXISTS(SELECT * FROM sys.fn_listextendedproperty(N'MS_Description', N'Schema', N'${level0name}', N'Table', N'${level1name}', NULL, NULL))`;\n    this.pushQuery(\n      `IF ${isAlreadyDefined}\\n  EXEC sys.sp_updateextendedproperty ${args}\\nELSE\\n  EXEC sys.sp_addextendedproperty ${args}`\n    );\n  }\n\n  // Compiles column add.  Multiple columns need only one ADD clause (not one ADD per column) so core addColumns doesn't work.  #1348\n  addColumns(columns, prefix) {\n    prefix = prefix || this.addColumnsPrefix;\n\n    if (columns.sql.length > 0) {\n      this.pushQuery({\n        sql:\n          (this.lowerCase ? 'alter table ' : 'ALTER TABLE ') +\n          this.tableName() +\n          ' ' +\n          prefix +\n          columns.sql.join(', '),\n        bindings: columns.bindings,\n      });\n    }\n  }\n\n  alterColumns(columns, colBuilder) {\n    for (let i = 0, l = colBuilder.length; i < l; i++) {\n      const builder = colBuilder[i];\n      if (builder.modified.defaultTo) {\n        const schema = this.schemaNameRaw || 'dbo';\n        const baseQuery = `\n              DECLARE @constraint varchar(100) = (SELECT default_constraints.name\n                                                  FROM sys.all_columns\n                                                  INNER JOIN sys.tables\n                                                    ON all_columns.object_id = tables.object_id\n                                                  INNER JOIN sys.schemas\n                                                    ON tables.schema_id = schemas.schema_id\n                                                  INNER JOIN sys.default_constraints\n                                                    ON all_columns.default_object_id = default_constraints.object_id\n                                                  WHERE schemas.name = '${schema}'\n                                                  AND tables.name = '${\n                                                    this.tableNameRaw\n                                                  }'\n                                                  AND all_columns.name = '${builder.getColumnName()}')\n\n              IF @constraint IS NOT NULL EXEC('ALTER TABLE ${\n                this.tableNameRaw\n              } DROP CONSTRAINT ' + @constraint)`;\n        this.pushQuery(baseQuery);\n      }\n    }\n    // in SQL server only one column can be altered at a time\n    columns.sql.forEach((sql) => {\n      this.pushQuery({\n        sql:\n          (this.lowerCase ? 'alter table ' : 'ALTER TABLE ') +\n          this.tableName() +\n          ' ' +\n          (this.lowerCase\n            ? this.alterColumnPrefix.toLowerCase()\n            : this.alterColumnPrefix) +\n          sql,\n        bindings: columns.bindings,\n      });\n    });\n  }\n\n  // Compiles column drop.  Multiple columns need only one DROP clause (not one DROP per column) so core dropColumn doesn't work.  #1348\n  dropColumn() {\n    const _this2 = this;\n    const columns = helpers.normalizeArr.apply(null, arguments);\n    const columnsArray = Array.isArray(columns) ? columns : [columns];\n    const drops = columnsArray.map((column) => _this2.formatter.wrap(column));\n    const schema = this.schemaNameRaw || 'dbo';\n\n    for (const column of columns) {\n      const baseQuery = `\n              DECLARE @constraint varchar(100) = (SELECT default_constraints.name\n                                                  FROM sys.all_columns\n                                                  INNER JOIN sys.tables\n                                                    ON all_columns.object_id = tables.object_id\n                                                  INNER JOIN sys.schemas\n                                                    ON tables.schema_id = schemas.schema_id\n                                                  INNER JOIN sys.default_constraints\n                                                    ON all_columns.default_object_id = default_constraints.object_id\n                                                  WHERE schemas.name = '${schema}'\n                                                  AND tables.name = '${this.tableNameRaw}'\n                                                  AND all_columns.name = '${column}')\n\n              IF @constraint IS NOT NULL EXEC('ALTER TABLE ${this.tableNameRaw} DROP CONSTRAINT ' + @constraint)`;\n      this.pushQuery(baseQuery);\n    }\n    this.pushQuery(\n      (this.lowerCase ? 'alter table ' : 'ALTER TABLE ') +\n        this.tableName() +\n        ' ' +\n        this.dropColumnPrefix +\n        drops.join(', ')\n    );\n  }\n\n  changeType() {}\n\n  // Renames a column on the table.\n  renameColumn(from, to) {\n    this.pushQuery(\n      `exec sp_rename ${this.client.parameter(\n        this.tableName() + '.' + from,\n        this.tableBuilder,\n        this.bindingsHolder\n      )}, ${this.client.parameter(\n        to,\n        this.tableBuilder,\n        this.bindingsHolder\n      )}, 'COLUMN'`\n    );\n  }\n\n  dropFKRefs(runner, refs) {\n    const formatter = this.client.formatter(this.tableBuilder);\n    return Promise.all(\n      refs.map(function (ref) {\n        const constraintName = formatter.wrap(ref.CONSTRAINT_NAME);\n        const tableName = formatter.wrap(ref.TABLE_NAME);\n        return runner.query({\n          sql: `ALTER TABLE ${tableName} DROP CONSTRAINT ${constraintName}`,\n        });\n      })\n    );\n  }\n\n  createFKRefs(runner, refs) {\n    const formatter = this.client.formatter(this.tableBuilder);\n\n    return Promise.all(\n      refs.map(function (ref) {\n        const tableName = formatter.wrap(ref.TABLE_NAME);\n        const keyName = formatter.wrap(ref.CONSTRAINT_NAME);\n        const column = formatter.columnize(ref.COLUMN_NAME);\n        const references = formatter.columnize(ref.REFERENCED_COLUMN_NAME);\n        const inTable = formatter.wrap(ref.REFERENCED_TABLE_NAME);\n        const onUpdate = ` ON UPDATE ${ref.UPDATE_RULE}`;\n        const onDelete = ` ON DELETE ${ref.DELETE_RULE}`;\n\n        return runner.query({\n          sql:\n            `ALTER TABLE ${tableName} ADD CONSTRAINT ${keyName}` +\n            ' FOREIGN KEY (' +\n            column +\n            ') REFERENCES ' +\n            inTable +\n            ' (' +\n            references +\n            ')' +\n            onUpdate +\n            onDelete,\n        });\n      })\n    );\n  }\n\n  index(columns, indexName, options) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('index', this.tableNameRaw, columns);\n\n    let predicate;\n    if (isObject(options)) {\n      ({ predicate } = options);\n    }\n    const predicateQuery = predicate\n      ? ' ' + this.client.queryCompiler(predicate).where()\n      : '';\n    this.pushQuery(\n      `CREATE INDEX ${indexName} ON ${this.tableName()} (${this.formatter.columnize(\n        columns\n      )})${predicateQuery}`\n    );\n  }\n\n  /**\n   * Create a primary key.\n   *\n   * @param {undefined | string | string[]} columns\n   * @param {string | {constraintName: string, deferrable?: 'not deferrable'|'deferred'|'immediate' }} constraintName\n   */\n  primary(columns, constraintName) {\n    let deferrable;\n    if (isObject(constraintName)) {\n      ({ constraintName, deferrable } = constraintName);\n    }\n    if (deferrable && deferrable !== 'not deferrable') {\n      this.client.logger.warn(\n        `mssql: primary key constraint [${constraintName}] will not be deferrable ${deferrable} because mssql does not support deferred constraints.`\n      );\n    }\n    constraintName = constraintName\n      ? this.formatter.wrap(constraintName)\n      : this.formatter.wrap(`${this.tableNameRaw}_pkey`);\n    if (!this.forCreate) {\n      this.pushQuery(\n        `ALTER TABLE ${this.tableName()} ADD CONSTRAINT ${constraintName} PRIMARY KEY (${this.formatter.columnize(\n          columns\n        )})`\n      );\n    } else {\n      this.pushQuery(\n        `CONSTRAINT ${constraintName} PRIMARY KEY (${this.formatter.columnize(\n          columns\n        )})`\n      );\n    }\n  }\n\n  /**\n   * Create a unique index.\n   *\n   * @param {string | string[]} columns\n   * @param {string | {indexName: undefined | string, deferrable?: 'not deferrable'|'deferred'|'immediate', useConstraint?: true|false, predicate?: QueryBuilder }} indexName\n   */\n  unique(columns, indexName) {\n    /** @type {string | undefined} */\n    let deferrable;\n    let useConstraint = false;\n    let predicate;\n    if (isObject(indexName)) {\n      ({ indexName, deferrable, useConstraint, predicate } = indexName);\n    }\n    if (deferrable && deferrable !== 'not deferrable') {\n      this.client.logger.warn(\n        `mssql: unique index [${indexName}] will not be deferrable ${deferrable} because mssql does not support deferred constraints.`\n      );\n    }\n    if (useConstraint && predicate) {\n      throw new Error('mssql cannot create constraint with predicate');\n    }\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('unique', this.tableNameRaw, columns);\n\n    if (!Array.isArray(columns)) {\n      columns = [columns];\n    }\n\n    if (useConstraint) {\n      // mssql supports unique indexes and unique constraints.\n      // unique indexes cannot be used with foreign key relationships hence unique constraints are used instead.\n      this.pushQuery(\n        `ALTER TABLE ${this.tableName()} ADD CONSTRAINT ${indexName} UNIQUE (${this.formatter.columnize(\n          columns\n        )})`\n      );\n    } else {\n      // default to making unique index that allows null https://stackoverflow.com/a/767702/360060\n      // to be more or less compatible with other DBs (if any of the columns is NULL then \"duplicates\" are allowed)\n      const predicateQuery = predicate\n        ? ' ' + this.client.queryCompiler(predicate).where()\n        : ' WHERE ' +\n          columns\n            .map((column) => this.formatter.columnize(column) + ' IS NOT NULL')\n            .join(' AND ');\n      this.pushQuery(\n        `CREATE UNIQUE INDEX ${indexName} ON ${this.tableName()} (${this.formatter.columnize(\n          columns\n        )})${predicateQuery}`\n      );\n    }\n  }\n\n  // Compile a drop index command.\n  dropIndex(columns, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('index', this.tableNameRaw, columns);\n    this.pushQuery(`DROP INDEX ${indexName} ON ${this.tableName()}`);\n  }\n\n  // Compile a drop foreign key command.\n  dropForeign(columns, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('foreign', this.tableNameRaw, columns);\n    this.pushQuery(\n      `ALTER TABLE ${this.tableName()} DROP CONSTRAINT ${indexName}`\n    );\n  }\n\n  // Compile a drop primary key command.\n  dropPrimary(constraintName) {\n    constraintName = constraintName\n      ? this.formatter.wrap(constraintName)\n      : this.formatter.wrap(`${this.tableNameRaw}_pkey`);\n    this.pushQuery(\n      `ALTER TABLE ${this.tableName()} DROP CONSTRAINT ${constraintName}`\n    );\n  }\n\n  // Compile a drop unique key command.\n  dropUnique(column, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('unique', this.tableNameRaw, column);\n    this.pushQuery(`DROP INDEX ${indexName} ON ${this.tableName()}`);\n  }\n}\n\nTableCompiler_MSSQL.prototype.createAlterTableMethods = ['foreign', 'primary'];\nTableCompiler_MSSQL.prototype.lowerCase = false;\n\nTableCompiler_MSSQL.prototype.addColumnsPrefix = 'ADD ';\nTableCompiler_MSSQL.prototype.dropColumnPrefix = 'DROP COLUMN ';\nTableCompiler_MSSQL.prototype.alterColumnPrefix = 'ALTER COLUMN ';\n\nmodule.exports = TableCompiler_MSSQL;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12922, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/mssql/schema/mssql-viewcompiler.js"],"sourcesContent":["/* eslint max-len: 0 */\n\nconst ViewCompiler = require('../../../schema/viewcompiler.js');\nconst {\n  columnize: columnize_,\n} = require('../../../formatter/wrappingFormatter');\n\nclass ViewCompiler_MSSQL extends ViewCompiler {\n  constructor(client, viewCompiler) {\n    super(client, viewCompiler);\n  }\n\n  createQuery(columns, selectQuery, materialized, replace) {\n    const createStatement = 'CREATE ' + (replace ? 'OR ALTER ' : '') + 'VIEW ';\n    let sql = createStatement + this.viewName();\n\n    const columnList = columns\n      ? ' (' +\n        columnize_(\n          columns,\n          this.viewBuilder,\n          this.client,\n          this.bindingsHolder\n        ) +\n        ')'\n      : '';\n\n    sql += columnList;\n    sql += ' AS ';\n    sql += selectQuery.toString();\n    this.pushQuery({\n      sql,\n    });\n  }\n\n  renameColumn(from, to) {\n    this.pushQuery(\n      `exec sp_rename ${this.client.parameter(\n        this.viewName() + '.' + from,\n        this.viewBuilder,\n        this.bindingsHolder\n      )}, ${this.client.parameter(\n        to,\n        this.viewBuilder,\n        this.bindingsHolder\n      )}, 'COLUMN'`\n    );\n  }\n\n  createOrReplace() {\n    this.createQuery(this.columns, this.selectQuery, false, true);\n  }\n}\n\nmodule.exports = ViewCompiler_MSSQL;\n"],"names":[],"mappings":"AAAA,qBAAqB,GAErB,MAAM;AACN,MAAM,EACJ,WAAW,UAAU,EACtB;AAED,MAAM,2BAA2B;IAC/B,YAAY,MAAM,EAAE,YAAY,CAAE;QAChC,KAAK,CAAC,QAAQ;IAChB;IAEA,YAAY,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,OAAO,EAAE;QACvD,MAAM,kBAAkB,YAAY,CAAC,UAAU,cAAc,EAAE,IAAI;QACnE,IAAI,MAAM,kBAAkB,IAAI,CAAC,QAAQ;QAEzC,MAAM,aAAa,UACf,OACA,WACE,SACA,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,cAAc,IAErB,MACA;QAEJ,OAAO;QACP,OAAO;QACP,OAAO,YAAY,QAAQ;QAC3B,IAAI,CAAC,SAAS,CAAC;YACb;QACF;IACF;IAEA,aAAa,IAAI,EAAE,EAAE,EAAE;QACrB,IAAI,CAAC,SAAS,CACZ,CAAC,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CACrC,IAAI,CAAC,QAAQ,KAAK,MAAM,MACxB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,cAAc,EACnB,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CACzB,IACA,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,cAAc,EACnB,UAAU,CAAC;IAEjB;IAEA,kBAAkB;QAChB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,OAAO;IAC1D;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12952, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/mssql/schema/mssql-columncompiler.js"],"sourcesContent":["// MSSQL Column Compiler\n// -------\nconst ColumnCompiler = require('../../../schema/columncompiler');\nconst { toNumber } = require('../../../util/helpers');\nconst { formatDefault } = require('../../../formatter/formatterUtils');\nconst { operator: operator_ } = require('../../../formatter/wrappingFormatter');\n\nclass ColumnCompiler_MSSQL extends ColumnCompiler {\n  constructor(client, tableCompiler, columnBuilder) {\n    super(client, tableCompiler, columnBuilder);\n    this.modifiers = ['nullable', 'defaultTo', 'first', 'after', 'comment'];\n    this._addCheckModifiers();\n  }\n\n  // Types\n  // ------\n\n  double(precision, scale) {\n    return 'float';\n  }\n\n  floating(precision, scale) {\n    // ignore precicion / scale which is mysql specific stuff\n    return `float`;\n  }\n\n  integer() {\n    // mssql does not support length\n    return 'int';\n  }\n\n  tinyint() {\n    // mssql does not support length\n    return 'tinyint';\n  }\n\n  varchar(length) {\n    return `nvarchar(${toNumber(length, 255)})`;\n  }\n\n  timestamp({ useTz = false } = {}) {\n    return useTz ? 'datetimeoffset' : 'datetime2';\n  }\n\n  bit(length) {\n    if (length > 1) {\n      this.client.logger.warn('Bit field is exactly 1 bit length for MSSQL');\n    }\n    return 'bit';\n  }\n\n  binary(length) {\n    return length ? `varbinary(${toNumber(length)})` : 'varbinary(max)';\n  }\n\n  // Modifiers\n  // ------\n\n  first() {\n    this.client.logger.warn('Column first modifier not available for MSSQL');\n    return '';\n  }\n\n  after(column) {\n    this.client.logger.warn('Column after modifier not available for MSSQL');\n    return '';\n  }\n\n  defaultTo(value, { constraintName } = {}) {\n    const formattedValue = formatDefault(value, this.type, this.client);\n    constraintName =\n      typeof constraintName !== 'undefined'\n        ? constraintName\n        : `${\n            this.tableCompiler.tableNameRaw\n          }_${this.getColumnName()}_default`.toLowerCase();\n    if (this.columnBuilder._method === 'alter') {\n      this.pushAdditional(function () {\n        this.pushQuery(\n          `ALTER TABLE ${this.tableCompiler.tableName()} ADD CONSTRAINT ${this.formatter.wrap(\n            constraintName\n          )} DEFAULT ${formattedValue} FOR ${this.formatter.wrap(\n            this.getColumnName()\n          )}`\n        );\n      });\n      return '';\n    }\n    if (!constraintName) {\n      return `DEFAULT ${formattedValue}`;\n    }\n    return `CONSTRAINT ${this.formatter.wrap(\n      constraintName\n    )} DEFAULT ${formattedValue}`;\n  }\n\n  comment(/** @type {string} */ comment) {\n    if (!comment) {\n      return;\n    }\n\n    // XXX: This is a byte limit, not character, so we cannot definitively say they'll exceed the limit without database collation info.\n    // (Yes, even if the column has its own collation, the sqlvariant still uses the database collation.)\n    // I'm not sure we even need to raise a warning, as MSSQL will return an error when the limit is exceeded itself.\n    if (comment && comment.length > 7500 / 2) {\n      this.client.logger.warn(\n        'Your comment might be longer than the max comment length for MSSQL of 7,500 bytes.'\n      );\n    }\n\n    // See: https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-addextendedproperty-transact-sql?view=sql-server-ver15#b-adding-an-extended-property-to-a-column-in-a-table\n    const value = this.formatter.escapingStringDelimiters(comment);\n    const level0name = this.tableCompiler.schemaNameRaw || 'dbo';\n    const level1name = this.formatter.escapingStringDelimiters(\n      this.tableCompiler.tableNameRaw\n    );\n    const level2name = this.formatter.escapingStringDelimiters(\n      this.args[0] || this.defaults('columnName')\n    );\n\n    const args = `N'MS_Description', N'${value}', N'Schema', N'${level0name}', N'Table', N'${level1name}', N'Column', N'${level2name}'`;\n\n    this.pushAdditional(function () {\n      const isAlreadyDefined = `EXISTS(SELECT * FROM sys.fn_listextendedproperty(N'MS_Description', N'Schema', N'${level0name}', N'Table', N'${level1name}', N'Column', N'${level2name}'))`;\n      this.pushQuery(\n        `IF ${isAlreadyDefined}\\n  EXEC sys.sp_updateextendedproperty ${args}\\nELSE\\n  EXEC sys.sp_addextendedproperty ${args}`\n      );\n    });\n    return '';\n  }\n\n  checkLength(operator, length, constraintName) {\n    return this._check(\n      `LEN(${this.formatter.wrap(this.getColumnName())}) ${operator_(\n        operator,\n        this.columnBuilder,\n        this.bindingsHolder\n      )} ${toNumber(length)}`,\n      constraintName\n    );\n  }\n\n  checkRegex(regex, constraintName) {\n    return this._check(\n      `${this.formatter.wrap(\n        this.getColumnName()\n      )} LIKE ${this.client._escapeBinding('%' + regex + '%')}`,\n      constraintName\n    );\n  }\n\n  increments(options = { primaryKey: true }) {\n    return (\n      'int identity(1,1) not null' +\n      (this.tableCompiler._canBeAddPrimaryKey(options) ? ' primary key' : '')\n    );\n  }\n\n  bigincrements(options = { primaryKey: true }) {\n    return (\n      'bigint identity(1,1) not null' +\n      (this.tableCompiler._canBeAddPrimaryKey(options) ? ' primary key' : '')\n    );\n  }\n}\n\nColumnCompiler_MSSQL.prototype.bigint = 'bigint';\nColumnCompiler_MSSQL.prototype.mediumint = 'int';\nColumnCompiler_MSSQL.prototype.smallint = 'smallint';\nColumnCompiler_MSSQL.prototype.text = 'nvarchar(max)';\nColumnCompiler_MSSQL.prototype.mediumtext = 'nvarchar(max)';\nColumnCompiler_MSSQL.prototype.longtext = 'nvarchar(max)';\nColumnCompiler_MSSQL.prototype.json = ColumnCompiler_MSSQL.prototype.jsonb =\n  'nvarchar(max)';\n\n// TODO: mssql supports check constraints as of SQL Server 2008\n// so make enu here more like postgres\nColumnCompiler_MSSQL.prototype.enu = 'nvarchar(100)';\nColumnCompiler_MSSQL.prototype.uuid = ({ useBinaryUuid = false } = {}) =>\n  useBinaryUuid ? 'binary(16)' : 'uniqueidentifier';\n\nColumnCompiler_MSSQL.prototype.datetime = 'datetime2';\nColumnCompiler_MSSQL.prototype.bool = 'bit';\n\nmodule.exports = ColumnCompiler_MSSQL;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 13084, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/mssql/index.js"],"sourcesContent":["// MSSQL Client\n// -------\nconst map = require('lodash/map');\nconst isNil = require('lodash/isNil');\n\nconst Client = require('../../client');\nconst MSSQL_Formatter = require('./mssql-formatter');\nconst Transaction = require('./transaction');\nconst QueryCompiler = require('./query/mssql-querycompiler');\nconst SchemaCompiler = require('./schema/mssql-compiler');\nconst TableCompiler = require('./schema/mssql-tablecompiler');\nconst ViewCompiler = require('./schema/mssql-viewcompiler');\nconst ColumnCompiler = require('./schema/mssql-columncompiler');\nconst QueryBuilder = require('../../query/querybuilder');\nconst { setHiddenProperty } = require('../../util/security');\n\nconst debug = require('debug')('knex:mssql');\n\nconst SQL_INT4 = { MIN: -2147483648, MAX: 2147483647 };\nconst SQL_BIGINT_SAFE = { MIN: -9007199254740991, MAX: 9007199254740991 };\n\n// Always initialize with the \"QueryBuilder\" and \"QueryCompiler\" objects, which\n// extend the base 'lib/query/builder' and 'lib/query/compiler', respectively.\nclass Client_MSSQL extends Client {\n  constructor(config = {}) {\n    super(config);\n  }\n\n  /**\n   * @param {import('knex').Config} options\n   */\n  _generateConnection() {\n    const settings = this.connectionSettings;\n    settings.options = settings.options || {};\n\n    /** @type {import('tedious').ConnectionConfig} */\n    const cfg = {\n      authentication: {\n        type: settings.type || 'default',\n        options: {\n          userName: settings.userName || settings.user,\n          password: settings.password,\n          domain: settings.domain,\n          token: settings.token,\n          clientId: settings.clientId,\n          clientSecret: settings.clientSecret,\n          tenantId: settings.tenantId,\n          msiEndpoint: settings.msiEndpoint,\n        },\n      },\n      server: settings.server || settings.host,\n      options: {\n        database: settings.database,\n        encrypt: settings.encrypt || false,\n        port: settings.port || 1433,\n        connectTimeout: settings.connectionTimeout || settings.timeout || 15000,\n        requestTimeout: !isNil(settings.requestTimeout)\n          ? settings.requestTimeout\n          : 15000,\n        rowCollectionOnDone: false,\n        rowCollectionOnRequestCompletion: false,\n        useColumnNames: false,\n        tdsVersion: settings.options.tdsVersion || '7_4',\n        appName: settings.options.appName || 'knex',\n        trustServerCertificate: false,\n        ...settings.options,\n      },\n    };\n\n    if (cfg.authentication.options.password) {\n      setHiddenProperty(cfg.authentication.options);\n    }\n\n    // tedious always connect via tcp when port is specified\n    if (cfg.options.instanceName) delete cfg.options.port;\n\n    if (isNaN(cfg.options.requestTimeout)) cfg.options.requestTimeout = 15000;\n    if (cfg.options.requestTimeout === Infinity) cfg.options.requestTimeout = 0;\n    if (cfg.options.requestTimeout < 0) cfg.options.requestTimeout = 0;\n\n    if (settings.debug) {\n      cfg.options.debug = {\n        packet: true,\n        token: true,\n        data: true,\n        payload: true,\n      };\n    }\n\n    return cfg;\n  }\n\n  _driver() {\n    const tds = require('tedious');\n\n    return tds;\n  }\n\n  formatter() {\n    return new MSSQL_Formatter(this, ...arguments);\n  }\n\n  transaction() {\n    return new Transaction(this, ...arguments);\n  }\n\n  queryCompiler() {\n    return new QueryCompiler(this, ...arguments);\n  }\n\n  schemaCompiler() {\n    return new SchemaCompiler(this, ...arguments);\n  }\n\n  tableCompiler() {\n    return new TableCompiler(this, ...arguments);\n  }\n\n  viewCompiler() {\n    return new ViewCompiler(this, ...arguments);\n  }\n  queryBuilder() {\n    const b = new QueryBuilder(this);\n    return b;\n  }\n\n  columnCompiler() {\n    return new ColumnCompiler(this, ...arguments);\n  }\n\n  wrapIdentifierImpl(value) {\n    if (value === '*') {\n      return '*';\n    }\n\n    return `[${value.replace(/[[\\]]+/g, '')}]`;\n  }\n\n  // Get a raw connection, called by the `pool` whenever a new\n  // connection needs to be added to the pool.\n  acquireRawConnection() {\n    return new Promise((resolver, rejecter) => {\n      debug('connection::connection new connection requested');\n      const Driver = this._driver();\n      const settings = Object.assign({}, this._generateConnection());\n\n      const connection = new Driver.Connection(settings);\n\n      connection.connect((err) => {\n        if (err) {\n          debug('connection::connect error: %s', err.message);\n          return rejecter(err);\n        }\n\n        debug('connection::connect connected to server');\n\n        connection.connected = true;\n        connection.on('error', (e) => {\n          debug('connection::error message=%s', e.message);\n          connection.__knex__disposed = e;\n          connection.connected = false;\n        });\n\n        connection.once('end', () => {\n          connection.connected = false;\n          connection.__knex__disposed = 'Connection to server was terminated.';\n          debug('connection::end connection ended.');\n        });\n\n        return resolver(connection);\n      });\n    });\n  }\n\n  validateConnection(connection) {\n    return connection && connection.connected;\n  }\n\n  // Used to explicitly close a connection, called internally by the pool\n  // when a connection times out or the pool is shutdown.\n  destroyRawConnection(connection) {\n    debug('connection::destroy');\n\n    return new Promise((resolve) => {\n      connection.once('end', () => {\n        resolve();\n      });\n\n      connection.close();\n    });\n  }\n\n  // Position the bindings for the query.\n  positionBindings(sql) {\n    let questionCount = -1;\n    return sql.replace(/\\\\?\\?/g, (match) => {\n      if (match === '\\\\?') {\n        return '?';\n      }\n\n      questionCount += 1;\n      return `@p${questionCount}`;\n    });\n  }\n\n  _chomp(connection) {\n    if (connection.state.name === 'LoggedIn') {\n      const nextRequest = this.requestQueue.pop();\n      if (nextRequest) {\n        debug(\n          'connection::query executing query, %d more in queue',\n          this.requestQueue.length\n        );\n\n        connection.execSql(nextRequest);\n      }\n    }\n  }\n\n  _enqueueRequest(request, connection) {\n    this.requestQueue.push(request);\n    this._chomp(connection);\n  }\n\n  _makeRequest(query, callback) {\n    const Driver = this._driver();\n    const sql = typeof query === 'string' ? query : query.sql;\n    let rowCount = 0;\n\n    if (!sql) throw new Error('The query is empty');\n\n    debug('request::request sql=%s', sql);\n\n    const request = new Driver.Request(sql, (err, remoteRowCount) => {\n      if (err) {\n        debug('request::error message=%s', err.message);\n        return callback(err);\n      }\n\n      rowCount = remoteRowCount;\n      debug('request::callback rowCount=%d', rowCount);\n    });\n\n    request.on('prepared', () => {\n      debug('request %s::request prepared', this.id);\n    });\n\n    request.on('done', (rowCount, more) => {\n      debug('request::done rowCount=%d more=%s', rowCount, more);\n    });\n\n    request.on('doneProc', (rowCount, more) => {\n      debug(\n        'request::doneProc id=%s rowCount=%d more=%s',\n        request.id,\n        rowCount,\n        more\n      );\n    });\n\n    request.on('doneInProc', (rowCount, more) => {\n      debug(\n        'request::doneInProc id=%s rowCount=%d more=%s',\n        request.id,\n        rowCount,\n        more\n      );\n    });\n\n    request.once('requestCompleted', () => {\n      debug('request::completed id=%s', request.id);\n      return callback(null, rowCount);\n    });\n\n    request.on('error', (err) => {\n      debug('request::error id=%s message=%s', request.id, err.message);\n      return callback(err);\n    });\n\n    return request;\n  }\n\n  // Grab a connection, run the query via the MSSQL streaming interface,\n  // and pass that through to the stream we've sent back to the client.\n  _stream(connection, query, /** @type {NodeJS.ReadWriteStream} */ stream) {\n    return new Promise((resolve, reject) => {\n      const request = this._makeRequest(query, (err) => {\n        if (err) {\n          stream.emit('error', err);\n          return reject(err);\n        }\n\n        resolve();\n      });\n\n      request.on('row', (row) => {\n        stream.write(\n          row.reduce(\n            (prev, curr) => ({\n              ...prev,\n              [curr.metadata.colName]: curr.value,\n            }),\n            {}\n          )\n        );\n      });\n      request.on('error', (err) => {\n        stream.emit('error', err);\n        reject(err);\n      });\n      request.once('requestCompleted', () => {\n        stream.end();\n        resolve();\n      });\n\n      this._assignBindings(request, query.bindings);\n      this._enqueueRequest(request, connection);\n    });\n  }\n\n  _assignBindings(request, bindings) {\n    if (Array.isArray(bindings)) {\n      for (let i = 0; i < bindings.length; i++) {\n        const binding = bindings[i];\n        this._setReqInput(request, i, binding);\n      }\n    }\n  }\n\n  _scaleForBinding(binding) {\n    if (binding % 1 === 0) {\n      throw new Error(`The binding value ${binding} must be a decimal number.`);\n    }\n\n    return { scale: 10 };\n  }\n\n  _typeForBinding(binding) {\n    const Driver = this._driver();\n\n    if (\n      this.connectionSettings.options &&\n      this.connectionSettings.options.mapBinding\n    ) {\n      const result = this.connectionSettings.options.mapBinding(binding);\n      if (result) {\n        return [result.value, result.type];\n      }\n    }\n\n    switch (typeof binding) {\n      case 'string':\n        return [binding, Driver.TYPES.NVarChar];\n      case 'boolean':\n        return [binding, Driver.TYPES.Bit];\n      case 'number': {\n        if (binding % 1 !== 0) {\n          return [binding, Driver.TYPES.Float];\n        }\n\n        if (binding < SQL_INT4.MIN || binding > SQL_INT4.MAX) {\n          if (binding < SQL_BIGINT_SAFE.MIN || binding > SQL_BIGINT_SAFE.MAX) {\n            throw new Error(\n              `Bigint must be safe integer or must be passed as string, saw ${binding}`\n            );\n          }\n\n          return [binding, Driver.TYPES.BigInt];\n        }\n\n        return [binding, Driver.TYPES.Int];\n      }\n      default: {\n        if (binding instanceof Date) {\n          return [binding, Driver.TYPES.DateTime];\n        }\n\n        if (binding instanceof Buffer) {\n          return [binding, Driver.TYPES.VarBinary];\n        }\n\n        return [binding, Driver.TYPES.NVarChar];\n      }\n    }\n  }\n\n  // Runs the query on the specified connection, providing the bindings\n  // and any other necessary prep work.\n  _query(connection, query) {\n    return new Promise((resolve, reject) => {\n      const rows = [];\n      const request = this._makeRequest(query, (err, count) => {\n        if (err) {\n          return reject(err);\n        }\n\n        query.response = rows;\n\n        process.nextTick(() => this._chomp(connection));\n\n        resolve(query);\n      });\n\n      request.on('row', (row) => {\n        debug('request::row');\n        rows.push(row);\n      });\n\n      this._assignBindings(request, query.bindings);\n      this._enqueueRequest(request, connection);\n    });\n  }\n\n  // sets a request input parameter. Detects bigints and decimals and sets type appropriately.\n  _setReqInput(req, i, inputBinding) {\n    const [binding, tediousType] = this._typeForBinding(inputBinding);\n    const bindingName = 'p'.concat(i);\n    let options;\n\n    if (typeof binding === 'number' && binding % 1 !== 0) {\n      options = this._scaleForBinding(binding);\n    }\n\n    debug(\n      'request::binding pos=%d type=%s value=%s',\n      i,\n      tediousType.name,\n      binding\n    );\n\n    if (Buffer.isBuffer(binding)) {\n      options = {\n        length: 'max',\n      };\n    }\n\n    req.addParameter(bindingName, tediousType, binding, options);\n  }\n\n  // Process the response as returned from the query.\n  processResponse(query, runner) {\n    if (query == null) return;\n    let { response } = query;\n    const { method } = query;\n\n    if (query.output) {\n      return query.output.call(runner, response);\n    }\n\n    response = response.map((row) =>\n      row.reduce((columns, r) => {\n        const colName = r.metadata.colName;\n\n        if (columns[colName]) {\n          if (!Array.isArray(columns[colName])) {\n            columns[colName] = [columns[colName]];\n          }\n\n          columns[colName].push(r.value);\n        } else {\n          columns[colName] = r.value;\n        }\n\n        return columns;\n      }, {})\n    );\n\n    if (query.output) return query.output.call(runner, response);\n    switch (method) {\n      case 'select':\n        return response;\n      case 'first':\n        return response[0];\n      case 'pluck':\n        return map(response, query.pluck);\n      case 'insert':\n      case 'del':\n      case 'update':\n      case 'counter':\n        if (query.returning) {\n          if (query.returning === '@@rowcount') {\n            return response[0][''];\n          }\n        }\n        return response;\n      default:\n        return response;\n    }\n  }\n}\n\nObject.assign(Client_MSSQL.prototype, {\n  requestQueue: [],\n\n  dialect: 'mssql',\n\n  driverName: 'mssql',\n});\n\nmodule.exports = Client_MSSQL;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 13511, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/mysql/transaction.js"],"sourcesContent":["const Transaction = require('../../execution/transaction');\nconst Debug = require('debug');\n\nconst debug = Debug('knex:tx');\n\nclass Transaction_MySQL extends Transaction {\n  query(conn, sql, status, value) {\n    const t = this;\n    const q = this.trxClient\n      .query(conn, sql)\n      .catch((err) => {\n        if (err.errno === 1305) {\n          this.trxClient.logger.warn(\n            'Transaction was implicitly committed, do not mix transactions and ' +\n              'DDL with MySQL (#805)'\n          );\n          return;\n        }\n\n        status = 2;\n        value = err;\n        t._completed = true;\n        debug('%s error running transaction query', t.txid);\n      })\n      .then(function (res) {\n        if (status === 1) t._resolver(value);\n        if (status === 2) {\n          if (value === undefined) {\n            if (t.doNotRejectOnRollback && /^ROLLBACK\\b/i.test(sql)) {\n              t._resolver();\n              return;\n            }\n            value = new Error(`Transaction rejected with non-error: ${value}`);\n          }\n          t._rejecter(value);\n        }\n        return res;\n      });\n    if (status === 1 || status === 2) {\n      t._completed = true;\n    }\n    return q;\n  }\n}\n\nmodule.exports = Transaction_MySQL;\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AAEN,MAAM,QAAQ,MAAM;AAEpB,MAAM,0BAA0B;IAC9B,MAAM,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE;QAC9B,MAAM,IAAI,IAAI;QACd,MAAM,IAAI,IAAI,CAAC,SAAS,CACrB,KAAK,CAAC,MAAM,KACZ,KAAK,CAAC,CAAC;YACN,IAAI,IAAI,KAAK,KAAK,MAAM;gBACtB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CACxB,uEACE;gBAEJ;YACF;YAEA,SAAS;YACT,QAAQ;YACR,EAAE,UAAU,GAAG;YACf,MAAM,sCAAsC,EAAE,IAAI;QACpD,GACC,IAAI,CAAC,SAAU,GAAG;YACjB,IAAI,WAAW,GAAG,EAAE,SAAS,CAAC;YAC9B,IAAI,WAAW,GAAG;gBAChB,IAAI,UAAU,WAAW;oBACvB,IAAI,EAAE,qBAAqB,IAAI,eAAe,IAAI,CAAC,MAAM;wBACvD,EAAE,SAAS;wBACX;oBACF;oBACA,QAAQ,IAAI,MAAM,CAAC,qCAAqC,EAAE,OAAO;gBACnE;gBACA,EAAE,SAAS,CAAC;YACd;YACA,OAAO;QACT;QACF,IAAI,WAAW,KAAK,WAAW,GAAG;YAChC,EAAE,UAAU,GAAG;QACjB;QACA,OAAO;IACT;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 13552, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/mysql/query/mysql-querybuilder.js"],"sourcesContent":["const QueryBuilder = require('../../../query/querybuilder');\nconst isEmpty = require('lodash/isEmpty');\n\nmodule.exports = class QueryBuilder_MySQL extends QueryBuilder {\n  upsert(values, returning, options) {\n    this._method = 'upsert';\n    if (!isEmpty(returning)) {\n      this.returning(returning, options);\n    }\n\n    this._single.upsert = values;\n    return this;\n  }\n};\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AAEN,OAAO,OAAO,GAAG,MAAM,2BAA2B;IAChD,OAAO,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE;QACjC,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,QAAQ,YAAY;YACvB,IAAI,CAAC,SAAS,CAAC,WAAW;QAC5B;QAEA,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG;QACtB,OAAO,IAAI;IACb;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 13569, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/mysql/query/mysql-querycompiler.js"],"sourcesContent":["// MySQL Query Compiler\n// ------\nconst assert = require('assert');\nconst identity = require('lodash/identity');\nconst isPlainObject = require('lodash/isPlainObject');\nconst isEmpty = require('lodash/isEmpty');\nconst QueryCompiler = require('../../../query/querycompiler');\nconst { wrapAsIdentifier } = require('../../../formatter/formatterUtils');\nconst {\n  columnize: columnize_,\n  wrap: wrap_,\n} = require('../../../formatter/wrappingFormatter');\n\nconst isPlainObjectOrArray = (value) =>\n  isPlainObject(value) || Array.isArray(value);\n\nclass QueryCompiler_MySQL extends QueryCompiler {\n  constructor(client, builder, formatter) {\n    super(client, builder, formatter);\n\n    const { returning } = this.single;\n    if (returning) {\n      this.client.logger.warn(\n        '.returning() is not supported by mysql and will not have any effect.'\n      );\n    }\n\n    this._emptyInsertValue = '() values ()';\n  }\n  // Compiles an `delete` allowing comments\n  del() {\n    const sql = super.del();\n    if (sql === '') return sql;\n    const comments = this.comments();\n    return (comments === '' ? '' : comments + ' ') + sql;\n  }\n\n  // Compiles an `insert` query, allowing for multiple\n  // inserts using a single query statement.\n  insert() {\n    let sql = super.insert();\n    if (sql === '') return sql;\n    const comments = this.comments();\n    sql = (comments === '' ? '' : comments + ' ') + sql;\n\n    const { ignore, merge, insert } = this.single;\n    if (ignore) sql = sql.replace('insert into', 'insert ignore into');\n    if (merge) {\n      sql += this._merge(merge.updates, insert);\n      const wheres = this.where();\n      if (wheres) {\n        throw new Error(\n          '.onConflict().merge().where() is not supported for mysql'\n        );\n      }\n    }\n\n    return sql;\n  }\n\n  upsert() {\n    const upsertValues = this.single.upsert || [];\n    const sql = this.with() + `replace into ${this.tableName} `;\n    const body = this._insertBody(upsertValues);\n    return body === '' ? '' : sql + body;\n  }\n\n  // Compiles merge for onConflict, allowing for different merge strategies\n  _merge(updates, insert) {\n    const sql = ' on duplicate key update ';\n    if (updates && Array.isArray(updates)) {\n      // update subset of columns\n      return (\n        sql +\n        updates\n          .map((column) =>\n            wrapAsIdentifier(column, this.formatter.builder, this.client)\n          )\n          .map((column) => `${column} = values(${column})`)\n          .join(', ')\n      );\n    } else if (updates && typeof updates === 'object') {\n      const updateData = this._prepUpdate(updates);\n      return sql + updateData.join(',');\n    } else {\n      const insertData = this._prepInsert(insert);\n      if (typeof insertData === 'string') {\n        throw new Error(\n          'If using merge with a raw insert query, then updates must be provided'\n        );\n      }\n\n      return (\n        sql +\n        insertData.columns\n          .map((column) => wrapAsIdentifier(column, this.builder, this.client))\n          .map((column) => `${column} = values(${column})`)\n          .join(', ')\n      );\n    }\n  }\n\n  // Update method, including joins, wheres, order & limits.\n  update() {\n    const comments = this.comments();\n    const withSQL = this.with();\n    const join = this.join();\n    const updates = this._prepUpdate(this.single.update);\n    const where = this.where();\n    const order = this.order();\n    const limit = this.limit();\n    return (\n      (comments === '' ? '' : comments + ' ') +\n      withSQL +\n      `update ${this.tableName}` +\n      (join ? ` ${join}` : '') +\n      ' set ' +\n      updates.join(', ') +\n      (where ? ` ${where}` : '') +\n      (order ? ` ${order}` : '') +\n      (limit ? ` ${limit}` : '')\n    );\n  }\n\n  forUpdate() {\n    return 'for update';\n  }\n\n  forShare() {\n    return 'lock in share mode';\n  }\n\n  // Only supported on MySQL 8.0+\n  skipLocked() {\n    return 'skip locked';\n  }\n\n  // Supported on MySQL 8.0+ and MariaDB 10.3.0+\n  noWait() {\n    return 'nowait';\n  }\n\n  // Compiles a `columnInfo` query.\n  columnInfo() {\n    const column = this.single.columnInfo;\n\n    // The user may have specified a custom wrapIdentifier function in the config. We\n    // need to run the identifiers through that function, but not format them as\n    // identifiers otherwise.\n    const table = this.client.customWrapIdentifier(this.single.table, identity);\n\n    return {\n      sql: 'select * from information_schema.columns where table_name = ? and table_schema = ?',\n      bindings: [table, this.client.database()],\n      output(resp) {\n        const out = resp.reduce(function (columns, val) {\n          columns[val.COLUMN_NAME] = {\n            defaultValue:\n              val.COLUMN_DEFAULT === 'NULL' ? null : val.COLUMN_DEFAULT,\n            type: val.DATA_TYPE,\n            maxLength: val.CHARACTER_MAXIMUM_LENGTH,\n            nullable: val.IS_NULLABLE === 'YES',\n          };\n          return columns;\n        }, {});\n        return (column && out[column]) || out;\n      },\n    };\n  }\n\n  limit() {\n    const noLimit = !this.single.limit && this.single.limit !== 0;\n    if (noLimit && !this.single.offset) return '';\n\n    // Workaround for offset only.\n    // see: http://stackoverflow.com/questions/255517/mysql-offset-infinite-rows\n    const limit =\n      this.single.offset && noLimit\n        ? '18446744073709551615'\n        : this._getValueOrParameterFromAttribute('limit');\n    return `limit ${limit}`;\n  }\n\n  whereBasic(statement) {\n    assert(\n      !isPlainObjectOrArray(statement.value),\n      'The values in where clause must not be object or array.'\n    );\n\n    return super.whereBasic(statement);\n  }\n\n  whereRaw(statement) {\n    assert(\n      isEmpty(statement.value.bindings) ||\n        !Object.values(statement.value.bindings).some(isPlainObjectOrArray),\n      'The values in where clause must not be object or array.'\n    );\n\n    return super.whereRaw(statement);\n  }\n\n  whereLike(statement) {\n    return `${this._columnClause(statement)} ${this._not(\n      statement,\n      'like '\n    )}${this._valueClause(statement)} COLLATE utf8_bin`;\n  }\n\n  whereILike(statement) {\n    return `${this._columnClause(statement)} ${this._not(\n      statement,\n      'like '\n    )}${this._valueClause(statement)}`;\n  }\n\n  // Json functions\n  jsonExtract(params) {\n    return this._jsonExtract(['json_extract', 'json_unquote'], params);\n  }\n\n  jsonSet(params) {\n    return this._jsonSet('json_set', params);\n  }\n\n  jsonInsert(params) {\n    return this._jsonSet('json_insert', params);\n  }\n\n  jsonRemove(params) {\n    const jsonCol = `json_remove(${columnize_(\n      params.column,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    )},${this.client.parameter(\n      params.path,\n      this.builder,\n      this.bindingsHolder\n    )})`;\n    return params.alias\n      ? this.client.alias(jsonCol, this.formatter.wrap(params.alias))\n      : jsonCol;\n  }\n\n  whereJsonObject(statement) {\n    return this._not(\n      statement,\n      `json_contains(${this._columnClause(statement)}, ${this._jsonValueClause(\n        statement\n      )})`\n    );\n  }\n\n  whereJsonPath(statement) {\n    return this._whereJsonPath('json_extract', statement);\n  }\n\n  whereJsonSupersetOf(statement) {\n    return this._not(\n      statement,\n      `json_contains(${wrap_(\n        statement.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      )},${this._jsonValueClause(statement)})`\n    );\n  }\n\n  whereJsonSubsetOf(statement) {\n    return this._not(\n      statement,\n      `json_contains(${this._jsonValueClause(statement)},${wrap_(\n        statement.column,\n        undefined,\n        this.builder,\n        this.client,\n        this.bindingsHolder\n      )})`\n    );\n  }\n\n  onJsonPathEquals(clause) {\n    return this._onJsonPathEquals('json_extract', clause);\n  }\n}\n\n// Set the QueryBuilder & QueryCompiler on the client object,\n// in case anyone wants to modify things to suit their own purposes.\nmodule.exports = QueryCompiler_MySQL;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 13751, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/mysql/schema/mysql-compiler.js"],"sourcesContent":["// MySQL Schema Compiler\n// -------\nconst SchemaCompiler = require('../../../schema/compiler');\n\nclass SchemaCompiler_MySQL extends SchemaCompiler {\n  constructor(client, builder) {\n    super(client, builder);\n  }\n\n  // Rename a table on the schema.\n  renameTable(tableName, to) {\n    this.pushQuery(\n      `rename table ${this.formatter.wrap(tableName)} to ${this.formatter.wrap(\n        to\n      )}`\n    );\n  }\n\n  renameView(from, to) {\n    this.renameTable(from, to);\n  }\n\n  // Check whether a table exists on the query.\n  hasTable(tableName) {\n    let sql = 'select * from information_schema.tables where table_name = ?';\n    const bindings = [tableName];\n\n    if (this.schema) {\n      sql += ' and table_schema = ?';\n      bindings.push(this.schema);\n    } else {\n      sql += ' and table_schema = database()';\n    }\n\n    this.pushQuery({\n      sql,\n      bindings,\n      output: function output(resp) {\n        return resp.length > 0;\n      },\n    });\n  }\n\n  // Check whether a column exists on the schema.\n  hasColumn(tableName, column) {\n    this.pushQuery({\n      sql: `show columns from ${this.formatter.wrap(tableName)}`,\n      output(resp) {\n        return resp.some((row) => {\n          return (\n            this.client.wrapIdentifier(row.Field.toLowerCase()) ===\n            this.client.wrapIdentifier(column.toLowerCase())\n          );\n        });\n      },\n    });\n  }\n}\n\nmodule.exports = SchemaCompiler_MySQL;\n"],"names":[],"mappings":"AAAA,wBAAwB;AACxB,UAAU;AACV,MAAM;AAEN,MAAM,6BAA6B;IACjC,YAAY,MAAM,EAAE,OAAO,CAAE;QAC3B,KAAK,CAAC,QAAQ;IAChB;IAEA,gCAAgC;IAChC,YAAY,SAAS,EAAE,EAAE,EAAE;QACzB,IAAI,CAAC,SAAS,CACZ,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CACtE,KACC;IAEP;IAEA,WAAW,IAAI,EAAE,EAAE,EAAE;QACnB,IAAI,CAAC,WAAW,CAAC,MAAM;IACzB;IAEA,6CAA6C;IAC7C,SAAS,SAAS,EAAE;QAClB,IAAI,MAAM;QACV,MAAM,WAAW;YAAC;SAAU;QAE5B,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,OAAO;YACP,SAAS,IAAI,CAAC,IAAI,CAAC,MAAM;QAC3B,OAAO;YACL,OAAO;QACT;QAEA,IAAI,CAAC,SAAS,CAAC;YACb;YACA;YACA,QAAQ,SAAS,OAAO,IAAI;gBAC1B,OAAO,KAAK,MAAM,GAAG;YACvB;QACF;IACF;IAEA,+CAA+C;IAC/C,UAAU,SAAS,EAAE,MAAM,EAAE;QAC3B,IAAI,CAAC,SAAS,CAAC;YACb,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY;YAC1D,QAAO,IAAI;gBACT,OAAO,KAAK,IAAI,CAAC,CAAC;oBAChB,OACE,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,KAAK,CAAC,WAAW,QAChD,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,WAAW;gBAEjD;YACF;QACF;IACF;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 13803, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/mysql/schema/mysql-tablecompiler.js"],"sourcesContent":["/* eslint max-len:0*/\n\n// MySQL Table Builder & Compiler\n// -------\nconst TableCompiler = require('../../../schema/tablecompiler');\nconst { isObject, isString } = require('../../../util/is');\n\n// Table Compiler\n// ------\n\nclass TableCompiler_MySQL extends TableCompiler {\n  constructor(client, tableBuilder) {\n    super(client, tableBuilder);\n  }\n\n  createQuery(columns, ifNot, like) {\n    const createStatement = ifNot\n      ? 'create table if not exists '\n      : 'create table ';\n    const { client } = this;\n    let conn = {};\n    let columnsSql = ' (' + columns.sql.join(', ');\n\n    columnsSql += this.primaryKeys() || '';\n    columnsSql += this._addChecks();\n    columnsSql += ')';\n\n    let sql =\n      createStatement +\n      this.tableName() +\n      (like && this.tableNameLike()\n        ? ' like ' + this.tableNameLike()\n        : columnsSql);\n\n    // Check if the connection settings are set.\n    if (client.connectionSettings) {\n      conn = client.connectionSettings;\n    }\n\n    const charset = this.single.charset || conn.charset || '';\n    const collation = this.single.collate || conn.collate || '';\n    const engine = this.single.engine || '';\n\n    if (charset && !like) sql += ` default character set ${charset}`;\n    if (collation) sql += ` collate ${collation}`;\n    if (engine) sql += ` engine = ${engine}`;\n\n    if (this.single.comment) {\n      const comment = this.single.comment || '';\n      const MAX_COMMENT_LENGTH = 1024;\n      if (comment.length > MAX_COMMENT_LENGTH)\n        this.client.logger.warn(\n          `The max length for a table comment is ${MAX_COMMENT_LENGTH} characters`\n        );\n      sql += ` comment = '${comment}'`;\n    }\n\n    this.pushQuery(sql);\n    if (like) {\n      this.addColumns(columns, this.addColumnsPrefix);\n    }\n  }\n\n  // Compiles the comment on the table.\n  comment(comment) {\n    this.pushQuery(`alter table ${this.tableName()} comment = '${comment}'`);\n  }\n\n  changeType() {\n    // alter table + table + ' modify ' + wrapped + '// type';\n  }\n\n  // Renames a column on the table.\n  renameColumn(from, to) {\n    const compiler = this;\n    const table = this.tableName();\n    const wrapped = this.formatter.wrap(from) + ' ' + this.formatter.wrap(to);\n\n    this.pushQuery({\n      sql:\n        `show full fields from ${table} where field = ` +\n        this.client.parameter(from, this.tableBuilder, this.bindingsHolder),\n      output(resp) {\n        const column = resp[0];\n        const runner = this;\n        return compiler.getFKRefs(runner).then(([refs]) =>\n          new Promise((resolve, reject) => {\n            try {\n              if (!refs.length) {\n                resolve();\n              }\n              resolve(compiler.dropFKRefs(runner, refs));\n            } catch (e) {\n              reject(e);\n            }\n          })\n            .then(function () {\n              let sql = `alter table ${table} change ${wrapped} ${column.Type}`;\n\n              if (String(column.Null).toUpperCase() !== 'YES') {\n                sql += ` NOT NULL`;\n              } else {\n                // This doesn't matter for most cases except Timestamp, where this is important\n                sql += ` NULL`;\n              }\n              if (column.Default !== void 0 && column.Default !== null) {\n                sql += ` DEFAULT '${column.Default}'`;\n              }\n              if (column.Collation !== void 0 && column.Collation !== null) {\n                sql += ` COLLATE '${column.Collation}'`;\n              }\n              // Add back the auto increment if the column  it, fix issue #2767\n              if (column.Extra == 'auto_increment') {\n                sql += ` AUTO_INCREMENT`;\n              }\n\n              return runner.query({\n                sql,\n              });\n            })\n            .then(function () {\n              if (!refs.length) {\n                return;\n              }\n              return compiler.createFKRefs(\n                runner,\n                refs.map(function (ref) {\n                  if (ref.REFERENCED_COLUMN_NAME === from) {\n                    ref.REFERENCED_COLUMN_NAME = to;\n                  }\n                  if (ref.COLUMN_NAME === from) {\n                    ref.COLUMN_NAME = to;\n                  }\n                  return ref;\n                })\n              );\n            })\n        );\n      },\n    });\n  }\n\n  primaryKeys() {\n    const pks = (this.grouped.alterTable || []).filter(\n      (k) => k.method === 'primary'\n    );\n    if (pks.length > 0 && pks[0].args.length > 0) {\n      const columns = pks[0].args[0];\n      let constraintName = pks[0].args[1] || '';\n      if (constraintName) {\n        constraintName = ' constraint ' + this.formatter.wrap(constraintName);\n      }\n\n      if (this.grouped.columns) {\n        const incrementsCols = this._getIncrementsColumnNames();\n        if (incrementsCols.length) {\n          incrementsCols.forEach((c) => {\n            if (!columns.includes(c)) {\n              columns.unshift(c);\n            }\n          });\n        }\n        const bigIncrementsCols = this._getBigIncrementsColumnNames();\n        if (bigIncrementsCols.length) {\n          bigIncrementsCols.forEach((c) => {\n            if (!columns.includes(c)) {\n              columns.unshift(c);\n            }\n          });\n        }\n      }\n\n      return `,${constraintName} primary key (${this.formatter.columnize(\n        columns\n      )})`;\n    }\n  }\n\n  getFKRefs(runner) {\n    const bindingsHolder = {\n      bindings: [],\n    };\n\n    const sql =\n      'SELECT KCU.CONSTRAINT_NAME, KCU.TABLE_NAME, KCU.COLUMN_NAME, ' +\n      '       KCU.REFERENCED_TABLE_NAME, KCU.REFERENCED_COLUMN_NAME, ' +\n      '       RC.UPDATE_RULE, RC.DELETE_RULE ' +\n      'FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS KCU ' +\n      'JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS RC ' +\n      '       USING(CONSTRAINT_NAME)' +\n      'WHERE KCU.REFERENCED_TABLE_NAME = ' +\n      this.client.parameter(\n        this.tableNameRaw,\n        this.tableBuilder,\n        bindingsHolder\n      ) +\n      ' ' +\n      '  AND KCU.CONSTRAINT_SCHEMA = ' +\n      this.client.parameter(\n        this.client.database(),\n        this.tableBuilder,\n        bindingsHolder\n      ) +\n      ' ' +\n      '  AND RC.CONSTRAINT_SCHEMA = ' +\n      this.client.parameter(\n        this.client.database(),\n        this.tableBuilder,\n        bindingsHolder\n      );\n\n    return runner.query({\n      sql,\n      bindings: bindingsHolder.bindings,\n    });\n  }\n\n  dropFKRefs(runner, refs) {\n    const formatter = this.client.formatter(this.tableBuilder);\n\n    return Promise.all(\n      refs.map(function (ref) {\n        const constraintName = formatter.wrap(ref.CONSTRAINT_NAME);\n        const tableName = formatter.wrap(ref.TABLE_NAME);\n        return runner.query({\n          sql: `alter table ${tableName} drop foreign key ${constraintName}`,\n        });\n      })\n    );\n  }\n\n  createFKRefs(runner, refs) {\n    const formatter = this.client.formatter(this.tableBuilder);\n\n    return Promise.all(\n      refs.map(function (ref) {\n        const tableName = formatter.wrap(ref.TABLE_NAME);\n        const keyName = formatter.wrap(ref.CONSTRAINT_NAME);\n        const column = formatter.columnize(ref.COLUMN_NAME);\n        const references = formatter.columnize(ref.REFERENCED_COLUMN_NAME);\n        const inTable = formatter.wrap(ref.REFERENCED_TABLE_NAME);\n        const onUpdate = ` ON UPDATE ${ref.UPDATE_RULE}`;\n        const onDelete = ` ON DELETE ${ref.DELETE_RULE}`;\n\n        return runner.query({\n          sql:\n            `alter table ${tableName} add constraint ${keyName} ` +\n            'foreign key (' +\n            column +\n            ') references ' +\n            inTable +\n            ' (' +\n            references +\n            ')' +\n            onUpdate +\n            onDelete,\n        });\n      })\n    );\n  }\n\n  index(columns, indexName, options) {\n    let storageEngineIndexType;\n    let indexType;\n\n    if (isString(options)) {\n      indexType = options;\n    } else if (isObject(options)) {\n      ({ indexType, storageEngineIndexType } = options);\n    }\n\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('index', this.tableNameRaw, columns);\n    storageEngineIndexType = storageEngineIndexType\n      ? ` using ${storageEngineIndexType}`\n      : '';\n    this.pushQuery(\n      `alter table ${this.tableName()} add${\n        indexType ? ` ${indexType}` : ''\n      } index ${indexName}(${this.formatter.columnize(\n        columns\n      )})${storageEngineIndexType}`\n    );\n  }\n\n  primary(columns, constraintName) {\n    let deferrable;\n    if (isObject(constraintName)) {\n      ({ constraintName, deferrable } = constraintName);\n    }\n    if (deferrable && deferrable !== 'not deferrable') {\n      this.client.logger.warn(\n        `mysql: primary key constraint \\`${constraintName}\\` will not be deferrable ${deferrable} because mysql does not support deferred constraints.`\n      );\n    }\n    constraintName = constraintName\n      ? this.formatter.wrap(constraintName)\n      : this.formatter.wrap(`${this.tableNameRaw}_pkey`);\n\n    const primaryCols = columns;\n    let incrementsCols = [];\n    let bigIncrementsCols = [];\n    if (this.grouped.columns) {\n      incrementsCols = this._getIncrementsColumnNames();\n      if (incrementsCols) {\n        incrementsCols.forEach((c) => {\n          if (!primaryCols.includes(c)) {\n            primaryCols.unshift(c);\n          }\n        });\n      }\n      bigIncrementsCols = this._getBigIncrementsColumnNames();\n      if (bigIncrementsCols) {\n        bigIncrementsCols.forEach((c) => {\n          if (!primaryCols.includes(c)) {\n            primaryCols.unshift(c);\n          }\n        });\n      }\n    }\n    if (this.method !== 'create' && this.method !== 'createIfNot') {\n      this.pushQuery(\n        `alter table ${this.tableName()} add primary key ${constraintName}(${this.formatter.columnize(\n          primaryCols\n        )})`\n      );\n    }\n    if (incrementsCols.length) {\n      this.pushQuery(\n        `alter table ${this.tableName()} modify column ${this.formatter.columnize(\n          incrementsCols\n        )} int unsigned not null auto_increment`\n      );\n    }\n    if (bigIncrementsCols.length) {\n      this.pushQuery(\n        `alter table ${this.tableName()} modify column ${this.formatter.columnize(\n          bigIncrementsCols\n        )} bigint unsigned not null auto_increment`\n      );\n    }\n  }\n\n  unique(columns, indexName) {\n    let storageEngineIndexType;\n    let deferrable;\n    if (isObject(indexName)) {\n      ({ indexName, deferrable, storageEngineIndexType } = indexName);\n    }\n    if (deferrable && deferrable !== 'not deferrable') {\n      this.client.logger.warn(\n        `mysql: unique index \\`${indexName}\\` will not be deferrable ${deferrable} because mysql does not support deferred constraints.`\n      );\n    }\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('unique', this.tableNameRaw, columns);\n    storageEngineIndexType = storageEngineIndexType\n      ? ` using ${storageEngineIndexType}`\n      : '';\n    this.pushQuery(\n      `alter table ${this.tableName()} add unique ${indexName}(${this.formatter.columnize(\n        columns\n      )})${storageEngineIndexType}`\n    );\n  }\n\n  // Compile a drop index command.\n  dropIndex(columns, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('index', this.tableNameRaw, columns);\n    this.pushQuery(`alter table ${this.tableName()} drop index ${indexName}`);\n  }\n\n  // Compile a drop foreign key command.\n  dropForeign(columns, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('foreign', this.tableNameRaw, columns);\n    this.pushQuery(\n      `alter table ${this.tableName()} drop foreign key ${indexName}`\n    );\n  }\n\n  // Compile a drop primary key command.\n  dropPrimary() {\n    this.pushQuery(`alter table ${this.tableName()} drop primary key`);\n  }\n\n  // Compile a drop unique key command.\n  dropUnique(column, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('unique', this.tableNameRaw, column);\n    this.pushQuery(`alter table ${this.tableName()} drop index ${indexName}`);\n  }\n}\n\nTableCompiler_MySQL.prototype.addColumnsPrefix = 'add ';\nTableCompiler_MySQL.prototype.alterColumnsPrefix = 'modify ';\nTableCompiler_MySQL.prototype.dropColumnPrefix = 'drop ';\n\nmodule.exports = TableCompiler_MySQL;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14065, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/mysql/schema/mysql-columncompiler.js"],"sourcesContent":["// MySQL Column Compiler\n// -------\nconst ColumnCompiler = require('../../../schema/columncompiler');\nconst { isObject } = require('../../../util/is');\nconst { toNumber } = require('../../../util/helpers');\n\nconst commentEscapeRegex = /(?<!\\\\)'/g;\n\nclass ColumnCompiler_MySQL extends ColumnCompiler {\n  constructor(client, tableCompiler, columnBuilder) {\n    super(client, tableCompiler, columnBuilder);\n    this.modifiers = [\n      'unsigned',\n      'nullable',\n      'defaultTo',\n      'comment',\n      'collate',\n      'first',\n      'after',\n    ];\n    this._addCheckModifiers();\n  }\n\n  // Types\n  // ------\n\n  double(precision, scale) {\n    if (!precision) return 'double';\n    return `double(${toNumber(precision, 8)}, ${toNumber(scale, 2)})`;\n  }\n\n  integer(length) {\n    length = length ? `(${toNumber(length, 11)})` : '';\n    return `int${length}`;\n  }\n\n  tinyint(length) {\n    length = length ? `(${toNumber(length, 1)})` : '';\n    return `tinyint${length}`;\n  }\n\n  text(column) {\n    switch (column) {\n      case 'medium':\n      case 'mediumtext':\n        return 'mediumtext';\n      case 'long':\n      case 'longtext':\n        return 'longtext';\n      default:\n        return 'text';\n    }\n  }\n\n  mediumtext() {\n    return this.text('medium');\n  }\n\n  longtext() {\n    return this.text('long');\n  }\n\n  enu(allowed) {\n    return `enum('${allowed.join(\"', '\")}')`;\n  }\n\n  datetime(precision) {\n    if (isObject(precision)) {\n      ({ precision } = precision);\n    }\n\n    return typeof precision === 'number'\n      ? `datetime(${precision})`\n      : 'datetime';\n  }\n\n  timestamp(precision) {\n    if (isObject(precision)) {\n      ({ precision } = precision);\n    }\n\n    return typeof precision === 'number'\n      ? `timestamp(${precision})`\n      : 'timestamp';\n  }\n\n  time(precision) {\n    if (isObject(precision)) {\n      ({ precision } = precision);\n    }\n\n    return typeof precision === 'number' ? `time(${precision})` : 'time';\n  }\n\n  bit(length) {\n    return length ? `bit(${toNumber(length)})` : 'bit';\n  }\n\n  binary(length) {\n    return length ? `varbinary(${toNumber(length)})` : 'blob';\n  }\n\n  json() {\n    return 'json';\n  }\n\n  jsonb() {\n    return 'json';\n  }\n\n  // Modifiers\n  // ------\n\n  defaultTo(value) {\n    // MySQL defaults to null by default, but breaks down if you pass it explicitly\n    // Note that in MySQL versions up to 5.7, logic related to updating\n    // timestamps when no explicit value is passed is quite insane - https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_explicit_defaults_for_timestamp\n    if (value === null || value === undefined) {\n      return;\n    }\n    if ((this.type === 'json' || this.type === 'jsonb') && isObject(value)) {\n      // Default value for json will work only it is an expression\n      return `default ('${JSON.stringify(value)}')`;\n    }\n    const defaultVal = super.defaultTo.apply(this, arguments);\n    if (this.type !== 'blob' && this.type.indexOf('text') === -1) {\n      return defaultVal;\n    }\n    return '';\n  }\n\n  unsigned() {\n    return 'unsigned';\n  }\n\n  comment(comment) {\n    if (comment && comment.length > 255) {\n      this.client.logger.warn(\n        'Your comment is longer than the max comment length for MySQL'\n      );\n    }\n    return comment && `comment '${comment.replace(commentEscapeRegex, \"\\\\'\")}'`;\n  }\n\n  first() {\n    return 'first';\n  }\n\n  after(column) {\n    return `after ${this.formatter.wrap(column)}`;\n  }\n\n  collate(collation) {\n    return collation && `collate '${collation}'`;\n  }\n\n  checkRegex(regex, constraintName) {\n    return this._check(\n      `${this.formatter.wrap(\n        this.getColumnName()\n      )} REGEXP ${this.client._escapeBinding(regex)}`,\n      constraintName\n    );\n  }\n\n  increments(options = { primaryKey: true }) {\n    return (\n      'int unsigned not null' +\n      // In MySQL autoincrement are always a primary key. If you already have a primary key, we\n      // initialize this column as classic int column then modify it later in table compiler\n      (this.tableCompiler._canBeAddPrimaryKey(options)\n        ? ' auto_increment primary key'\n        : '')\n    );\n  }\n\n  bigincrements(options = { primaryKey: true }) {\n    return (\n      'bigint unsigned not null' +\n      // In MySQL autoincrement are always a primary key. If you already have a primary key, we\n      // initialize this column as classic int column then modify it later in table compiler\n      (this.tableCompiler._canBeAddPrimaryKey(options)\n        ? ' auto_increment primary key'\n        : '')\n    );\n  }\n}\n\nColumnCompiler_MySQL.prototype.bigint = 'bigint';\nColumnCompiler_MySQL.prototype.mediumint = 'mediumint';\nColumnCompiler_MySQL.prototype.smallint = 'smallint';\n\nmodule.exports = ColumnCompiler_MySQL;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14214, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/mysql/schema/mysql-viewcompiler.js"],"sourcesContent":["/* eslint max-len: 0 */\n\nconst ViewCompiler = require('../../../schema/viewcompiler.js');\n\nclass ViewCompiler_MySQL extends ViewCompiler {\n  constructor(client, viewCompiler) {\n    super(client, viewCompiler);\n  }\n\n  createOrReplace() {\n    this.createQuery(this.columns, this.selectQuery, false, true);\n  }\n}\n\nmodule.exports = ViewCompiler_MySQL;\n"],"names":[],"mappings":"AAAA,qBAAqB,GAErB,MAAM;AAEN,MAAM,2BAA2B;IAC/B,YAAY,MAAM,EAAE,YAAY,CAAE;QAChC,KAAK,CAAC,QAAQ;IAChB;IAEA,kBAAkB;QAChB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,OAAO;IAC1D;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14229, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/mysql/schema/mysql-viewbuilder.js"],"sourcesContent":["const ViewBuilder = require('../../../schema/viewbuilder.js');\n\nclass ViewBuilder_MySQL extends ViewBuilder {\n  constructor() {\n    super(...arguments);\n  }\n\n  checkOption() {\n    this._single.checkOption = 'default_option';\n  }\n\n  localCheckOption() {\n    this._single.checkOption = 'local';\n  }\n\n  cascadedCheckOption() {\n    this._single.checkOption = 'cascaded';\n  }\n}\n\nmodule.exports = ViewBuilder_MySQL;\n"],"names":[],"mappings":"AAAA,MAAM;AAEN,MAAM,0BAA0B;IAC9B,aAAc;QACZ,KAAK,IAAI;IACX;IAEA,cAAc;QACZ,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG;IAC7B;IAEA,mBAAmB;QACjB,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG;IAC7B;IAEA,sBAAsB;QACpB,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG;IAC7B;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14250, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/mysql/index.js"],"sourcesContent":["// MySQL Client\n// -------\nconst defer = require('lodash/defer');\nconst map = require('lodash/map');\nconst { promisify } = require('util');\nconst Client = require('../../client');\n\nconst Transaction = require('./transaction');\nconst QueryBuilder = require('./query/mysql-querybuilder');\nconst QueryCompiler = require('./query/mysql-querycompiler');\nconst SchemaCompiler = require('./schema/mysql-compiler');\nconst TableCompiler = require('./schema/mysql-tablecompiler');\nconst ColumnCompiler = require('./schema/mysql-columncompiler');\n\nconst { makeEscape } = require('../../util/string');\nconst ViewCompiler = require('./schema/mysql-viewcompiler');\nconst ViewBuilder = require('./schema/mysql-viewbuilder');\n\n// Always initialize with the \"QueryBuilder\" and \"QueryCompiler\"\n// objects, which extend the base 'lib/query/builder' and\n// 'lib/query/compiler', respectively.\nclass Client_MySQL extends Client {\n  _driver() {\n    return require('mysql');\n  }\n\n  queryBuilder() {\n    return new QueryBuilder(this);\n  }\n\n  queryCompiler(builder, formatter) {\n    return new QueryCompiler(this, builder, formatter);\n  }\n\n  schemaCompiler() {\n    return new SchemaCompiler(this, ...arguments);\n  }\n\n  tableCompiler() {\n    return new TableCompiler(this, ...arguments);\n  }\n\n  viewCompiler() {\n    return new ViewCompiler(this, ...arguments);\n  }\n\n  viewBuilder() {\n    return new ViewBuilder(this, ...arguments);\n  }\n\n  columnCompiler() {\n    return new ColumnCompiler(this, ...arguments);\n  }\n\n  transaction() {\n    return new Transaction(this, ...arguments);\n  }\n\n  wrapIdentifierImpl(value) {\n    return value !== '*' ? `\\`${value.replace(/`/g, '``')}\\`` : '*';\n  }\n\n  // Get a raw connection, called by the `pool` whenever a new\n  // connection needs to be added to the pool.\n  acquireRawConnection() {\n    return new Promise((resolver, rejecter) => {\n      const connection = this.driver.createConnection(this.connectionSettings);\n      connection.on('error', (err) => {\n        connection.__knex__disposed = err;\n      });\n      connection.connect((err) => {\n        if (err) {\n          // if connection is rejected, remove listener that was registered above...\n          connection.removeAllListeners();\n          return rejecter(err);\n        }\n        resolver(connection);\n      });\n    });\n  }\n\n  // Used to explicitly close a connection, called internally by the pool\n  // when a connection times out or the pool is shutdown.\n  async destroyRawConnection(connection) {\n    try {\n      const end = promisify((cb) => connection.end(cb));\n      return await end();\n    } catch (err) {\n      connection.__knex__disposed = err;\n    } finally {\n      // see discussion https://github.com/knex/knex/pull/3483\n      defer(() => connection.removeAllListeners());\n    }\n  }\n\n  validateConnection(connection) {\n    return (\n      connection.state === 'connected' || connection.state === 'authenticated'\n    );\n  }\n\n  // Grab a connection, run the query via the MySQL streaming interface,\n  // and pass that through to the stream we've sent back to the client.\n  _stream(connection, obj, stream, options) {\n    if (!obj.sql) throw new Error('The query is empty');\n\n    options = options || {};\n    const queryOptions = Object.assign({ sql: obj.sql }, obj.options);\n    return new Promise((resolver, rejecter) => {\n      stream.on('error', rejecter);\n      stream.on('end', resolver);\n      const queryStream = connection\n        .query(queryOptions, obj.bindings)\n        .stream(options);\n\n      queryStream.on('error', (err) => {\n        rejecter(err);\n        stream.emit('error', err);\n      });\n\n      queryStream.pipe(stream);\n    });\n  }\n\n  // Runs the query on the specified connection, providing the bindings\n  // and any other necessary prep work.\n  _query(connection, obj) {\n    if (!obj || typeof obj === 'string') obj = { sql: obj };\n    if (!obj.sql) throw new Error('The query is empty');\n\n    return new Promise(function (resolver, rejecter) {\n      if (!obj.sql) {\n        resolver();\n        return;\n      }\n      const queryOptions = Object.assign({ sql: obj.sql }, obj.options);\n      connection.query(\n        queryOptions,\n        obj.bindings,\n        function (err, rows, fields) {\n          if (err) return rejecter(err);\n          obj.response = [rows, fields];\n          resolver(obj);\n        }\n      );\n    });\n  }\n\n  // Process the response as returned from the query.\n  processResponse(obj, runner) {\n    if (obj == null) return;\n    const { response } = obj;\n    const { method } = obj;\n    const rows = response[0];\n    const fields = response[1];\n    if (obj.output) return obj.output.call(runner, rows, fields);\n    switch (method) {\n      case 'select':\n        return rows;\n      case 'first':\n        return rows[0];\n      case 'pluck':\n        return map(rows, obj.pluck);\n      case 'insert':\n        return [rows.insertId];\n      case 'del':\n      case 'update':\n      case 'counter':\n        return rows.affectedRows;\n      default:\n        return response;\n    }\n  }\n\n  async cancelQuery(connectionToKill) {\n    const conn = await this.acquireRawConnection();\n    try {\n      return await this._wrappedCancelQueryCall(conn, connectionToKill);\n    } finally {\n      await this.destroyRawConnection(conn);\n      if (conn.__knex__disposed) {\n        this.logger.warn(`Connection Error: ${conn.__knex__disposed}`);\n      }\n    }\n  }\n\n  _wrappedCancelQueryCall(conn, connectionToKill) {\n    return this._query(conn, {\n      sql: 'KILL QUERY ?',\n      bindings: [connectionToKill.threadId],\n      options: {},\n    });\n  }\n}\n\nObject.assign(Client_MySQL.prototype, {\n  dialect: 'mysql',\n\n  driverName: 'mysql',\n\n  _escapeBinding: makeEscape(),\n\n  canCancelQuery: true,\n});\n\nmodule.exports = Client_MySQL;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14437, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/mysql2/transaction.js"],"sourcesContent":["const Transaction = require('../../execution/transaction');\nconst debug = require('debug')('knex:tx');\n\nclass Transaction_MySQL2 extends Transaction {\n  query(conn, sql, status, value) {\n    const t = this;\n    const q = this.trxClient\n      .query(conn, sql)\n      .catch((err) => {\n        if (err.code === 'ER_SP_DOES_NOT_EXIST') {\n          this.trxClient.logger.warn(\n            'Transaction was implicitly committed, do not mix transactions and ' +\n              'DDL with MySQL (#805)'\n          );\n          return;\n        }\n\n        status = 2;\n        value = err;\n        t._completed = true;\n        debug('%s error running transaction query', t.txid);\n      })\n      .then(function (res) {\n        if (status === 1) t._resolver(value);\n        if (status === 2) {\n          if (value === undefined) {\n            if (t.doNotRejectOnRollback && /^ROLLBACK\\b/i.test(sql)) {\n              t._resolver();\n              return;\n            }\n            value = new Error(`Transaction rejected with non-error: ${value}`);\n          }\n          t._rejecter(value);\n          return res;\n        }\n      });\n    if (status === 1 || status === 2) {\n      t._completed = true;\n    }\n    return q;\n  }\n}\n\nmodule.exports = Transaction_MySQL2;\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,QAAQ,gHAAiB;AAE/B,MAAM,2BAA2B;IAC/B,MAAM,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE;QAC9B,MAAM,IAAI,IAAI;QACd,MAAM,IAAI,IAAI,CAAC,SAAS,CACrB,KAAK,CAAC,MAAM,KACZ,KAAK,CAAC,CAAC;YACN,IAAI,IAAI,IAAI,KAAK,wBAAwB;gBACvC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CACxB,uEACE;gBAEJ;YACF;YAEA,SAAS;YACT,QAAQ;YACR,EAAE,UAAU,GAAG;YACf,MAAM,sCAAsC,EAAE,IAAI;QACpD,GACC,IAAI,CAAC,SAAU,GAAG;YACjB,IAAI,WAAW,GAAG,EAAE,SAAS,CAAC;YAC9B,IAAI,WAAW,GAAG;gBAChB,IAAI,UAAU,WAAW;oBACvB,IAAI,EAAE,qBAAqB,IAAI,eAAe,IAAI,CAAC,MAAM;wBACvD,EAAE,SAAS;wBACX;oBACF;oBACA,QAAQ,IAAI,MAAM,CAAC,qCAAqC,EAAE,OAAO;gBACnE;gBACA,EAAE,SAAS,CAAC;gBACZ,OAAO;YACT;QACF;QACF,IAAI,WAAW,KAAK,WAAW,GAAG;YAChC,EAAE,UAAU,GAAG;QACjB;QACA,OAAO;IACT;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14477, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/mysql2/index.js"],"sourcesContent":["// MySQL2 Client\n// -------\nconst Client_MySQL = require('../mysql');\nconst Transaction = require('./transaction');\n\n// Always initialize with the \"QueryBuilder\" and \"QueryCompiler\"\n// objects, which extend the base 'lib/query/builder' and\n// 'lib/query/compiler', respectively.\nclass Client_MySQL2 extends Client_MySQL {\n  transaction() {\n    return new Transaction(this, ...arguments);\n  }\n\n  _driver() {\n    return require('mysql2');\n  }\n\n  initializeDriver() {\n    try {\n      this.driver = this._driver();\n    } catch (e) {\n      let message = `Knex: run\\n$ npm install ${this.driverName}`;\n\n      const nodeMajorVersion = process.version.replace(/^v/, '').split('.')[0];\n      if (nodeMajorVersion <= 12) {\n        message += `@3.2.0`;\n        this.logger.error(\n          'Mysql2 version 3.2.0 is the latest version to support Node.js 12 or lower.'\n        );\n      }\n      message += ` --save`;\n      this.logger.error(`${message}\\n${e.message}\\n${e.stack}`);\n      throw new Error(`${message}\\n${e.message}`);\n    }\n  }\n\n  validateConnection(connection) {\n    return (\n      connection &&\n      !connection._fatalError &&\n      !connection._protocolError &&\n      !connection._closing &&\n      !connection.stream.destroyed\n    );\n  }\n}\n\nObject.assign(Client_MySQL2.prototype, {\n  // The \"dialect\", for reference elsewhere.\n  driverName: 'mysql2',\n});\n\nmodule.exports = Client_MySQL2;\n"],"names":[],"mappings":"AAAA,gBAAgB;AAChB,UAAU;AACV,MAAM;AACN,MAAM;AAEN,gEAAgE;AAChE,yDAAyD;AACzD,sCAAsC;AACtC,MAAM,sBAAsB;IAC1B,cAAc;QACZ,OAAO,IAAI,YAAY,IAAI,KAAK;IAClC;IAEA,UAAU;QACR;IACF;IAEA,mBAAmB;QACjB,IAAI;YACF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO;QAC5B,EAAE,OAAO,GAAG;YACV,IAAI,UAAU,CAAC,yBAAyB,EAAE,IAAI,CAAC,UAAU,EAAE;YAE3D,MAAM,mBAAmB,QAAQ,OAAO,CAAC,OAAO,CAAC,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE;YACxE,IAAI,oBAAoB,IAAI;gBAC1B,WAAW,CAAC,MAAM,CAAC;gBACnB,IAAI,CAAC,MAAM,CAAC,KAAK,CACf;YAEJ;YACA,WAAW,CAAC,OAAO,CAAC;YACpB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,QAAQ,EAAE,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE;YACxD,MAAM,IAAI,MAAM,GAAG,QAAQ,EAAE,EAAE,EAAE,OAAO,EAAE;QAC5C;IACF;IAEA,mBAAmB,UAAU,EAAE;QAC7B,OACE,cACA,CAAC,WAAW,WAAW,IACvB,CAAC,WAAW,cAAc,IAC1B,CAAC,WAAW,QAAQ,IACpB,CAAC,WAAW,MAAM,CAAC,SAAS;IAEhC;AACF;AAEA,OAAO,MAAM,CAAC,cAAc,SAAS,EAAE;IACrC,0CAA0C;IAC1C,YAAY;AACd;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14520, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/oracle/utils.js"],"sourcesContent":["class NameHelper {\n  constructor(oracleVersion) {\n    this.oracleVersion = oracleVersion;\n\n    // In oracle versions prior to 12.2, the maximum length for a database\n    // object name was 30 characters. 12.2 extended this to 128.\n    const versionParts = oracleVersion\n      .split('.')\n      .map((versionPart) => parseInt(versionPart));\n    if (\n      versionParts[0] > 12 ||\n      (versionParts[0] === 12 && versionParts[1] >= 2)\n    ) {\n      this.limit = 128;\n    } else {\n      this.limit = 30;\n    }\n  }\n\n  generateCombinedName(logger, postfix, name, subNames) {\n    const crypto = require('crypto');\n    if (!Array.isArray(subNames)) subNames = subNames ? [subNames] : [];\n    const table = name.replace(/\\.|-/g, '_');\n    const subNamesPart = subNames.join('_');\n    let result = `${table}_${\n      subNamesPart.length ? subNamesPart + '_' : ''\n    }${postfix}`.toLowerCase();\n    if (result.length > this.limit) {\n      logger.warn(\n        `Automatically generated name \"${result}\" exceeds ${this.limit} character ` +\n          `limit for Oracle Database ${this.oracleVersion}. Using base64 encoded sha1 of that name instead.`\n      );\n      // generates the sha1 of the name and encode it with base64\n      result = crypto\n        .createHash('sha1')\n        .update(result)\n        .digest('base64')\n        .replace('=', '');\n    }\n    return result;\n  }\n}\n\nfunction wrapSqlWithCatch(sql, errorNumberToCatch) {\n  return (\n    `begin execute immediate '${sql.replace(/'/g, \"''\")}'; ` +\n    `exception when others then if sqlcode != ${errorNumberToCatch} then raise; ` +\n    `end if; ` +\n    `end;`\n  );\n}\n\nfunction ReturningHelper(columnName) {\n  this.columnName = columnName;\n}\n\nReturningHelper.prototype.toString = function () {\n  return `[object ReturningHelper:${this.columnName}]`;\n};\n\n// If the error is any of these, we'll assume we need to\n// mark the connection as failed\nfunction isConnectionError(err) {\n  return [\n    'DPI-1010', // not connected\n    'DPI-1080', // connection was closed by ORA-%d\n    'ORA-03114', // not connected to ORACLE\n    'ORA-03113', // end-of-file on communication channel\n    'ORA-03135', // connection lost contact\n    'ORA-12514', // listener does not currently know of service requested in connect descriptor\n    'ORA-00022', // invalid session ID; access denied\n    'ORA-00028', // your session has been killed\n    'ORA-00031', // your session has been marked for kill\n    'ORA-00045', // your session has been terminated with no replay\n    'ORA-00378', // buffer pools cannot be created as specified\n    'ORA-00602', // internal programming exception\n    'ORA-00603', // ORACLE server session terminated by fatal error\n    'ORA-00609', // could not attach to incoming connection\n    'ORA-01012', // not logged on\n    'ORA-01041', // internal error. hostdef extension doesn't exist\n    'ORA-01043', // user side memory corruption\n    'ORA-01089', // immediate shutdown or close in progress\n    'ORA-01092', // ORACLE instance terminated. Disconnection forced\n    'ORA-02396', // exceeded maximum idle time, please connect again\n    'ORA-03122', // attempt to close ORACLE-side window on user side\n    'ORA-12153', // TNS'not connected\n    'ORA-12537', // TNS'connection closed\n    'ORA-12547', // TNS'lost contact\n    'ORA-12570', // TNS'packet reader failure\n    'ORA-12583', // TNS'no reader\n    'ORA-27146', // post/wait initialization failed\n    'ORA-28511', // lost RPC connection\n    'ORA-56600', // an illegal OCI function call was issued\n    'NJS-024',\n    'NJS-003',\n  ].some(function (prefix) {\n    return err.message.indexOf(prefix) === 0;\n  });\n}\n\nmodule.exports = {\n  NameHelper,\n  isConnectionError,\n  wrapSqlWithCatch,\n  ReturningHelper,\n};\n"],"names":[],"mappings":"AAAA,MAAM;IACJ,YAAY,aAAa,CAAE;QACzB,IAAI,CAAC,aAAa,GAAG;QAErB,sEAAsE;QACtE,4DAA4D;QAC5D,MAAM,eAAe,cAClB,KAAK,CAAC,KACN,GAAG,CAAC,CAAC,cAAgB,SAAS;QACjC,IACE,YAAY,CAAC,EAAE,GAAG,MACjB,YAAY,CAAC,EAAE,KAAK,MAAM,YAAY,CAAC,EAAE,IAAI,GAC9C;YACA,IAAI,CAAC,KAAK,GAAG;QACf,OAAO;YACL,IAAI,CAAC,KAAK,GAAG;QACf;IACF;IAEA,qBAAqB,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE;QACpD,MAAM;QACN,IAAI,CAAC,MAAM,OAAO,CAAC,WAAW,WAAW,WAAW;YAAC;SAAS,GAAG,EAAE;QACnE,MAAM,QAAQ,KAAK,OAAO,CAAC,SAAS;QACpC,MAAM,eAAe,SAAS,IAAI,CAAC;QACnC,IAAI,SAAS,GAAG,MAAM,CAAC,EACrB,aAAa,MAAM,GAAG,eAAe,MAAM,KAC1C,SAAS,CAAC,WAAW;QACxB,IAAI,OAAO,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE;YAC9B,OAAO,IAAI,CACT,CAAC,8BAA8B,EAAE,OAAO,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GACzE,CAAC,0BAA0B,EAAE,IAAI,CAAC,aAAa,CAAC,iDAAiD,CAAC;YAEtG,2DAA2D;YAC3D,SAAS,OACN,UAAU,CAAC,QACX,MAAM,CAAC,QACP,MAAM,CAAC,UACP,OAAO,CAAC,KAAK;QAClB;QACA,OAAO;IACT;AACF;AAEA,SAAS,iBAAiB,GAAG,EAAE,kBAAkB;IAC/C,OACE,CAAC,yBAAyB,EAAE,IAAI,OAAO,CAAC,MAAM,MAAM,GAAG,CAAC,GACxD,CAAC,yCAAyC,EAAE,mBAAmB,aAAa,CAAC,GAC7E,CAAC,QAAQ,CAAC,GACV,CAAC,IAAI,CAAC;AAEV;AAEA,SAAS,gBAAgB,UAAU;IACjC,IAAI,CAAC,UAAU,GAAG;AACpB;AAEA,gBAAgB,SAAS,CAAC,QAAQ,GAAG;IACnC,OAAO,CAAC,wBAAwB,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AACtD;AAEA,wDAAwD;AACxD,gCAAgC;AAChC,SAAS,kBAAkB,GAAG;IAC5B,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD,CAAC,IAAI,CAAC,SAAU,MAAM;QACrB,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,YAAY;IACzC;AACF;AAEA,OAAO,OAAO,GAAG;IACf;IACA;IACA;IACA;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14607, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/oracle/schema/internal/trigger.js"],"sourcesContent":["const { NameHelper } = require('../../utils');\n\nclass Trigger {\n  constructor(oracleVersion) {\n    this.nameHelper = new NameHelper(oracleVersion);\n  }\n\n  renameColumnTrigger(logger, tableName, columnName, to) {\n    const triggerName = this.nameHelper.generateCombinedName(\n      logger,\n      'autoinc_trg',\n      tableName\n    );\n    const sequenceName = this.nameHelper.generateCombinedName(\n      logger,\n      'seq',\n      tableName\n    );\n    return (\n      `DECLARE ` +\n      `PK_NAME VARCHAR(200); ` +\n      `IS_AUTOINC NUMBER := 0; ` +\n      `BEGIN` +\n      `  EXECUTE IMMEDIATE ('ALTER TABLE \"${tableName}\" RENAME COLUMN \"${columnName}\" TO \"${to}\"');` +\n      `  SELECT COUNT(*) INTO IS_AUTOINC from \"USER_TRIGGERS\" where trigger_name = '${triggerName}';` +\n      `  IF (IS_AUTOINC > 0) THEN` +\n      `    SELECT cols.column_name INTO PK_NAME` +\n      `    FROM all_constraints cons, all_cons_columns cols` +\n      `    WHERE cons.constraint_type = 'P'` +\n      `    AND cons.constraint_name = cols.constraint_name` +\n      `    AND cons.owner = cols.owner` +\n      `    AND cols.table_name = '${tableName}';` +\n      `    IF ('${to}' = PK_NAME) THEN` +\n      `      EXECUTE IMMEDIATE ('DROP TRIGGER \"${triggerName}\"');` +\n      `      EXECUTE IMMEDIATE ('create or replace trigger \"${triggerName}\"` +\n      `      BEFORE INSERT on \"${tableName}\" for each row` +\n      `        declare` +\n      `        checking number := 1;` +\n      `        begin` +\n      `          if (:new.\"${to}\" is null) then` +\n      `            while checking >= 1 loop` +\n      `              select \"${sequenceName}\".nextval into :new.\"${to}\" from dual;` +\n      `              select count(\"${to}\") into checking from \"${tableName}\"` +\n      `              where \"${to}\" = :new.\"${to}\";` +\n      `            end loop;` +\n      `          end if;` +\n      `        end;');` +\n      `    end if;` +\n      `  end if;` +\n      `END;`\n    );\n  }\n\n  createAutoIncrementTrigger(logger, tableName, schemaName) {\n    const tableQuoted = `\"${tableName}\"`;\n    const tableUnquoted = tableName;\n    const schemaQuoted = schemaName ? `\"${schemaName}\".` : '';\n    const constraintOwner = schemaName ? `'${schemaName}'` : 'cols.owner';\n    const triggerName = this.nameHelper.generateCombinedName(\n      logger,\n      'autoinc_trg',\n      tableName\n    );\n    const sequenceNameUnquoted = this.nameHelper.generateCombinedName(\n      logger,\n      'seq',\n      tableName\n    );\n    const sequenceNameQuoted = `\"${sequenceNameUnquoted}\"`;\n    return (\n      `DECLARE ` +\n      `PK_NAME VARCHAR(200); ` +\n      `BEGIN` +\n      `  EXECUTE IMMEDIATE ('CREATE SEQUENCE ${schemaQuoted}${sequenceNameQuoted}');` +\n      `  SELECT cols.column_name INTO PK_NAME` + // TODO : support autoincrement on table with multiple primary keys\n      `  FROM all_constraints cons, all_cons_columns cols` +\n      `  WHERE cons.constraint_type = 'P'` +\n      `  AND cons.constraint_name = cols.constraint_name` +\n      `  AND cons.owner = ${constraintOwner}` +\n      `  AND cols.table_name = '${tableUnquoted}';` +\n      `  execute immediate ('create or replace trigger ${schemaQuoted}\"${triggerName}\"` +\n      `  BEFORE INSERT on ${schemaQuoted}${tableQuoted}` +\n      `  for each row` +\n      `  declare` +\n      `  checking number := 1;` +\n      `  begin` +\n      `    if (:new.\"' || PK_NAME || '\" is null) then` +\n      `      while checking >= 1 loop` +\n      `        select ${schemaQuoted}${sequenceNameQuoted}.nextval into :new.\"' || PK_NAME || '\" from dual;` +\n      `        select count(\"' || PK_NAME || '\") into checking from ${schemaQuoted}${tableQuoted}` +\n      `        where \"' || PK_NAME || '\" = :new.\"' || PK_NAME || '\";` +\n      `      end loop;` +\n      `    end if;` +\n      `  end;'); ` +\n      `END;`\n    );\n  }\n\n  renameTableAndAutoIncrementTrigger(logger, tableName, to) {\n    const triggerName = this.nameHelper.generateCombinedName(\n      logger,\n      'autoinc_trg',\n      tableName\n    );\n    const sequenceName = this.nameHelper.generateCombinedName(\n      logger,\n      'seq',\n      tableName\n    );\n    const toTriggerName = this.nameHelper.generateCombinedName(\n      logger,\n      'autoinc_trg',\n      to\n    );\n    const toSequenceName = this.nameHelper.generateCombinedName(\n      logger,\n      'seq',\n      to\n    );\n    return (\n      `DECLARE ` +\n      `PK_NAME VARCHAR(200); ` +\n      `IS_AUTOINC NUMBER := 0; ` +\n      `BEGIN` +\n      `  EXECUTE IMMEDIATE ('RENAME \"${tableName}\" TO \"${to}\"');` +\n      `  SELECT COUNT(*) INTO IS_AUTOINC from \"USER_TRIGGERS\" where trigger_name = '${triggerName}';` +\n      `  IF (IS_AUTOINC > 0) THEN` +\n      `    EXECUTE IMMEDIATE ('DROP TRIGGER \"${triggerName}\"');` +\n      `    EXECUTE IMMEDIATE ('RENAME \"${sequenceName}\" TO \"${toSequenceName}\"');` +\n      `    SELECT cols.column_name INTO PK_NAME` +\n      `    FROM all_constraints cons, all_cons_columns cols` +\n      `    WHERE cons.constraint_type = 'P'` +\n      `    AND cons.constraint_name = cols.constraint_name` +\n      `    AND cons.owner = cols.owner` +\n      `    AND cols.table_name = '${to}';` +\n      `    EXECUTE IMMEDIATE ('create or replace trigger \"${toTriggerName}\"` +\n      `    BEFORE INSERT on \"${to}\" for each row` +\n      `      declare` +\n      `      checking number := 1;` +\n      `      begin` +\n      `        if (:new.\"' || PK_NAME || '\" is null) then` +\n      `          while checking >= 1 loop` +\n      `            select \"${toSequenceName}\".nextval into :new.\"' || PK_NAME || '\" from dual;` +\n      `            select count(\"' || PK_NAME || '\") into checking from \"${to}\"` +\n      `            where \"' || PK_NAME || '\" = :new.\"' || PK_NAME || '\";` +\n      `          end loop;` +\n      `        end if;` +\n      `      end;');` +\n      `  end if;` +\n      `END;`\n    );\n  }\n}\n\nmodule.exports = Trigger;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14642, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/oracle/schema/oracle-compiler.js"],"sourcesContent":["// Oracle Schema Compiler\n// -------\nconst SchemaCompiler = require('../../../schema/compiler');\nconst utils = require('../utils');\nconst Trigger = require('./internal/trigger');\n\nclass SchemaCompiler_Oracle extends SchemaCompiler {\n  constructor() {\n    super(...arguments);\n  }\n\n  // Rename a table on the schema.\n  renameTable(tableName, to) {\n    const trigger = new Trigger(this.client.version);\n    const renameTable = trigger.renameTableAndAutoIncrementTrigger(\n      this.client.logger,\n      tableName,\n      to\n    );\n    this.pushQuery(renameTable);\n  }\n\n  // Check whether a table exists on the query.\n  hasTable(tableName) {\n    this.pushQuery({\n      sql:\n        'select TABLE_NAME from USER_TABLES where TABLE_NAME = ' +\n        this.client.parameter(tableName, this.builder, this.bindingsHolder),\n      output(resp) {\n        return resp.length > 0;\n      },\n    });\n  }\n\n  // Check whether a column exists on the schema.\n  hasColumn(tableName, column) {\n    const sql =\n      `select COLUMN_NAME from ALL_TAB_COLUMNS ` +\n      `where TABLE_NAME = ${this.client.parameter(\n        tableName,\n        this.builder,\n        this.bindingsHolder\n      )} ` +\n      `and COLUMN_NAME = ${this.client.parameter(\n        column,\n        this.builder,\n        this.bindingsHolder\n      )}`;\n    this.pushQuery({ sql, output: (resp) => resp.length > 0 });\n  }\n\n  dropSequenceIfExists(sequenceName) {\n    const prefix = this.schema ? `\"${this.schema}\".` : '';\n    this.pushQuery(\n      utils.wrapSqlWithCatch(\n        `drop sequence ${prefix}${this.formatter.wrap(sequenceName)}`,\n        -2289\n      )\n    );\n  }\n\n  _dropRelatedSequenceIfExists(tableName) {\n    // removing the sequence that was possibly generated by increments() column\n    const nameHelper = new utils.NameHelper(this.client.version);\n    const sequenceName = nameHelper.generateCombinedName(\n      this.client.logger,\n      'seq',\n      tableName\n    );\n    this.dropSequenceIfExists(sequenceName);\n  }\n\n  dropTable(tableName) {\n    const prefix = this.schema ? `\"${this.schema}\".` : '';\n    this.pushQuery(`drop table ${prefix}${this.formatter.wrap(tableName)}`);\n\n    // removing the sequence that was possibly generated by increments() column\n    this._dropRelatedSequenceIfExists(tableName);\n  }\n\n  dropTableIfExists(tableName) {\n    this.dropObject(tableName, 'table');\n  }\n\n  dropViewIfExists(viewName) {\n    this.dropObject(viewName, 'view');\n  }\n\n  dropObject(objectName, type) {\n    const prefix = this.schema ? `\"${this.schema}\".` : '';\n    let errorCode = -942;\n    if (type === 'materialized view') {\n      // https://stackoverflow.com/a/1801453\n      errorCode = -12003;\n    }\n    this.pushQuery(\n      utils.wrapSqlWithCatch(\n        `drop ${type} ${prefix}${this.formatter.wrap(objectName)}`,\n        errorCode\n      )\n    );\n\n    // removing the sequence that was possibly generated by increments() column\n    this._dropRelatedSequenceIfExists(objectName);\n  }\n\n  refreshMaterializedView(viewName) {\n    return this.pushQuery({\n      sql: `BEGIN DBMS_MVIEW.REFRESH('${\n        this.schemaNameRaw ? this.schemaNameRaw + '.' : ''\n      }${viewName}'); END;`,\n    });\n  }\n\n  dropMaterializedView(viewName) {\n    this._dropView(viewName, false, true);\n  }\n\n  dropMaterializedViewIfExists(viewName) {\n    this.dropObject(viewName, 'materialized view');\n  }\n}\n\nmodule.exports = SchemaCompiler_Oracle;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14725, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/oracle/schema/oracle-columnbuilder.js"],"sourcesContent":["const ColumnBuilder = require('../../../schema/columnbuilder');\nconst toArray = require('lodash/toArray');\n\nclass ColumnBuilder_Oracle extends ColumnBuilder {\n  constructor() {\n    super(...arguments);\n  }\n\n  // checkIn added to the builder to allow the column compiler to change the\n  // order via the modifiers (\"check\" must be after \"default\")\n  checkIn() {\n    this._modifiers.checkIn = toArray(arguments);\n    return this;\n  }\n}\n\nmodule.exports = ColumnBuilder_Oracle;\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AAEN,MAAM,6BAA6B;IACjC,aAAc;QACZ,KAAK,IAAI;IACX;IAEA,0EAA0E;IAC1E,4DAA4D;IAC5D,UAAU;QACR,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,QAAQ;QAClC,OAAO,IAAI;IACb;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14744, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/oracle/schema/internal/incrementUtils.js"],"sourcesContent":["const Trigger = require('./trigger');\n\n// helper function for pushAdditional in increments() and bigincrements()\nfunction createAutoIncrementTriggerAndSequence(columnCompiler) {\n  const trigger = new Trigger(columnCompiler.client.version);\n\n  // TODO Add warning that sequence etc is created\n  columnCompiler.pushAdditional(function () {\n    const tableName = this.tableCompiler.tableNameRaw;\n    const schemaName = this.tableCompiler.schemaNameRaw;\n    const createTriggerSQL = trigger.createAutoIncrementTrigger(\n      this.client.logger,\n      tableName,\n      schemaName\n    );\n    this.pushQuery(createTriggerSQL);\n  });\n}\n\nmodule.exports = {\n  createAutoIncrementTriggerAndSequence,\n};\n"],"names":[],"mappings":"AAAA,MAAM;AAEN,yEAAyE;AACzE,SAAS,sCAAsC,cAAc;IAC3D,MAAM,UAAU,IAAI,QAAQ,eAAe,MAAM,CAAC,OAAO;IAEzD,gDAAgD;IAChD,eAAe,cAAc,CAAC;QAC5B,MAAM,YAAY,IAAI,CAAC,aAAa,CAAC,YAAY;QACjD,MAAM,aAAa,IAAI,CAAC,aAAa,CAAC,aAAa;QACnD,MAAM,mBAAmB,QAAQ,0BAA0B,CACzD,IAAI,CAAC,MAAM,CAAC,MAAM,EAClB,WACA;QAEF,IAAI,CAAC,SAAS,CAAC;IACjB;AACF;AAEA,OAAO,OAAO,GAAG;IACf;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14764, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/oracle/schema/oracle-columncompiler.js"],"sourcesContent":["const uniq = require('lodash/uniq');\nconst Raw = require('../../../raw');\nconst ColumnCompiler = require('../../../schema/columncompiler');\nconst {\n  createAutoIncrementTriggerAndSequence,\n} = require('./internal/incrementUtils');\nconst { toNumber } = require('../../../util/helpers');\n\n// Column Compiler\n// -------\n\nclass ColumnCompiler_Oracle extends ColumnCompiler {\n  constructor() {\n    super(...arguments);\n    this.modifiers = ['defaultTo', 'checkIn', 'nullable', 'comment'];\n  }\n\n  increments(options = { primaryKey: true }) {\n    createAutoIncrementTriggerAndSequence(this);\n    return (\n      'integer not null' +\n      (this.tableCompiler._canBeAddPrimaryKey(options) ? ' primary key' : '')\n    );\n  }\n\n  bigincrements(options = { primaryKey: true }) {\n    createAutoIncrementTriggerAndSequence(this);\n    return (\n      'number(20, 0) not null' +\n      (this.tableCompiler._canBeAddPrimaryKey(options) ? ' primary key' : '')\n    );\n  }\n\n  floating(precision) {\n    const parsedPrecision = toNumber(precision, 0);\n    return `float${parsedPrecision ? `(${parsedPrecision})` : ''}`;\n  }\n\n  double(precision, scale) {\n    // if (!precision) return 'number'; // TODO: Check If default is ok\n    return `number(${toNumber(precision, 8)}, ${toNumber(scale, 2)})`;\n  }\n\n  decimal(precision, scale) {\n    if (precision === null) return 'decimal';\n    return `decimal(${toNumber(precision, 8)}, ${toNumber(scale, 2)})`;\n  }\n\n  integer(length) {\n    return length ? `number(${toNumber(length, 11)})` : 'integer';\n  }\n\n  enu(allowed) {\n    allowed = uniq(allowed);\n    const maxLength = (allowed || []).reduce(\n      (maxLength, name) => Math.max(maxLength, String(name).length),\n      1\n    );\n\n    // implicitly add the enum values as checked values\n    this.columnBuilder._modifiers.checkIn = [allowed];\n\n    return `varchar2(${maxLength})`;\n  }\n\n  datetime(without) {\n    return without ? 'timestamp' : 'timestamp with time zone';\n  }\n\n  timestamp(without) {\n    return without ? 'timestamp' : 'timestamp with time zone';\n  }\n\n  bool() {\n    // implicitly add the check for 0 and 1\n    this.columnBuilder._modifiers.checkIn = [[0, 1]];\n    return 'number(1, 0)';\n  }\n\n  varchar(length) {\n    return `varchar2(${toNumber(length, 255)})`;\n  }\n\n  // Modifiers\n  // ------\n\n  comment(comment) {\n    const columnName = this.args[0] || this.defaults('columnName');\n\n    this.pushAdditional(function () {\n      this.pushQuery(\n        `comment on column ${this.tableCompiler.tableName()}.` +\n          this.formatter.wrap(columnName) +\n          \" is '\" +\n          (comment || '') +\n          \"'\"\n      );\n    }, comment);\n  }\n\n  checkIn(value) {\n    // TODO: Maybe accept arguments also as array\n    // TODO: value(s) should be escaped properly\n    if (value === undefined) {\n      return '';\n    } else if (value instanceof Raw) {\n      value = value.toQuery();\n    } else if (Array.isArray(value)) {\n      value = value.map((v) => `'${v}'`).join(', ');\n    } else {\n      value = `'${value}'`;\n    }\n    return `check (${this.formatter.wrap(this.args[0])} in (${value}))`;\n  }\n}\n\nColumnCompiler_Oracle.prototype.tinyint = 'smallint';\nColumnCompiler_Oracle.prototype.smallint = 'smallint';\nColumnCompiler_Oracle.prototype.mediumint = 'integer';\nColumnCompiler_Oracle.prototype.biginteger = 'number(20, 0)';\nColumnCompiler_Oracle.prototype.text = 'clob';\nColumnCompiler_Oracle.prototype.time = 'timestamp with time zone';\nColumnCompiler_Oracle.prototype.bit = 'clob';\nColumnCompiler_Oracle.prototype.json = 'clob';\n\nmodule.exports = ColumnCompiler_Oracle;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14873, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/oracle/schema/oracle-tablecompiler.js"],"sourcesContent":["/* eslint max-len:0 */\n\nconst utils = require('../utils');\nconst TableCompiler = require('../../../schema/tablecompiler');\nconst helpers = require('../../../util/helpers');\nconst Trigger = require('./internal/trigger');\nconst { isObject } = require('../../../util/is');\n\n// Table Compiler\n// ------\n\nclass TableCompiler_Oracle extends TableCompiler {\n  constructor() {\n    super(...arguments);\n  }\n\n  addColumns(columns, prefix) {\n    if (columns.sql.length > 0) {\n      prefix = prefix || this.addColumnsPrefix;\n\n      const columnSql = columns.sql;\n      const alter = this.lowerCase ? 'alter table ' : 'ALTER TABLE ';\n\n      let sql = `${alter}${this.tableName()} ${prefix}`;\n      if (columns.sql.length > 1) {\n        sql += `(${columnSql.join(', ')})`;\n      } else {\n        sql += columnSql.join(', ');\n      }\n\n      this.pushQuery({\n        sql,\n        bindings: columns.bindings,\n      });\n    }\n  }\n\n  // Compile a rename column command.\n  renameColumn(from, to) {\n    // Remove quotes around tableName\n    const tableName = this.tableName().slice(1, -1);\n    const trigger = new Trigger(this.client.version);\n    return this.pushQuery(\n      trigger.renameColumnTrigger(this.client.logger, tableName, from, to)\n    );\n  }\n\n  compileAdd(builder) {\n    const table = this.formatter.wrap(builder);\n    const columns = this.prefixArray('add column', this.getColumns(builder));\n    return this.pushQuery({\n      sql: `alter table ${table} ${columns.join(', ')}`,\n    });\n  }\n\n  // Adds the \"create\" query to the query sequence.\n  createQuery(columns, ifNot, like) {\n    const columnsSql =\n      like && this.tableNameLike()\n        ? ' as (select * from ' + this.tableNameLike() + ' where 0=1)'\n        : ' (' + columns.sql.join(', ') + this._addChecks() + ')';\n    const sql = `create table ${this.tableName()}${columnsSql}`;\n\n    this.pushQuery({\n      // catch \"name is already used by an existing object\" for workaround for \"if not exists\"\n      sql: ifNot ? utils.wrapSqlWithCatch(sql, -955) : sql,\n      bindings: columns.bindings,\n    });\n    if (this.single.comment) this.comment(this.single.comment);\n    if (like) {\n      this.addColumns(columns, this.addColumnsPrefix);\n    }\n  }\n\n  // Compiles the comment on the table.\n  comment(comment) {\n    this.pushQuery(`comment on table ${this.tableName()} is '${comment}'`);\n  }\n\n  dropColumn() {\n    const columns = helpers.normalizeArr.apply(null, arguments);\n    this.pushQuery(\n      `alter table ${this.tableName()} drop (${this.formatter.columnize(\n        columns\n      )})`\n    );\n  }\n\n  _indexCommand(type, tableName, columns) {\n    const nameHelper = new utils.NameHelper(this.client.version);\n    return this.formatter.wrap(\n      nameHelper.generateCombinedName(\n        this.client.logger,\n        type,\n        tableName,\n        columns\n      )\n    );\n  }\n\n  primary(columns, constraintName) {\n    let deferrable;\n    if (isObject(constraintName)) {\n      ({ constraintName, deferrable } = constraintName);\n    }\n    deferrable = deferrable ? ` deferrable initially ${deferrable}` : '';\n    constraintName = constraintName\n      ? this.formatter.wrap(constraintName)\n      : this.formatter.wrap(`${this.tableNameRaw}_pkey`);\n    const primaryCols = columns;\n    let incrementsCols = [];\n    if (this.grouped.columns) {\n      incrementsCols = this._getIncrementsColumnNames();\n      if (incrementsCols) {\n        incrementsCols.forEach((c) => {\n          if (!primaryCols.includes(c)) {\n            primaryCols.unshift(c);\n          }\n        });\n      }\n    }\n    this.pushQuery(\n      `alter table ${this.tableName()} add constraint ${constraintName} primary key (${this.formatter.columnize(\n        primaryCols\n      )})${deferrable}`\n    );\n  }\n\n  dropPrimary(constraintName) {\n    constraintName = constraintName\n      ? this.formatter.wrap(constraintName)\n      : this.formatter.wrap(this.tableNameRaw + '_pkey');\n    this.pushQuery(\n      `alter table ${this.tableName()} drop constraint ${constraintName}`\n    );\n  }\n\n  index(columns, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('index', this.tableNameRaw, columns);\n    this.pushQuery(\n      `create index ${indexName} on ${this.tableName()}` +\n        ' (' +\n        this.formatter.columnize(columns) +\n        ')'\n    );\n  }\n\n  dropIndex(columns, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('index', this.tableNameRaw, columns);\n    this.pushQuery(`drop index ${indexName}`);\n  }\n\n  unique(columns, indexName) {\n    let deferrable;\n    if (isObject(indexName)) {\n      ({ indexName, deferrable } = indexName);\n    }\n    deferrable = deferrable ? ` deferrable initially ${deferrable}` : '';\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('unique', this.tableNameRaw, columns);\n    this.pushQuery(\n      `alter table ${this.tableName()} add constraint ${indexName}` +\n        ' unique (' +\n        this.formatter.columnize(columns) +\n        ')' +\n        deferrable\n    );\n  }\n\n  dropUnique(columns, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('unique', this.tableNameRaw, columns);\n    this.pushQuery(\n      `alter table ${this.tableName()} drop constraint ${indexName}`\n    );\n  }\n\n  dropForeign(columns, indexName) {\n    indexName = indexName\n      ? this.formatter.wrap(indexName)\n      : this._indexCommand('foreign', this.tableNameRaw, columns);\n    this.pushQuery(\n      `alter table ${this.tableName()} drop constraint ${indexName}`\n    );\n  }\n}\n\nTableCompiler_Oracle.prototype.addColumnsPrefix = 'add ';\nTableCompiler_Oracle.prototype.alterColumnsPrefix = 'modify ';\n\nmodule.exports = TableCompiler_Oracle;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15000, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/oracle/index.js"],"sourcesContent":["// Oracle Client\n// -------\nconst { ReturningHelper } = require('./utils');\nconst { isConnectionError } = require('./utils');\nconst Client = require('../../client');\nconst SchemaCompiler = require('./schema/oracle-compiler');\nconst ColumnBuilder = require('./schema/oracle-columnbuilder');\nconst ColumnCompiler = require('./schema/oracle-columncompiler');\nconst TableCompiler = require('./schema/oracle-tablecompiler');\n\n// Always initialize with the \"QueryBuilder\" and \"QueryCompiler\"\n// objects, which extend the base 'lib/query/builder' and\n// 'lib/query/compiler', respectively.\nclass Client_Oracle extends Client {\n  schemaCompiler() {\n    return new SchemaCompiler(this, ...arguments);\n  }\n\n  columnBuilder() {\n    return new ColumnBuilder(this, ...arguments);\n  }\n\n  columnCompiler() {\n    return new ColumnCompiler(this, ...arguments);\n  }\n\n  tableCompiler() {\n    return new TableCompiler(this, ...arguments);\n  }\n\n  // Return the database for the Oracle client.\n  database() {\n    return this.connectionSettings.database;\n  }\n\n  // Position the bindings for the query.\n  positionBindings(sql) {\n    let questionCount = 0;\n    return sql.replace(/\\?/g, function () {\n      questionCount += 1;\n      return `:${questionCount}`;\n    });\n  }\n\n  _stream(connection, obj, stream, options) {\n    if (!obj.sql) throw new Error('The query is empty');\n\n    return new Promise(function (resolver, rejecter) {\n      stream.on('error', (err) => {\n        if (isConnectionError(err)) {\n          connection.__knex__disposed = err;\n        }\n        rejecter(err);\n      });\n      stream.on('end', resolver);\n      const queryStream = connection.queryStream(\n        obj.sql,\n        obj.bindings,\n        options\n      );\n      queryStream.pipe(stream);\n      queryStream.on('error', function (error) {\n        rejecter(error);\n        stream.emit('error', error);\n      });\n    });\n  }\n\n  // Formatter part\n\n  alias(first, second) {\n    return first + ' ' + second;\n  }\n\n  parameter(value, builder, formatter) {\n    // Returning helper uses always ROWID as string\n    if (value instanceof ReturningHelper && this.driver) {\n      value = new this.driver.OutParam(this.driver.OCCISTRING);\n    } else if (typeof value === 'boolean') {\n      value = value ? 1 : 0;\n    }\n    return super.parameter(value, builder, formatter);\n  }\n}\n\nObject.assign(Client_Oracle.prototype, {\n  dialect: 'oracle',\n\n  driverName: 'oracle',\n});\n\nmodule.exports = Client_Oracle;\n"],"names":[],"mappings":"AAAA,gBAAgB;AAChB,UAAU;AACV,MAAM,EAAE,eAAe,EAAE;AACzB,MAAM,EAAE,iBAAiB,EAAE;AAC3B,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AAEN,gEAAgE;AAChE,yDAAyD;AACzD,sCAAsC;AACtC,MAAM,sBAAsB;IAC1B,iBAAiB;QACf,OAAO,IAAI,eAAe,IAAI,KAAK;IACrC;IAEA,gBAAgB;QACd,OAAO,IAAI,cAAc,IAAI,KAAK;IACpC;IAEA,iBAAiB;QACf,OAAO,IAAI,eAAe,IAAI,KAAK;IACrC;IAEA,gBAAgB;QACd,OAAO,IAAI,cAAc,IAAI,KAAK;IACpC;IAEA,6CAA6C;IAC7C,WAAW;QACT,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ;IACzC;IAEA,uCAAuC;IACvC,iBAAiB,GAAG,EAAE;QACpB,IAAI,gBAAgB;QACpB,OAAO,IAAI,OAAO,CAAC,OAAO;YACxB,iBAAiB;YACjB,OAAO,CAAC,CAAC,EAAE,eAAe;QAC5B;IACF;IAEA,QAAQ,UAAU,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE;QACxC,IAAI,CAAC,IAAI,GAAG,EAAE,MAAM,IAAI,MAAM;QAE9B,OAAO,IAAI,QAAQ,SAAU,QAAQ,EAAE,QAAQ;YAC7C,OAAO,EAAE,CAAC,SAAS,CAAC;gBAClB,IAAI,kBAAkB,MAAM;oBAC1B,WAAW,gBAAgB,GAAG;gBAChC;gBACA,SAAS;YACX;YACA,OAAO,EAAE,CAAC,OAAO;YACjB,MAAM,cAAc,WAAW,WAAW,CACxC,IAAI,GAAG,EACP,IAAI,QAAQ,EACZ;YAEF,YAAY,IAAI,CAAC;YACjB,YAAY,EAAE,CAAC,SAAS,SAAU,KAAK;gBACrC,SAAS;gBACT,OAAO,IAAI,CAAC,SAAS;YACvB;QACF;IACF;IAEA,iBAAiB;IAEjB,MAAM,KAAK,EAAE,MAAM,EAAE;QACnB,OAAO,QAAQ,MAAM;IACvB;IAEA,UAAU,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE;QACnC,+CAA+C;QAC/C,IAAI,iBAAiB,mBAAmB,IAAI,CAAC,MAAM,EAAE;YACnD,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU;QACzD,OAAO,IAAI,OAAO,UAAU,WAAW;YACrC,QAAQ,QAAQ,IAAI;QACtB;QACA,OAAO,KAAK,CAAC,UAAU,OAAO,SAAS;IACzC;AACF;AAEA,OAAO,MAAM,CAAC,cAAc,SAAS,EAAE;IACrC,SAAS;IAET,YAAY;AACd;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15079, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/oracle/query/oracle-querycompiler.js"],"sourcesContent":["/* eslint max-len:0 */\n\n// Oracle Query Builder & Compiler\n// ------\nconst compact = require('lodash/compact');\nconst identity = require('lodash/identity');\nconst isEmpty = require('lodash/isEmpty');\nconst isPlainObject = require('lodash/isPlainObject');\nconst reduce = require('lodash/reduce');\nconst QueryCompiler = require('../../../query/querycompiler');\nconst { ReturningHelper } = require('../utils');\nconst { isString } = require('../../../util/is');\n\nconst components = [\n  'comments',\n  'columns',\n  'join',\n  'where',\n  'union',\n  'group',\n  'having',\n  'order',\n  'lock',\n];\n\n// Query Compiler\n// -------\n\n// Set the \"Formatter\" to use for the queries,\n// ensuring that all parameterized values (even across sub-queries)\n// are properly built into the same query.\nclass QueryCompiler_Oracle extends QueryCompiler {\n  constructor(client, builder, formatter) {\n    super(client, builder, formatter);\n\n    const { onConflict } = this.single;\n    if (onConflict) {\n      throw new Error('.onConflict() is not supported for oracledb.');\n    }\n\n    // Compiles the `select` statement, or nested sub-selects\n    // by calling each of the component compilers, trimming out\n    // the empties, and returning a generated query string.\n    this.first = this.select;\n  }\n\n  // Compiles an \"insert\" query, allowing for multiple\n  // inserts using a single query statement.\n  insert() {\n    let insertValues = this.single.insert || [];\n    let { returning } = this.single;\n\n    if (!Array.isArray(insertValues) && isPlainObject(this.single.insert)) {\n      insertValues = [this.single.insert];\n    }\n\n    // always wrap returning argument in array\n    if (returning && !Array.isArray(returning)) {\n      returning = [returning];\n    }\n\n    if (\n      Array.isArray(insertValues) &&\n      insertValues.length === 1 &&\n      isEmpty(insertValues[0])\n    ) {\n      return this._addReturningToSqlAndConvert(\n        `insert into ${this.tableName} (${this.formatter.wrap(\n          this.single.returning\n        )}) values (default)`,\n        returning,\n        this.tableName\n      );\n    }\n\n    if (\n      isEmpty(this.single.insert) &&\n      typeof this.single.insert !== 'function'\n    ) {\n      return '';\n    }\n\n    const insertData = this._prepInsert(insertValues);\n\n    const sql = {};\n\n    if (isString(insertData)) {\n      return this._addReturningToSqlAndConvert(\n        `insert into ${this.tableName} ${insertData}`,\n        returning\n      );\n    }\n\n    if (insertData.values.length === 1) {\n      return this._addReturningToSqlAndConvert(\n        `insert into ${this.tableName} (${this.formatter.columnize(\n          insertData.columns\n        )}) values (${this.client.parameterize(\n          insertData.values[0],\n          undefined,\n          this.builder,\n          this.bindingsHolder\n        )})`,\n        returning,\n        this.tableName\n      );\n    }\n\n    const insertDefaultsOnly = insertData.columns.length === 0;\n\n    sql.sql =\n      'begin ' +\n      insertData.values\n        .map((value) => {\n          let returningHelper;\n          const parameterizedValues = !insertDefaultsOnly\n            ? this.client.parameterize(\n                value,\n                this.client.valueForUndefined,\n                this.builder,\n                this.bindingsHolder\n              )\n            : '';\n          const returningValues = Array.isArray(returning)\n            ? returning\n            : [returning];\n          let subSql = `insert into ${this.tableName} `;\n\n          if (returning) {\n            returningHelper = new ReturningHelper(returningValues.join(':'));\n            sql.outParams = (sql.outParams || []).concat(returningHelper);\n          }\n\n          if (insertDefaultsOnly) {\n            // no columns given so only the default value\n            subSql += `(${this.formatter.wrap(\n              this.single.returning\n            )}) values (default)`;\n          } else {\n            subSql += `(${this.formatter.columnize(\n              insertData.columns\n            )}) values (${parameterizedValues})`;\n          }\n          subSql += returning\n            ? ` returning ROWID into ${this.client.parameter(\n                returningHelper,\n                this.builder,\n                this.bindingsHolder\n              )}`\n            : '';\n\n          // pre bind position because subSql is an execute immediate parameter\n          // later position binding will only convert the ? params\n\n          subSql = this.formatter.client.positionBindings(subSql);\n\n          const parameterizedValuesWithoutDefault = parameterizedValues\n            .replace('DEFAULT, ', '')\n            .replace(', DEFAULT', '');\n          return (\n            `execute immediate '${subSql.replace(/'/g, \"''\")}` +\n            (parameterizedValuesWithoutDefault || returning ? \"' using \" : '') +\n            parameterizedValuesWithoutDefault +\n            (parameterizedValuesWithoutDefault && returning ? ', ' : '') +\n            (returning ? 'out ?' : '') +\n            ';'\n          );\n        })\n        .join(' ') +\n      'end;';\n\n    if (returning) {\n      sql.returning = returning;\n      // generate select statement with special order by to keep the order because 'in (..)' may change the order\n      sql.returningSql =\n        `select ${this.formatter.columnize(returning)}` +\n        ' from ' +\n        this.tableName +\n        ' where ROWID in (' +\n        sql.outParams.map((v, i) => `:${i + 1}`).join(', ') +\n        ')' +\n        ' order by case ROWID ' +\n        sql.outParams\n          .map((v, i) => `when CHARTOROWID(:${i + 1}) then ${i}`)\n          .join(' ') +\n        ' end';\n    }\n\n    return sql;\n  }\n\n  // Update method, including joins, wheres, order & limits.\n  update() {\n    const updates = this._prepUpdate(this.single.update);\n    const where = this.where();\n    let { returning } = this.single;\n    const sql =\n      `update ${this.tableName}` +\n      ' set ' +\n      updates.join(', ') +\n      (where ? ` ${where}` : '');\n\n    if (!returning) {\n      return sql;\n    }\n\n    // always wrap returning argument in array\n    if (!Array.isArray(returning)) {\n      returning = [returning];\n    }\n\n    return this._addReturningToSqlAndConvert(sql, returning, this.tableName);\n  }\n\n  // Compiles a `truncate` query.\n  truncate() {\n    return `truncate table ${this.tableName}`;\n  }\n\n  forUpdate() {\n    return 'for update';\n  }\n\n  forShare() {\n    // lock for share is not directly supported by oracle\n    // use LOCK TABLE .. IN SHARE MODE; instead\n    this.client.logger.warn(\n      'lock for share is not supported by oracle dialect'\n    );\n    return '';\n  }\n\n  // Compiles a `columnInfo` query.\n  columnInfo() {\n    const column = this.single.columnInfo;\n\n    // The user may have specified a custom wrapIdentifier function in the config. We\n    // need to run the identifiers through that function, but not format them as\n    // identifiers otherwise.\n    const table = this.client.customWrapIdentifier(this.single.table, identity);\n\n    // Node oracle drivers doesn't support LONG type (which is data_default type)\n    const sql = `select * from xmltable( '/ROWSET/ROW'\n      passing dbms_xmlgen.getXMLType('\n      select char_col_decl_length, column_name, data_type, data_default, nullable\n      from all_tab_columns where table_name = ''${table}'' ')\n      columns\n      CHAR_COL_DECL_LENGTH number, COLUMN_NAME varchar2(200), DATA_TYPE varchar2(106),\n      DATA_DEFAULT clob, NULLABLE varchar2(1))`;\n\n    return {\n      sql: sql,\n      output(resp) {\n        const out = reduce(\n          resp,\n          function (columns, val) {\n            columns[val.COLUMN_NAME] = {\n              type: val.DATA_TYPE,\n              defaultValue: val.DATA_DEFAULT,\n              maxLength: val.CHAR_COL_DECL_LENGTH,\n              nullable: val.NULLABLE === 'Y',\n            };\n            return columns;\n          },\n          {}\n        );\n        return (column && out[column]) || out;\n      },\n    };\n  }\n\n  select() {\n    let query = this.with();\n    const statements = components.map((component) => {\n      return this[component]();\n    });\n    query += compact(statements).join(' ');\n    return this._surroundQueryWithLimitAndOffset(query);\n  }\n\n  aggregate(stmt) {\n    return this._aggregate(stmt, { aliasSeparator: ' ' });\n  }\n\n  // for single commands only\n  _addReturningToSqlAndConvert(sql, returning, tableName) {\n    const res = {\n      sql,\n    };\n\n    if (!returning) {\n      return res;\n    }\n\n    const returningValues = Array.isArray(returning) ? returning : [returning];\n    const returningHelper = new ReturningHelper(returningValues.join(':'));\n    res.sql =\n      sql +\n      ' returning ROWID into ' +\n      this.client.parameter(returningHelper, this.builder, this.bindingsHolder);\n    res.returningSql = `select ${this.formatter.columnize(\n      returning\n    )} from ${tableName} where ROWID = :1`;\n    res.outParams = [returningHelper];\n    res.returning = returning;\n    return res;\n  }\n\n  _surroundQueryWithLimitAndOffset(query) {\n    let { limit } = this.single;\n    const { offset } = this.single;\n    const hasLimit = limit || limit === 0 || limit === '0';\n    limit = +limit;\n\n    if (!hasLimit && !offset) return query;\n    query = query || '';\n\n    if (hasLimit && !offset) {\n      return `select * from (${query}) where rownum <= ${this._getValueOrParameterFromAttribute(\n        'limit',\n        limit\n      )}`;\n    }\n\n    const endRow = +offset + (hasLimit ? limit : 10000000000000);\n\n    return (\n      'select * from ' +\n      '(select row_.*, ROWNUM rownum_ from (' +\n      query +\n      ') row_ ' +\n      'where rownum <= ' +\n      (this.single.skipBinding['offset']\n        ? endRow\n        : this.client.parameter(endRow, this.builder, this.bindingsHolder)) +\n      ') ' +\n      'where rownum_ > ' +\n      this._getValueOrParameterFromAttribute('offset', offset)\n    );\n  }\n}\n\nmodule.exports = QueryCompiler_Oracle;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15293, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/oracledb/utils.js"],"sourcesContent":["const Utils = require('../oracle/utils');\nconst { promisify } = require('util');\nconst stream = require('stream');\n\nfunction BlobHelper(columnName, value) {\n  this.columnName = columnName;\n  this.value = value;\n  this.returning = false;\n}\n\nBlobHelper.prototype.toString = function () {\n  return '[object BlobHelper:' + this.columnName + ']';\n};\n\n/**\n * @param stream\n * @param {'string' | 'buffer'} type\n */\nfunction readStream(stream, type) {\n  return new Promise((resolve, reject) => {\n    let data = type === 'string' ? '' : Buffer.alloc(0);\n\n    stream.on('error', function (err) {\n      reject(err);\n    });\n    stream.on('data', function (chunk) {\n      if (type === 'string') {\n        data += chunk;\n      } else {\n        data = Buffer.concat([data, chunk]);\n      }\n    });\n    stream.on('end', function () {\n      resolve(data);\n    });\n  });\n}\n\nconst lobProcessing = function (stream) {\n  const oracledb = require('oracledb');\n\n  /**\n   * @type 'string' | 'buffer'\n   */\n  let type;\n\n  if (stream.type) {\n    // v1.2-v4\n    if (stream.type === oracledb.BLOB) {\n      type = 'buffer';\n    } else if (stream.type === oracledb.CLOB) {\n      type = 'string';\n    }\n  } else if (stream.iLob) {\n    // v1\n    if (stream.iLob.type === oracledb.CLOB) {\n      type = 'string';\n    } else if (stream.iLob.type === oracledb.BLOB) {\n      type = 'buffer';\n    }\n  } else {\n    throw new Error('Unrecognized oracledb lob stream type');\n  }\n  if (type === 'string') {\n    stream.setEncoding('utf-8');\n  }\n  return readStream(stream, type);\n};\n\nfunction monkeyPatchConnection(connection, client) {\n  // Connection is already monkey-patched\n  if (connection.executeAsync) {\n    return;\n  }\n\n  connection.commitAsync = function () {\n    return new Promise((commitResolve, commitReject) => {\n      this.commit(function (err) {\n        if (err) {\n          return commitReject(err);\n        }\n        commitResolve();\n      });\n    });\n  };\n  connection.rollbackAsync = function () {\n    return new Promise((rollbackResolve, rollbackReject) => {\n      this.rollback(function (err) {\n        if (err) {\n          return rollbackReject(err);\n        }\n        rollbackResolve();\n      });\n    });\n  };\n  const fetchAsync = promisify(function (sql, bindParams, options, cb) {\n    options = options || {};\n    options.outFormat = client.driver.OUT_FORMAT_OBJECT || client.driver.OBJECT;\n    if (!options.outFormat) {\n      throw new Error('not found oracledb.outFormat constants');\n    }\n    if (options.resultSet) {\n      connection.execute(\n        sql,\n        bindParams || [],\n        options,\n        function (err, result) {\n          if (err) {\n            if (Utils.isConnectionError(err)) {\n              connection.close().catch(function (err) {});\n              connection.__knex__disposed = err;\n            }\n            return cb(err);\n          }\n          const fetchResult = { rows: [], resultSet: result.resultSet };\n          const numRows = 100;\n          const fetchRowsFromRS = function (connection, resultSet, numRows) {\n            resultSet.getRows(numRows, function (err, rows) {\n              if (err) {\n                if (Utils.isConnectionError(err)) {\n                  connection.close().catch(function (err) {});\n                  connection.__knex__disposed = err;\n                }\n                resultSet.close(function () {\n                  return cb(err);\n                });\n              } else if (rows.length === 0) {\n                return cb(null, fetchResult);\n              } else if (rows.length > 0) {\n                if (rows.length === numRows) {\n                  fetchResult.rows = fetchResult.rows.concat(rows);\n                  fetchRowsFromRS(connection, resultSet, numRows);\n                } else {\n                  fetchResult.rows = fetchResult.rows.concat(rows);\n                  return cb(null, fetchResult);\n                }\n              }\n            });\n          };\n          fetchRowsFromRS(connection, result.resultSet, numRows);\n        }\n      );\n    } else {\n      connection.execute(\n        sql,\n        bindParams || [],\n        options,\n        function (err, result) {\n          if (err) {\n            // dispose the connection on connection error\n            if (Utils.isConnectionError(err)) {\n              connection.close().catch(function (err) {});\n              connection.__knex__disposed = err;\n            }\n            return cb(err);\n          }\n\n          return cb(null, result);\n        }\n      );\n    }\n  });\n  connection.executeAsync = function (sql, bindParams, options) {\n    // Read all lob\n    return fetchAsync(sql, bindParams, options).then(async (results) => {\n      const closeResultSet = () => {\n        return results.resultSet\n          ? promisify(results.resultSet.close).call(results.resultSet)\n          : Promise.resolve();\n      };\n\n      // Collect LOBs to read\n      const lobs = [];\n      if (results.rows) {\n        if (Array.isArray(results.rows)) {\n          for (let i = 0; i < results.rows.length; i++) {\n            // Iterate through the rows\n            const row = results.rows[i];\n            for (const column in row) {\n              if (row[column] instanceof stream.Readable) {\n                lobs.push({ index: i, key: column, stream: row[column] });\n              }\n            }\n          }\n        }\n      }\n\n      try {\n        for (const lob of lobs) {\n          // todo should be fetchAsString/fetchAsBuffer polyfill only\n          results.rows[lob.index][lob.key] = await lobProcessing(lob.stream);\n        }\n      } catch (e) {\n        await closeResultSet().catch(() => {});\n\n        throw e;\n      }\n\n      await closeResultSet();\n\n      return results;\n    });\n  };\n}\n\nUtils.BlobHelper = BlobHelper;\nUtils.monkeyPatchConnection = monkeyPatchConnection;\nmodule.exports = Utils;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15490, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/oracledb/query/oracledb-querycompiler.js"],"sourcesContent":["const clone = require('lodash/clone');\nconst each = require('lodash/each');\nconst isEmpty = require('lodash/isEmpty');\nconst isPlainObject = require('lodash/isPlainObject');\nconst Oracle_Compiler = require('../../oracle/query/oracle-querycompiler');\nconst ReturningHelper = require('../utils').ReturningHelper;\nconst BlobHelper = require('../utils').BlobHelper;\nconst { isString } = require('../../../util/is');\nconst {\n  columnize: columnize_,\n} = require('../../../formatter/wrappingFormatter');\n\nclass Oracledb_Compiler extends Oracle_Compiler {\n  // Compiles an \"insert\" query, allowing for multiple\n  // inserts using a single query statement.\n  insert() {\n    const self = this;\n    const outBindPrep = this._prepOutbindings(\n      this.single.insert,\n      this.single.returning\n    );\n    const outBinding = outBindPrep.outBinding;\n    const returning = outBindPrep.returning;\n    const insertValues = outBindPrep.values;\n\n    if (\n      Array.isArray(insertValues) &&\n      insertValues.length === 1 &&\n      isEmpty(insertValues[0])\n    ) {\n      const returningFragment = this.single.returning\n        ? ' (' + this.formatter.wrap(this.single.returning) + ')'\n        : '';\n\n      return this._addReturningToSqlAndConvert(\n        'insert into ' +\n          this.tableName +\n          returningFragment +\n          ' values (default)',\n        outBinding[0],\n        this.tableName,\n        returning\n      );\n    }\n\n    if (\n      isEmpty(this.single.insert) &&\n      typeof this.single.insert !== 'function'\n    ) {\n      return '';\n    }\n\n    const insertData = this._prepInsert(insertValues);\n\n    const sql = {};\n\n    if (isString(insertData)) {\n      return this._addReturningToSqlAndConvert(\n        'insert into ' + this.tableName + ' ' + insertData,\n        outBinding[0],\n        this.tableName,\n        returning\n      );\n    }\n\n    if (insertData.values.length === 1) {\n      return this._addReturningToSqlAndConvert(\n        'insert into ' +\n          this.tableName +\n          ' (' +\n          this.formatter.columnize(insertData.columns) +\n          ') values (' +\n          this.client.parameterize(\n            insertData.values[0],\n            undefined,\n            this.builder,\n            this.bindingsHolder\n          ) +\n          ')',\n        outBinding[0],\n        this.tableName,\n        returning\n      );\n    }\n\n    const insertDefaultsOnly = insertData.columns.length === 0;\n    sql.returning = returning;\n    sql.sql =\n      'begin ' +\n      insertData.values\n        .map(function (value, index) {\n          const parameterizedValues = !insertDefaultsOnly\n            ? self.client.parameterize(\n                value,\n                self.client.valueForUndefined,\n                self.builder,\n                self.bindingsHolder\n              )\n            : '';\n          let subSql = 'insert into ' + self.tableName;\n\n          if (insertDefaultsOnly) {\n            // No columns given so only the default value\n            subSql +=\n              ' (' +\n              self.formatter.wrap(self.single.returning) +\n              ') values (default)';\n          } else {\n            subSql +=\n              ' (' +\n              self.formatter.columnize(insertData.columns) +\n              ') values (' +\n              parameterizedValues +\n              ')';\n          }\n\n          let returningClause = '';\n          let intoClause = '';\n          // ToDo review if this code is still needed or could be dropped\n          // eslint-disable-next-line no-unused-vars\n          let usingClause = '';\n          let outClause = '';\n\n          each(value, function (val) {\n            if (!(val instanceof BlobHelper)) {\n              usingClause += ' ?,';\n            }\n          });\n          // eslint-disable-next-line no-unused-vars\n          usingClause = usingClause.slice(0, -1);\n\n          // Build returning and into clauses\n          outBinding[index].forEach(function (ret) {\n            const columnName = ret.columnName || ret;\n            returningClause += self.formatter.wrap(columnName) + ',';\n            intoClause += ' ?,';\n            outClause += ' out ?,';\n\n            // Add Helpers to bindings\n            if (ret instanceof BlobHelper) {\n              return self.formatter.bindings.push(ret);\n            }\n            self.formatter.bindings.push(new ReturningHelper(columnName));\n          });\n\n          // Strip last comma\n          returningClause = returningClause.slice(0, -1);\n          intoClause = intoClause.slice(0, -1);\n          outClause = outClause.slice(0, -1);\n\n          if (returningClause && intoClause) {\n            subSql += ' returning ' + returningClause + ' into' + intoClause;\n          }\n\n          // Pre bind position because subSql is an execute immediate parameter\n          // later position binding will only convert the ? params\n          subSql = self.formatter.client.positionBindings(subSql);\n          const parameterizedValuesWithoutDefaultAndBlob = parameterizedValues\n            .replace(/DEFAULT, /g, '')\n            .replace(/, DEFAULT/g, '')\n            .replace('EMPTY_BLOB(), ', '')\n            .replace(', EMPTY_BLOB()', '');\n          return (\n            \"execute immediate '\" +\n            subSql.replace(/'/g, \"''\") +\n            (parameterizedValuesWithoutDefaultAndBlob || value\n              ? \"' using \"\n              : '') +\n            parameterizedValuesWithoutDefaultAndBlob +\n            (parameterizedValuesWithoutDefaultAndBlob && outClause ? ',' : '') +\n            outClause +\n            ';'\n          );\n        })\n        .join(' ') +\n      'end;';\n\n    sql.outBinding = outBinding;\n    if (returning[0] === '*') {\n      // Generate select statement with special order by\n      // to keep the order because 'in (..)' may change the order\n      sql.returningSql = function () {\n        return (\n          'select * from ' +\n          self.tableName +\n          ' where ROWID in (' +\n          this.outBinding\n            .map(function (v, i) {\n              return ':' + (i + 1);\n            })\n            .join(', ') +\n          ')' +\n          ' order by case ROWID ' +\n          this.outBinding\n            .map(function (v, i) {\n              return 'when CHARTOROWID(:' + (i + 1) + ') then ' + i;\n            })\n            .join(' ') +\n          ' end'\n        );\n      };\n    }\n\n    return sql;\n  }\n\n  with() {\n    // WITH RECURSIVE is a syntax error in Oracle SQL.\n    // So mark all statements as non-recursive, generate the SQL, then restore.\n    // This approach ensures any changes in base class with() get propagated here.\n    const undoList = [];\n    if (this.grouped.with) {\n      for (const stmt of this.grouped.with) {\n        if (stmt.recursive) {\n          undoList.push(stmt);\n          stmt.recursive = false;\n        }\n      }\n    }\n\n    const result = super.with();\n\n    // Restore the recursive markings, in case this same query gets cloned and passed to other drivers.\n    for (const stmt of undoList) {\n      stmt.recursive = true;\n    }\n    return result;\n  }\n\n  _addReturningToSqlAndConvert(sql, outBinding, tableName, returning) {\n    const self = this;\n    const res = {\n      sql: sql,\n    };\n\n    if (!outBinding) {\n      return res;\n    }\n    const returningValues = Array.isArray(outBinding)\n      ? outBinding\n      : [outBinding];\n    let returningClause = '';\n    let intoClause = '';\n    // Build returning and into clauses\n    returningValues.forEach(function (ret) {\n      const columnName = ret.columnName || ret;\n      returningClause += self.formatter.wrap(columnName) + ',';\n      intoClause += '?,';\n\n      // Add Helpers to bindings\n      if (ret instanceof BlobHelper) {\n        return self.formatter.bindings.push(ret);\n      }\n      self.formatter.bindings.push(new ReturningHelper(columnName));\n    });\n    res.sql = sql;\n\n    // Strip last comma\n    returningClause = returningClause.slice(0, -1);\n    intoClause = intoClause.slice(0, -1);\n    if (returningClause && intoClause) {\n      res.sql += ' returning ' + returningClause + ' into ' + intoClause;\n    }\n    res.outBinding = [outBinding];\n    if (returning[0] === '*') {\n      res.returningSql = function () {\n        return 'select * from ' + self.tableName + ' where ROWID = :1';\n      };\n    }\n    res.returning = returning;\n\n    return res;\n  }\n\n  _prepOutbindings(paramValues, paramReturning) {\n    const result = {};\n    let params = paramValues || [];\n    let returning = paramReturning || [];\n    if (!Array.isArray(params) && isPlainObject(paramValues)) {\n      params = [params];\n    }\n    // Always wrap returning argument in array\n    if (returning && !Array.isArray(returning)) {\n      returning = [returning];\n    }\n\n    const outBinding = [];\n    // Handle Buffer value as Blob\n    each(params, function (values, index) {\n      if (returning[0] === '*') {\n        outBinding[index] = ['ROWID'];\n      } else {\n        outBinding[index] = clone(returning);\n      }\n      each(values, function (value, key) {\n        if (value instanceof Buffer) {\n          values[key] = new BlobHelper(key, value);\n\n          // Delete blob duplicate in returning\n          const blobIndex = outBinding[index].indexOf(key);\n          if (blobIndex >= 0) {\n            outBinding[index].splice(blobIndex, 1);\n            values[key].returning = true;\n          }\n          outBinding[index].push(values[key]);\n        }\n        if (value === undefined) {\n          delete params[index][key];\n        }\n      });\n    });\n    result.returning = returning;\n    result.outBinding = outBinding;\n    result.values = params;\n    return result;\n  }\n\n  _groupOrder(item, type) {\n    return super._groupOrderNulls(item, type);\n  }\n\n  update() {\n    const self = this;\n    const sql = {};\n    const outBindPrep = this._prepOutbindings(\n      this.single.update || this.single.counter,\n      this.single.returning\n    );\n    const outBinding = outBindPrep.outBinding;\n    const returning = outBindPrep.returning;\n\n    const updates = this._prepUpdate(this.single.update);\n    const where = this.where();\n\n    let returningClause = '';\n    let intoClause = '';\n\n    if (isEmpty(updates) && typeof this.single.update !== 'function') {\n      return '';\n    }\n\n    // Build returning and into clauses\n    outBinding.forEach(function (out) {\n      out.forEach(function (ret) {\n        const columnName = ret.columnName || ret;\n        returningClause += self.formatter.wrap(columnName) + ',';\n        intoClause += ' ?,';\n\n        // Add Helpers to bindings\n        if (ret instanceof BlobHelper) {\n          return self.formatter.bindings.push(ret);\n        }\n        self.formatter.bindings.push(new ReturningHelper(columnName));\n      });\n    });\n    // Strip last comma\n    returningClause = returningClause.slice(0, -1);\n    intoClause = intoClause.slice(0, -1);\n\n    sql.outBinding = outBinding;\n    sql.returning = returning;\n    sql.sql =\n      'update ' +\n      this.tableName +\n      ' set ' +\n      updates.join(', ') +\n      (where ? ' ' + where : '');\n    if (outBinding.length && !isEmpty(outBinding[0])) {\n      sql.sql += ' returning ' + returningClause + ' into' + intoClause;\n    }\n    if (returning[0] === '*') {\n      sql.returningSql = function () {\n        let sql = 'select * from ' + self.tableName;\n        const modifiedRowsCount = this.rowsAffected.length || this.rowsAffected;\n        let returningSqlIn = ' where ROWID in (';\n        let returningSqlOrderBy = ') order by case ROWID ';\n\n        // Needs special order by because in(...) change result order\n        for (let i = 0; i < modifiedRowsCount; i++) {\n          if (this.returning[0] === '*') {\n            returningSqlIn += ':' + (i + 1) + ', ';\n            returningSqlOrderBy +=\n              'when CHARTOROWID(:' + (i + 1) + ') then ' + i + ' ';\n          }\n        }\n        if (this.returning[0] === '*') {\n          this.returning = this.returning.slice(0, -1);\n          returningSqlIn = returningSqlIn.slice(0, -2);\n          returningSqlOrderBy = returningSqlOrderBy.slice(0, -1);\n        }\n        return (sql += returningSqlIn + returningSqlOrderBy + ' end');\n      };\n    }\n\n    return sql;\n  }\n\n  _jsonPathWrap(extraction) {\n    return `'${extraction.path || extraction[1]}'`;\n  }\n\n  // Json functions\n  jsonExtract(params) {\n    return this._jsonExtract(\n      params.singleValue ? 'json_value' : 'json_query',\n      params\n    );\n  }\n\n  jsonSet(params) {\n    return `json_transform(${columnize_(\n      params.column,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    )}, set ${this.client.parameter(\n      params.path,\n      this.builder,\n      this.bindingsHolder\n    )} = ${this.client.parameter(\n      params.value,\n      this.builder,\n      this.bindingsHolder\n    )})`;\n  }\n\n  jsonInsert(params) {\n    return `json_transform(${columnize_(\n      params.column,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    )}, insert ${this.client.parameter(\n      params.path,\n      this.builder,\n      this.bindingsHolder\n    )} = ${this.client.parameter(\n      params.value,\n      this.builder,\n      this.bindingsHolder\n    )})`;\n  }\n\n  jsonRemove(params) {\n    const jsonCol = `json_transform(${columnize_(\n      params.column,\n      this.builder,\n      this.client,\n      this.bindingsHolder\n    )}, remove ${this.client.parameter(\n      params.path,\n      this.builder,\n      this.bindingsHolder\n    )})`;\n    return params.alias\n      ? this.client.alias(jsonCol, this.formatter.wrap(params.alias))\n      : jsonCol;\n  }\n\n  whereJsonPath(statement) {\n    return this._whereJsonPath('json_value', statement);\n  }\n\n  whereJsonSupersetOf(statement) {\n    throw new Error(\n      'Json superset where clause not actually supported by Oracle'\n    );\n  }\n\n  whereJsonSubsetOf(statement) {\n    throw new Error(\n      'Json subset where clause not actually supported by Oracle'\n    );\n  }\n\n  onJsonPathEquals(clause) {\n    return this._onJsonPathEquals('json_value', clause);\n  }\n}\n\nmodule.exports = Oracledb_Compiler;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15791, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/oracledb/schema/oracledb-tablecompiler.js"],"sourcesContent":["const TableCompiler_Oracle = require('../../oracle/schema/oracle-tablecompiler');\n\nclass TableCompiler_Oracledb extends TableCompiler_Oracle {\n  constructor(client, tableBuilder) {\n    super(client, tableBuilder);\n  }\n\n  _setNullableState(column, isNullable) {\n    const nullability = isNullable ? 'NULL' : 'NOT NULL';\n    const sql = `alter table ${this.tableName()} modify (${this.formatter.wrap(\n      column\n    )} ${nullability})`;\n    return this.pushQuery({\n      sql: sql,\n    });\n  }\n}\n\nmodule.exports = TableCompiler_Oracledb;\n"],"names":[],"mappings":"AAAA,MAAM;AAEN,MAAM,+BAA+B;IACnC,YAAY,MAAM,EAAE,YAAY,CAAE;QAChC,KAAK,CAAC,QAAQ;IAChB;IAEA,kBAAkB,MAAM,EAAE,UAAU,EAAE;QACpC,MAAM,cAAc,aAAa,SAAS;QAC1C,MAAM,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,GAAG,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CACxE,QACA,CAAC,EAAE,YAAY,CAAC,CAAC;QACnB,OAAO,IAAI,CAAC,SAAS,CAAC;YACpB,KAAK;QACP;IACF;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15810, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/oracledb/schema/oracledb-columncompiler.js"],"sourcesContent":["const ColumnCompiler_Oracle = require('../../oracle/schema/oracle-columncompiler');\nconst { isObject } = require('../../../util/is');\n\nclass ColumnCompiler_Oracledb extends ColumnCompiler_Oracle {\n  constructor() {\n    super(...arguments);\n    this.modifiers = ['defaultTo', 'nullable', 'comment', 'checkJson'];\n    this._addCheckModifiers();\n  }\n\n  datetime(withoutTz) {\n    let useTz;\n    if (isObject(withoutTz)) {\n      ({ useTz } = withoutTz);\n    } else {\n      useTz = !withoutTz;\n    }\n    return useTz ? 'timestamp with local time zone' : 'timestamp';\n  }\n\n  timestamp(withoutTz) {\n    let useTz;\n    if (isObject(withoutTz)) {\n      ({ useTz } = withoutTz);\n    } else {\n      useTz = !withoutTz;\n    }\n    return useTz ? 'timestamp with local time zone' : 'timestamp';\n  }\n\n  checkRegex(regex, constraintName) {\n    return this._check(\n      `REGEXP_LIKE(${this.formatter.wrap(\n        this.getColumnName()\n      )},${this.client._escapeBinding(regex)})`,\n      constraintName\n    );\n  }\n\n  json() {\n    // implicitly add the check for json\n    this.columnBuilder._modifiers.checkJson = [\n      this.formatter.columnize(this.getColumnName()),\n    ];\n    return 'varchar2(4000)';\n  }\n\n  jsonb() {\n    return this.json();\n  }\n\n  checkJson(column) {\n    return `check (${column} is json)`;\n  }\n}\n\nColumnCompiler_Oracledb.prototype.time = 'timestamp with local time zone';\nColumnCompiler_Oracledb.prototype.uuid = ({ useBinaryUuid = false } = {}) =>\n  useBinaryUuid ? 'raw(16)' : 'char(36)';\n\nmodule.exports = ColumnCompiler_Oracledb;\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,EAAE,QAAQ,EAAE;AAElB,MAAM,gCAAgC;IACpC,aAAc;QACZ,KAAK,IAAI;QACT,IAAI,CAAC,SAAS,GAAG;YAAC;YAAa;YAAY;YAAW;SAAY;QAClE,IAAI,CAAC,kBAAkB;IACzB;IAEA,SAAS,SAAS,EAAE;QAClB,IAAI;QACJ,IAAI,SAAS,YAAY;YACvB,CAAC,EAAE,KAAK,EAAE,GAAG,SAAS;QACxB,OAAO;YACL,QAAQ,CAAC;QACX;QACA,OAAO,QAAQ,mCAAmC;IACpD;IAEA,UAAU,SAAS,EAAE;QACnB,IAAI;QACJ,IAAI,SAAS,YAAY;YACvB,CAAC,EAAE,KAAK,EAAE,GAAG,SAAS;QACxB,OAAO;YACL,QAAQ,CAAC;QACX;QACA,OAAO,QAAQ,mCAAmC;IACpD;IAEA,WAAW,KAAK,EAAE,cAAc,EAAE;QAChC,OAAO,IAAI,CAAC,MAAM,CAChB,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAChC,IAAI,CAAC,aAAa,IAClB,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,EACzC;IAEJ;IAEA,OAAO;QACL,oCAAoC;QACpC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,SAAS,GAAG;YACxC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa;SAC5C;QACD,OAAO;IACT;IAEA,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI;IAClB;IAEA,UAAU,MAAM,EAAE;QAChB,OAAO,CAAC,OAAO,EAAE,OAAO,SAAS,CAAC;IACpC;AACF;AAEA,wBAAwB,SAAS,CAAC,IAAI,GAAG;AACzC,wBAAwB,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,gBAAgB,KAAK,EAAE,GAAG,CAAC,CAAC,GACtE,gBAAgB,YAAY;AAE9B,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15866, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/oracledb/schema/oracledb-viewcompiler.js"],"sourcesContent":["/* eslint max-len: 0 */\n\nconst ViewCompiler = require('../../../schema/viewcompiler.js');\n\nclass ViewCompiler_Oracledb extends ViewCompiler {\n  constructor(client, viewCompiler) {\n    super(client, viewCompiler);\n  }\n\n  createOrReplace() {\n    this.createQuery(this.columns, this.selectQuery, false, true);\n  }\n\n  createMaterializedView() {\n    this.createQuery(this.columns, this.selectQuery, true);\n  }\n}\n\nmodule.exports = ViewCompiler_Oracledb;\n"],"names":[],"mappings":"AAAA,qBAAqB,GAErB,MAAM;AAEN,MAAM,8BAA8B;IAClC,YAAY,MAAM,EAAE,YAAY,CAAE;QAChC,KAAK,CAAC,QAAQ;IAChB;IAEA,kBAAkB;QAChB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,OAAO;IAC1D;IAEA,yBAAyB;QACvB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE;IACnD;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15884, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/oracledb/schema/oracledb-viewbuilder.js"],"sourcesContent":["const ViewBuilder = require('../../../schema/viewbuilder.js');\n\nclass ViewBuilder_Oracledb extends ViewBuilder {\n  constructor() {\n    super(...arguments);\n  }\n\n  checkOption() {\n    this._single.checkOption = 'default_option';\n  }\n}\n\nmodule.exports = ViewBuilder_Oracledb;\n"],"names":[],"mappings":"AAAA,MAAM;AAEN,MAAM,6BAA6B;IACjC,aAAc;QACZ,KAAK,IAAI;IACX;IAEA,cAAc;QACZ,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG;IAC7B;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15899, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/oracledb/transaction.js"],"sourcesContent":["const Transaction = require('../../execution/transaction');\nconst { timeout, KnexTimeoutError } = require('../../util/timeout');\nconst debugTx = require('debug')('knex:tx');\n\n// There's also a \"read only\", but that's not really an \"isolationLevel\"\nconst supportedIsolationLevels = ['read committed', 'serializable'];\n// Remove this if you make it work and set it to true\nconst isIsolationLevelEnabled = false;\n\nmodule.exports = class Oracle_Transaction extends Transaction {\n  // disable autocommit to allow correct behavior (default is true)\n  begin(conn) {\n    if (this.isolationLevel) {\n      if (isIsolationLevelEnabled) {\n        if (!supportedIsolationLevels.includes(this.isolationLevel)) {\n          this.client.logger.warn(\n            'Oracle only supports read committed and serializable transactions, ignoring the isolation level param'\n          );\n        } else {\n          // I tried this, but it didn't work\n          // Doc here: https://docs.oracle.com/en/database/oracle/oracle-database/19/sqlrf/SET-TRANSACTION.html\n          return this.query(conn, `SET TRANSACTION ${this.isolationLevel}`);\n        }\n      } else {\n        this.client.logger.warn(\n          'Transaction isolation is not currently supported for Oracle'\n        );\n      }\n    }\n    return Promise.resolve();\n  }\n\n  async commit(conn, value) {\n    this._completed = true;\n    try {\n      await conn.commitAsync();\n      this._resolver(value);\n    } catch (err) {\n      this._rejecter(err);\n    }\n  }\n\n  release(conn, value) {\n    return this._resolver(value);\n  }\n\n  rollback(conn, err) {\n    this._completed = true;\n    debugTx('%s: rolling back', this.txid);\n    return timeout(conn.rollbackAsync(), 5000)\n      .catch((e) => {\n        if (!(e instanceof KnexTimeoutError)) {\n          return Promise.reject(e);\n        }\n        this._rejecter(e);\n      })\n      .then(() => {\n        if (err === undefined) {\n          if (this.doNotRejectOnRollback) {\n            this._resolver();\n            return;\n          }\n          err = new Error(`Transaction rejected with non-error: ${err}`);\n        }\n        this._rejecter(err);\n      });\n  }\n\n  savepoint(conn) {\n    return this.query(conn, `SAVEPOINT ${this.txid}`);\n  }\n\n  async acquireConnection(config, cb) {\n    const configConnection = config && config.connection;\n\n    const connection =\n      configConnection || (await this.client.acquireConnection());\n    try {\n      connection.__knexTxId = this.txid;\n      connection.isTransaction = true;\n      return await cb(connection);\n    } finally {\n      debugTx('%s: releasing connection', this.txid);\n      connection.isTransaction = false;\n      try {\n        await connection.commitAsync();\n      } catch (err) {\n        this._rejecter(err);\n      } finally {\n        if (!configConnection) {\n          await this.client.releaseConnection(connection);\n        } else {\n          debugTx('%s: not releasing external connection', this.txid);\n        }\n      }\n    }\n  }\n};\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,EAAE,OAAO,EAAE,gBAAgB,EAAE;AACnC,MAAM,UAAU,gHAAiB;AAEjC,wEAAwE;AACxE,MAAM,2BAA2B;IAAC;IAAkB;CAAe;AACnE,qDAAqD;AACrD,MAAM,0BAA0B;AAEhC,OAAO,OAAO,GAAG,MAAM,2BAA2B;IAChD,iEAAiE;IACjE,MAAM,IAAI,EAAE;QACV,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,uCAA6B;;YAU7B,OAAO;gBACL,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CACrB;YAEJ;QACF;QACA,OAAO,QAAQ,OAAO;IACxB;IAEA,MAAM,OAAO,IAAI,EAAE,KAAK,EAAE;QACxB,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI;YACF,MAAM,KAAK,WAAW;YACtB,IAAI,CAAC,SAAS,CAAC;QACjB,EAAE,OAAO,KAAK;YACZ,IAAI,CAAC,SAAS,CAAC;QACjB;IACF;IAEA,QAAQ,IAAI,EAAE,KAAK,EAAE;QACnB,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB;IAEA,SAAS,IAAI,EAAE,GAAG,EAAE;QAClB,IAAI,CAAC,UAAU,GAAG;QAClB,QAAQ,oBAAoB,IAAI,CAAC,IAAI;QACrC,OAAO,QAAQ,KAAK,aAAa,IAAI,MAClC,KAAK,CAAC,CAAC;YACN,IAAI,CAAC,CAAC,aAAa,gBAAgB,GAAG;gBACpC,OAAO,QAAQ,MAAM,CAAC;YACxB;YACA,IAAI,CAAC,SAAS,CAAC;QACjB,GACC,IAAI,CAAC;YACJ,IAAI,QAAQ,WAAW;gBACrB,IAAI,IAAI,CAAC,qBAAqB,EAAE;oBAC9B,IAAI,CAAC,SAAS;oBACd;gBACF;gBACA,MAAM,IAAI,MAAM,CAAC,qCAAqC,EAAE,KAAK;YAC/D;YACA,IAAI,CAAC,SAAS,CAAC;QACjB;IACJ;IAEA,UAAU,IAAI,EAAE;QACd,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,EAAE;IAClD;IAEA,MAAM,kBAAkB,MAAM,EAAE,EAAE,EAAE;QAClC,MAAM,mBAAmB,UAAU,OAAO,UAAU;QAEpD,MAAM,aACJ,oBAAqB,MAAM,IAAI,CAAC,MAAM,CAAC,iBAAiB;QAC1D,IAAI;YACF,WAAW,UAAU,GAAG,IAAI,CAAC,IAAI;YACjC,WAAW,aAAa,GAAG;YAC3B,OAAO,MAAM,GAAG;QAClB,SAAU;YACR,QAAQ,4BAA4B,IAAI,CAAC,IAAI;YAC7C,WAAW,aAAa,GAAG;YAC3B,IAAI;gBACF,MAAM,WAAW,WAAW;YAC9B,EAAE,OAAO,KAAK;gBACZ,IAAI,CAAC,SAAS,CAAC;YACjB,SAAU;gBACR,IAAI,CAAC,kBAAkB;oBACrB,MAAM,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;gBACtC,OAAO;oBACL,QAAQ,yCAAyC,IAAI,CAAC,IAAI;gBAC5D;YACF;QACF;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15984, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/oracledb/index.js"],"sourcesContent":["// Oracledb Client\n// -------\nconst each = require('lodash/each');\nconst flatten = require('lodash/flatten');\nconst isEmpty = require('lodash/isEmpty');\nconst map = require('lodash/map');\n\nconst Formatter = require('../../formatter');\nconst QueryCompiler = require('./query/oracledb-querycompiler');\nconst TableCompiler = require('./schema/oracledb-tablecompiler');\nconst ColumnCompiler = require('./schema/oracledb-columncompiler');\nconst {\n  BlobHelper,\n  ReturningHelper,\n  monkeyPatchConnection,\n} = require('./utils');\nconst ViewCompiler = require('./schema/oracledb-viewcompiler');\nconst ViewBuilder = require('./schema/oracledb-viewbuilder');\nconst Transaction = require('./transaction');\nconst Client_Oracle = require('../oracle');\nconst { isString } = require('../../util/is');\nconst { outputQuery, unwrapRaw } = require('../../formatter/wrappingFormatter');\nconst { compileCallback } = require('../../formatter/formatterUtils');\n\nclass Client_Oracledb extends Client_Oracle {\n  constructor(config) {\n    super(config);\n\n    if (this.version) {\n      // Normalize version format; null bad format\n      // to trigger fallback to auto-detect.\n      this.version = parseVersion(this.version);\n    }\n\n    if (this.driver) {\n      process.env.UV_THREADPOOL_SIZE = process.env.UV_THREADPOOL_SIZE || 1;\n      process.env.UV_THREADPOOL_SIZE =\n        parseInt(process.env.UV_THREADPOOL_SIZE) + this.driver.poolMax;\n    }\n  }\n\n  _driver() {\n    const client = this;\n    const oracledb = require('oracledb');\n    client.fetchAsString = [];\n    if (this.config.fetchAsString && Array.isArray(this.config.fetchAsString)) {\n      this.config.fetchAsString.forEach(function (type) {\n        if (!isString(type)) return;\n        type = type.toUpperCase();\n        if (oracledb[type]) {\n          if (\n            type !== 'NUMBER' &&\n            type !== 'DATE' &&\n            type !== 'CLOB' &&\n            type !== 'BUFFER'\n          ) {\n            this.logger.warn(\n              'Only \"date\", \"number\", \"clob\" and \"buffer\" are supported for fetchAsString'\n            );\n          }\n          client.fetchAsString.push(oracledb[type]);\n        }\n      });\n    }\n    return oracledb;\n  }\n\n  queryCompiler(builder, formatter) {\n    return new QueryCompiler(this, builder, formatter);\n  }\n\n  tableCompiler() {\n    return new TableCompiler(this, ...arguments);\n  }\n\n  columnCompiler() {\n    return new ColumnCompiler(this, ...arguments);\n  }\n\n  viewBuilder() {\n    return new ViewBuilder(this, ...arguments);\n  }\n\n  viewCompiler() {\n    return new ViewCompiler(this, ...arguments);\n  }\n\n  formatter(builder) {\n    return new Formatter(this, builder);\n  }\n\n  transaction() {\n    return new Transaction(this, ...arguments);\n  }\n\n  prepBindings(bindings) {\n    return map(bindings, (value) => {\n      if (value instanceof BlobHelper && this.driver) {\n        return { type: this.driver.BLOB, dir: this.driver.BIND_OUT };\n        // Returning helper always use ROWID as string\n      } else if (value instanceof ReturningHelper && this.driver) {\n        return { type: this.driver.STRING, dir: this.driver.BIND_OUT };\n      } else if (typeof value === 'boolean') {\n        return value ? 1 : 0;\n      }\n      return value;\n    });\n  }\n\n  // Checks whether a value is a function... if it is, we compile it\n  // otherwise we check whether it's a raw\n  parameter(value, builder, formatter) {\n    if (typeof value === 'function') {\n      return outputQuery(\n        compileCallback(value, undefined, this, formatter),\n        true,\n        builder,\n        this\n      );\n    } else if (value instanceof BlobHelper) {\n      formatter.bindings.push(value.value);\n      return '?';\n    }\n    return unwrapRaw(value, true, builder, this, formatter) || '?';\n  }\n\n  // Get a raw connection, called by the `pool` whenever a new\n  // connection needs to be added to the pool.\n  acquireRawConnection() {\n    return new Promise((resolver, rejecter) => {\n      // If external authentication don't have to worry about username/password and\n      // if not need to set the username and password\n      const oracleDbConfig = this.connectionSettings.externalAuth\n        ? { externalAuth: this.connectionSettings.externalAuth }\n        : {\n            user: this.connectionSettings.user,\n            password: this.connectionSettings.password,\n          };\n\n      // In the case of external authentication connection string will be given\n      oracleDbConfig.connectString = resolveConnectString(\n        this.connectionSettings\n      );\n\n      if (this.connectionSettings.prefetchRowCount) {\n        oracleDbConfig.prefetchRows = this.connectionSettings.prefetchRowCount;\n      }\n\n      if (this.connectionSettings.stmtCacheSize !== undefined) {\n        oracleDbConfig.stmtCacheSize = this.connectionSettings.stmtCacheSize;\n      }\n\n      this.driver.fetchAsString = this.fetchAsString;\n\n      this.driver.getConnection(oracleDbConfig, (err, connection) => {\n        if (err) {\n          return rejecter(err);\n        }\n        monkeyPatchConnection(connection, this);\n\n        resolver(connection);\n      });\n    });\n  }\n\n  // Used to explicitly close a connection, called internally by the pool\n  // when a connection times out or the pool is shutdown.\n  destroyRawConnection(connection) {\n    return connection.release();\n  }\n\n  // Handle oracle version resolution on acquiring connection from pool instead of connection creation.\n  // Must do this here since only the client used to create a connection would be updated with version\n  // information on creation. Poses a problem when knex instance is cloned since instances share the\n  // connection pool while having their own client instances.\n  async acquireConnection() {\n    const connection = await super.acquireConnection();\n    this.checkVersion(connection);\n    return connection;\n  }\n\n  // In Oracle, we need to check the version to dynamically determine\n  // certain limits. If user did not specify a version, get it from the connection.\n  checkVersion(connection) {\n    // Already determined version before?\n    if (this.version) {\n      return this.version;\n    }\n\n    const detectedVersion = parseVersion(connection.oracleServerVersionString);\n    if (!detectedVersion) {\n      // When original version is set to null, user-provided version was invalid and we fell-back to auto-detect.\n      // Otherwise, we couldn't auto-detect at all. Set error message accordingly.\n      throw new Error(\n        this.version === null\n          ? 'Invalid Oracledb version number format passed to knex. Unable to successfully auto-detect as fallback. Please specify a valid oracledb version.'\n          : 'Unable to detect Oracledb version number automatically. Please specify the version in knex configuration.'\n      );\n    }\n\n    this.version = detectedVersion;\n    return detectedVersion;\n  }\n\n  // Runs the query on the specified connection, providing the bindings\n  // and any other necessary prep work.\n  _query(connection, obj) {\n    if (!obj.sql) throw new Error('The query is empty');\n\n    const options = Object.assign({}, obj.options, { autoCommit: false });\n    if (obj.method === 'select') {\n      options.resultSet = true;\n    }\n    return connection\n      .executeAsync(obj.sql, obj.bindings, options)\n      .then(async function (response) {\n        // Flatten outBinds\n        let outBinds = flatten(response.outBinds);\n        obj.response = response.rows || [];\n        obj.rowsAffected = response.rows\n          ? response.rows.rowsAffected\n          : response.rowsAffected;\n\n        //added for outBind parameter\n        if (obj.method === 'raw' && outBinds.length > 0) {\n          return {\n            response: outBinds,\n          };\n        }\n\n        if (obj.method === 'update') {\n          const modifiedRowsCount = obj.rowsAffected.length || obj.rowsAffected;\n          const updatedObjOutBinding = [];\n          const updatedOutBinds = [];\n          const updateOutBinds = (i) =>\n            function (value, index) {\n              const OutBindsOffset = index * modifiedRowsCount;\n              updatedOutBinds.push(outBinds[i + OutBindsOffset]);\n            };\n\n          for (let i = 0; i < modifiedRowsCount; i++) {\n            updatedObjOutBinding.push(obj.outBinding[0]);\n            each(obj.outBinding[0], updateOutBinds(i));\n          }\n          outBinds = updatedOutBinds;\n          obj.outBinding = updatedObjOutBinding;\n        }\n\n        if (!obj.returning && outBinds.length === 0) {\n          if (!connection.isTransaction) {\n            await connection.commitAsync();\n          }\n          return obj;\n        }\n        const rowIds = [];\n        let offset = 0;\n\n        for (let line = 0; line < obj.outBinding.length; line++) {\n          const ret = obj.outBinding[line];\n\n          offset =\n            offset +\n            (obj.outBinding[line - 1] ? obj.outBinding[line - 1].length : 0);\n\n          for (let index = 0; index < ret.length; index++) {\n            const out = ret[index];\n\n            await new Promise(function (bindResolver, bindRejecter) {\n              if (out instanceof BlobHelper) {\n                const blob = outBinds[index + offset];\n                if (out.returning) {\n                  obj.response[line] = obj.response[line] || {};\n                  obj.response[line][out.columnName] = out.value;\n                }\n                blob.on('error', function (err) {\n                  bindRejecter(err);\n                });\n                blob.on('finish', function () {\n                  bindResolver();\n                });\n                blob.write(out.value);\n                blob.end();\n              } else if (obj.outBinding[line][index] === 'ROWID') {\n                rowIds.push(outBinds[index + offset]);\n                bindResolver();\n              } else {\n                obj.response[line] = obj.response[line] || {};\n                obj.response[line][out] = outBinds[index + offset];\n                bindResolver();\n              }\n            });\n          }\n        }\n        if (obj.returningSql) {\n          const response = await connection.executeAsync(\n            obj.returningSql(),\n            rowIds,\n            { resultSet: true }\n          );\n          obj.response = response.rows;\n        }\n        if (connection.isTransaction) {\n          return obj;\n        }\n        await connection.commitAsync();\n        return obj;\n      });\n  }\n\n  // Process the response as returned from the query.\n  processResponse(obj, runner) {\n    const { response } = obj;\n    if (obj.output) {\n      return obj.output.call(runner, response);\n    }\n    switch (obj.method) {\n      case 'select':\n        return response;\n      case 'first':\n        return response[0];\n      case 'pluck':\n        return map(response, obj.pluck);\n      case 'insert':\n      case 'del':\n      case 'update':\n      case 'counter':\n        if ((obj.returning && !isEmpty(obj.returning)) || obj.returningSql) {\n          return response;\n        } else if (obj.rowsAffected !== undefined) {\n          return obj.rowsAffected;\n        } else {\n          return 1;\n        }\n      default:\n        return response;\n    }\n  }\n\n  processPassedConnection(connection) {\n    this.checkVersion(connection);\n    monkeyPatchConnection(connection, this);\n  }\n}\n\nClient_Oracledb.prototype.driverName = 'oracledb';\n\nfunction parseVersion(versionString) {\n  try {\n    // We only care about first two version components at most\n    const versionParts = versionString.split('.').slice(0, 2);\n    // Strip off any character suffixes in version number (ex. 12c => 12, 12.2c => 12.2)\n    versionParts.forEach((versionPart, idx) => {\n      versionParts[idx] = versionPart.replace(/\\D$/, '');\n    });\n    const version = versionParts.join('.');\n    return version.match(/^\\d+\\.?\\d*$/) ? version : null;\n  } catch (err) {\n    // Non-string versionString passed in.\n    return null;\n  }\n}\n\nfunction resolveConnectString(connectionSettings) {\n  if (connectionSettings.connectString) {\n    return connectionSettings.connectString;\n  }\n\n  if (!connectionSettings.port) {\n    return connectionSettings.host + '/' + connectionSettings.database;\n  }\n\n  return (\n    connectionSettings.host +\n    ':' +\n    connectionSettings.port +\n    '/' +\n    connectionSettings.database\n  );\n}\n\nmodule.exports = Client_Oracledb;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16300, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/pgnative/index.js"],"sourcesContent":["// PostgreSQL Native Driver (pg-native)\n// -------\nconst Client_PG = require('../postgres');\n\nclass Client_PgNative extends Client_PG {\n  constructor(...args) {\n    super(...args);\n    this.driverName = 'pgnative';\n    this.canCancelQuery = true;\n  }\n\n  _driver() {\n    return require('pg').native;\n  }\n\n  _stream(connection, obj, stream, options) {\n    if (!obj.sql) throw new Error('The query is empty');\n\n    const client = this;\n    return new Promise((resolver, rejecter) => {\n      stream.on('error', rejecter);\n      stream.on('end', resolver);\n\n      return client\n        ._query(connection, obj)\n        .then((obj) => obj.response)\n        .then(({ rows }) => rows.forEach((row) => stream.write(row)))\n        .catch(function (err) {\n          stream.emit('error', err);\n        })\n        .then(function () {\n          stream.end();\n        });\n    });\n  }\n\n  async cancelQuery(connectionToKill) {\n    try {\n      return await this._wrappedCancelQueryCall(null, connectionToKill);\n    } catch (err) {\n      this.logger.warn(`Connection Error: ${err}`);\n      throw err;\n    }\n  }\n\n  _wrappedCancelQueryCall(emptyConnection, connectionToKill) {\n    return new Promise(function (resolve, reject) {\n      connectionToKill.native.cancel(function (err) {\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        resolve(true);\n      });\n    });\n  }\n}\n\nmodule.exports = Client_PgNative;\n"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,UAAU;AACV,MAAM;AAEN,MAAM,wBAAwB;IAC5B,YAAY,GAAG,IAAI,CAAE;QACnB,KAAK,IAAI;QACT,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,cAAc,GAAG;IACxB;IAEA,UAAU;QACR,OAAO;;;;aAAc,MAAM;IAC7B;IAEA,QAAQ,UAAU,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE;QACxC,IAAI,CAAC,IAAI,GAAG,EAAE,MAAM,IAAI,MAAM;QAE9B,MAAM,SAAS,IAAI;QACnB,OAAO,IAAI,QAAQ,CAAC,UAAU;YAC5B,OAAO,EAAE,CAAC,SAAS;YACnB,OAAO,EAAE,CAAC,OAAO;YAEjB,OAAO,OACJ,MAAM,CAAC,YAAY,KACnB,IAAI,CAAC,CAAC,MAAQ,IAAI,QAAQ,EAC1B,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,GAAK,KAAK,OAAO,CAAC,CAAC,MAAQ,OAAO,KAAK,CAAC,OACtD,KAAK,CAAC,SAAU,GAAG;gBAClB,OAAO,IAAI,CAAC,SAAS;YACvB,GACC,IAAI,CAAC;gBACJ,OAAO,GAAG;YACZ;QACJ;IACF;IAEA,MAAM,YAAY,gBAAgB,EAAE;QAClC,IAAI;YACF,OAAO,MAAM,IAAI,CAAC,uBAAuB,CAAC,MAAM;QAClD,EAAE,OAAO,KAAK;YACZ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,kBAAkB,EAAE,KAAK;YAC3C,MAAM;QACR;IACF;IAEA,wBAAwB,eAAe,EAAE,gBAAgB,EAAE;QACzD,OAAO,IAAI,QAAQ,SAAU,OAAO,EAAE,MAAM;YAC1C,iBAAiB,MAAM,CAAC,MAAM,CAAC,SAAU,GAAG;gBAC1C,IAAI,KAAK;oBACP,OAAO;oBACP;gBACF;gBAEA,QAAQ;YACV;QACF;IACF;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16355, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/redshift/transaction.js"],"sourcesContent":["const Transaction = require('../../execution/transaction');\n\nmodule.exports = class Redshift_Transaction extends Transaction {\n  begin(conn) {\n    const trxMode = [\n      this.isolationLevel ? `ISOLATION LEVEL ${this.isolationLevel}` : '',\n      this.readOnly ? 'READ ONLY' : '',\n    ]\n      .join(' ')\n      .trim();\n\n    if (trxMode.length === 0) {\n      return this.query(conn, 'BEGIN;');\n    }\n    return this.query(conn, `BEGIN ${trxMode};`);\n  }\n\n  savepoint(conn) {\n    this.trxClient.logger('Redshift does not support savepoints.');\n    return Promise.resolve();\n  }\n\n  release(conn, value) {\n    this.trxClient.logger('Redshift does not support savepoints.');\n    return Promise.resolve();\n  }\n\n  rollbackTo(conn, error) {\n    this.trxClient.logger('Redshift does not support savepoints.');\n    return Promise.resolve();\n  }\n};\n"],"names":[],"mappings":"AAAA,MAAM;AAEN,OAAO,OAAO,GAAG,MAAM,6BAA6B;IAClD,MAAM,IAAI,EAAE;QACV,MAAM,UAAU;YACd,IAAI,CAAC,cAAc,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,cAAc,EAAE,GAAG;YACjE,IAAI,CAAC,QAAQ,GAAG,cAAc;SAC/B,CACE,IAAI,CAAC,KACL,IAAI;QAEP,IAAI,QAAQ,MAAM,KAAK,GAAG;YACxB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM;QAC1B;QACA,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IAC7C;IAEA,UAAU,IAAI,EAAE;QACd,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;QACtB,OAAO,QAAQ,OAAO;IACxB;IAEA,QAAQ,IAAI,EAAE,KAAK,EAAE;QACnB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;QACtB,OAAO,QAAQ,OAAO;IACxB;IAEA,WAAW,IAAI,EAAE,KAAK,EAAE;QACtB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;QACtB,OAAO,QAAQ,OAAO;IACxB;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16385, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/redshift/query/redshift-querycompiler.js"],"sourcesContent":["// Redshift Query Builder & Compiler\n// ------\nconst QueryCompiler = require('../../../query/querycompiler');\nconst QueryCompiler_PG = require('../../postgres/query/pg-querycompiler');\n\nconst identity = require('lodash/identity');\nconst {\n  columnize: columnize_,\n} = require('../../../formatter/wrappingFormatter');\n\nclass QueryCompiler_Redshift extends QueryCompiler_PG {\n  truncate() {\n    return `truncate ${this.tableName.toLowerCase()}`;\n  }\n\n  // Compiles an `insert` query, allowing for multiple\n  // inserts using a single query statement.\n  insert() {\n    const sql = QueryCompiler.prototype.insert.apply(this, arguments);\n    if (sql === '') return sql;\n    this._slightReturn();\n    return {\n      sql,\n    };\n  }\n\n  // Compiles an `update` query, warning on unsupported returning\n  update() {\n    const sql = QueryCompiler.prototype.update.apply(this, arguments);\n    this._slightReturn();\n    return {\n      sql,\n    };\n  }\n\n  // Compiles an `delete` query, warning on unsupported returning\n  del() {\n    const sql = QueryCompiler.prototype.del.apply(this, arguments);\n    this._slightReturn();\n    return {\n      sql,\n    };\n  }\n\n  // simple: if trying to return, warn\n  _slightReturn() {\n    if (this.single.isReturning) {\n      this.client.logger.warn(\n        'insert/update/delete returning is not supported by redshift dialect'\n      );\n    }\n  }\n\n  forUpdate() {\n    this.client.logger.warn('table lock is not supported by redshift dialect');\n    return '';\n  }\n\n  forShare() {\n    this.client.logger.warn(\n      'lock for share is not supported by redshift dialect'\n    );\n    return '';\n  }\n\n  forNoKeyUpdate() {\n    this.client.logger.warn('table lock is not supported by redshift dialect');\n    return '';\n  }\n\n  forKeyShare() {\n    this.client.logger.warn(\n      'lock for share is not supported by redshift dialect'\n    );\n    return '';\n  }\n\n  // Compiles a columnInfo query\n  columnInfo() {\n    const column = this.single.columnInfo;\n    let schema = this.single.schema;\n\n    // The user may have specified a custom wrapIdentifier function in the config. We\n    // need to run the identifiers through that function, but not format them as\n    // identifiers otherwise.\n    const table = this.client.customWrapIdentifier(this.single.table, identity);\n\n    if (schema) {\n      schema = this.client.customWrapIdentifier(schema, identity);\n    }\n\n    const sql =\n      'select * from information_schema.columns where table_name = ? and table_catalog = ?';\n    const bindings = [\n      table.toLowerCase(),\n      this.client.database().toLowerCase(),\n    ];\n\n    return this._buildColumnInfoQuery(schema, sql, bindings, column);\n  }\n\n  jsonExtract(params) {\n    let extractions;\n    if (Array.isArray(params.column)) {\n      extractions = params.column;\n    } else {\n      extractions = [params];\n    }\n    return extractions\n      .map((extraction) => {\n        const jsonCol = `json_extract_path_text(${columnize_(\n          extraction.column || extraction[0],\n          this.builder,\n          this.client,\n          this.bindingsHolder\n        )}, ${this.client.toPathForJson(\n          params.path || extraction[1],\n          this.builder,\n          this.bindingsHolder\n        )})`;\n        const alias = extraction.alias || extraction[2];\n        return alias\n          ? this.client.alias(jsonCol, this.formatter.wrap(alias))\n          : jsonCol;\n      })\n      .join(', ');\n  }\n\n  jsonSet(params) {\n    throw new Error('Json set is not supported by Redshift');\n  }\n\n  jsonInsert(params) {\n    throw new Error('Json insert is not supported by Redshift');\n  }\n\n  jsonRemove(params) {\n    throw new Error('Json remove is not supported by Redshift');\n  }\n\n  whereJsonPath(statement) {\n    return this._whereJsonPath(\n      'json_extract_path_text',\n      Object.assign({}, statement, {\n        path: this.client.toPathForJson(statement.path),\n      })\n    );\n  }\n\n  whereJsonSupersetOf(statement) {\n    throw new Error('Json superset is not supported by Redshift');\n  }\n\n  whereJsonSubsetOf(statement) {\n    throw new Error('Json subset is not supported by Redshift');\n  }\n\n  onJsonPathEquals(clause) {\n    return this._onJsonPathEquals('json_extract_path_text', clause);\n  }\n}\n\nmodule.exports = QueryCompiler_Redshift;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16506, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/redshift/schema/redshift-columnbuilder.js"],"sourcesContent":["const ColumnBuilder = require('../../../schema/columnbuilder');\n\nclass ColumnBuilder_Redshift extends ColumnBuilder {\n  constructor() {\n    super(...arguments);\n  }\n\n  // primary needs to set not null on non-preexisting columns, or fail\n  primary() {\n    this.notNullable();\n    return super.primary(...arguments);\n  }\n\n  index() {\n    this.client.logger.warn(\n      'Redshift does not support the creation of indexes.'\n    );\n    return this;\n  }\n}\n\nmodule.exports = ColumnBuilder_Redshift;\n"],"names":[],"mappings":"AAAA,MAAM;AAEN,MAAM,+BAA+B;IACnC,aAAc;QACZ,KAAK,IAAI;IACX;IAEA,oEAAoE;IACpE,UAAU;QACR,IAAI,CAAC,WAAW;QAChB,OAAO,KAAK,CAAC,WAAW;IAC1B;IAEA,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CACrB;QAEF,OAAO,IAAI;IACb;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16527, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/redshift/schema/redshift-columncompiler.js"],"sourcesContent":["// Redshift Column Compiler\n// -------\n\nconst ColumnCompiler_PG = require('../../postgres/schema/pg-columncompiler');\nconst ColumnCompiler = require('../../../schema/columncompiler');\n\nclass ColumnCompiler_Redshift extends ColumnCompiler_PG {\n  constructor() {\n    super(...arguments);\n  }\n\n  // Types:\n  // ------\n\n  bit(column) {\n    return column.length !== false ? `char(${column.length})` : 'char(1)';\n  }\n\n  datetime(without) {\n    return without ? 'timestamp' : 'timestamptz';\n  }\n\n  timestamp(without) {\n    return without ? 'timestamp' : 'timestamptz';\n  }\n\n  // Modifiers:\n  // ------\n  comment(comment) {\n    this.pushAdditional(function () {\n      this.pushQuery(\n        `comment on column ${this.tableCompiler.tableName()}.` +\n          this.formatter.wrap(this.args[0]) +\n          ' is ' +\n          (comment ? `'${comment}'` : 'NULL')\n      );\n    }, comment);\n  }\n}\n\nColumnCompiler_Redshift.prototype.increments = ({ primaryKey = true } = {}) =>\n  'integer identity(1,1)' + (primaryKey ? ' primary key' : '') + ' not null';\nColumnCompiler_Redshift.prototype.bigincrements = ({\n  primaryKey = true,\n} = {}) =>\n  'bigint identity(1,1)' + (primaryKey ? ' primary key' : '') + ' not null';\nColumnCompiler_Redshift.prototype.binary = 'varchar(max)';\nColumnCompiler_Redshift.prototype.blob = 'varchar(max)';\nColumnCompiler_Redshift.prototype.enu = 'varchar(255)';\nColumnCompiler_Redshift.prototype.enum = 'varchar(255)';\nColumnCompiler_Redshift.prototype.json = 'varchar(max)';\nColumnCompiler_Redshift.prototype.jsonb = 'varchar(max)';\nColumnCompiler_Redshift.prototype.longblob = 'varchar(max)';\nColumnCompiler_Redshift.prototype.mediumblob = 'varchar(16777218)';\nColumnCompiler_Redshift.prototype.set = 'text';\nColumnCompiler_Redshift.prototype.text = 'varchar(max)';\nColumnCompiler_Redshift.prototype.tinyblob = 'varchar(256)';\nColumnCompiler_Redshift.prototype.uuid = ColumnCompiler.prototype.uuid;\nColumnCompiler_Redshift.prototype.varbinary = 'varchar(max)';\nColumnCompiler_Redshift.prototype.bigint = 'bigint';\nColumnCompiler_Redshift.prototype.bool = 'boolean';\nColumnCompiler_Redshift.prototype.double = 'double precision';\nColumnCompiler_Redshift.prototype.floating = 'real';\nColumnCompiler_Redshift.prototype.smallint = 'smallint';\nColumnCompiler_Redshift.prototype.tinyint = 'smallint';\n\nmodule.exports = ColumnCompiler_Redshift;\n"],"names":[],"mappings":"AAAA,2BAA2B;AAC3B,UAAU;AAEV,MAAM;AACN,MAAM;AAEN,MAAM,gCAAgC;IACpC,aAAc;QACZ,KAAK,IAAI;IACX;IAEA,SAAS;IACT,SAAS;IAET,IAAI,MAAM,EAAE;QACV,OAAO,OAAO,MAAM,KAAK,QAAQ,CAAC,KAAK,EAAE,OAAO,MAAM,CAAC,CAAC,CAAC,GAAG;IAC9D;IAEA,SAAS,OAAO,EAAE;QAChB,OAAO,UAAU,cAAc;IACjC;IAEA,UAAU,OAAO,EAAE;QACjB,OAAO,UAAU,cAAc;IACjC;IAEA,aAAa;IACb,SAAS;IACT,QAAQ,OAAO,EAAE;QACf,IAAI,CAAC,cAAc,CAAC;YAClB,IAAI,CAAC,SAAS,CACZ,CAAC,kBAAkB,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,CAAC,CAAC,GACpD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAChC,SACA,CAAC,UAAU,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,MAAM;QAExC,GAAG;IACL;AACF;AAEA,wBAAwB,SAAS,CAAC,UAAU,GAAG,CAAC,EAAE,aAAa,IAAI,EAAE,GAAG,CAAC,CAAC,GACxE,0BAA0B,CAAC,aAAa,iBAAiB,EAAE,IAAI;AACjE,wBAAwB,SAAS,CAAC,aAAa,GAAG,CAAC,EACjD,aAAa,IAAI,EAClB,GAAG,CAAC,CAAC,GACJ,yBAAyB,CAAC,aAAa,iBAAiB,EAAE,IAAI;AAChE,wBAAwB,SAAS,CAAC,MAAM,GAAG;AAC3C,wBAAwB,SAAS,CAAC,IAAI,GAAG;AACzC,wBAAwB,SAAS,CAAC,GAAG,GAAG;AACxC,wBAAwB,SAAS,CAAC,IAAI,GAAG;AACzC,wBAAwB,SAAS,CAAC,IAAI,GAAG;AACzC,wBAAwB,SAAS,CAAC,KAAK,GAAG;AAC1C,wBAAwB,SAAS,CAAC,QAAQ,GAAG;AAC7C,wBAAwB,SAAS,CAAC,UAAU,GAAG;AAC/C,wBAAwB,SAAS,CAAC,GAAG,GAAG;AACxC,wBAAwB,SAAS,CAAC,IAAI,GAAG;AACzC,wBAAwB,SAAS,CAAC,QAAQ,GAAG;AAC7C,wBAAwB,SAAS,CAAC,IAAI,GAAG,eAAe,SAAS,CAAC,IAAI;AACtE,wBAAwB,SAAS,CAAC,SAAS,GAAG;AAC9C,wBAAwB,SAAS,CAAC,MAAM,GAAG;AAC3C,wBAAwB,SAAS,CAAC,IAAI,GAAG;AACzC,wBAAwB,SAAS,CAAC,MAAM,GAAG;AAC3C,wBAAwB,SAAS,CAAC,QAAQ,GAAG;AAC7C,wBAAwB,SAAS,CAAC,QAAQ,GAAG;AAC7C,wBAAwB,SAAS,CAAC,OAAO,GAAG;AAE5C,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16581, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/redshift/schema/redshift-tablecompiler.js"],"sourcesContent":["/* eslint max-len: 0 */\n\n// Redshift Table Builder & Compiler\n// -------\n\nconst has = require('lodash/has');\nconst TableCompiler_PG = require('../../postgres/schema/pg-tablecompiler');\n\nclass TableCompiler_Redshift extends TableCompiler_PG {\n  constructor() {\n    super(...arguments);\n  }\n\n  index(columns, indexName, options) {\n    this.client.logger.warn(\n      'Redshift does not support the creation of indexes.'\n    );\n  }\n\n  dropIndex(columns, indexName) {\n    this.client.logger.warn(\n      'Redshift does not support the deletion of indexes.'\n    );\n  }\n\n  // TODO: have to disable setting not null on columns that already exist...\n\n  // Adds the \"create\" query to the query sequence.\n  createQuery(columns, ifNot, like) {\n    const createStatement = ifNot\n      ? 'create table if not exists '\n      : 'create table ';\n    const columnsSql = ' (' + columns.sql.join(', ') + this._addChecks() + ')';\n    let sql =\n      createStatement +\n      this.tableName() +\n      (like && this.tableNameLike()\n        ? ' (like ' + this.tableNameLike() + ')'\n        : columnsSql);\n    if (this.single.inherits)\n      sql += ` like (${this.formatter.wrap(this.single.inherits)})`;\n    this.pushQuery({\n      sql,\n      bindings: columns.bindings,\n    });\n    const hasComment = has(this.single, 'comment');\n    if (hasComment) this.comment(this.single.comment);\n    if (like) {\n      this.addColumns(columns, this.addColumnsPrefix);\n    }\n  }\n\n  primary(columns, constraintName) {\n    const self = this;\n    constraintName = constraintName\n      ? self.formatter.wrap(constraintName)\n      : self.formatter.wrap(`${this.tableNameRaw}_pkey`);\n    if (columns.constructor !== Array) {\n      columns = [columns];\n    }\n    const thiscolumns = self.grouped.columns;\n\n    if (thiscolumns) {\n      for (let i = 0; i < columns.length; i++) {\n        let exists = thiscolumns.find(\n          (tcb) =>\n            tcb.grouping === 'columns' &&\n            tcb.builder &&\n            tcb.builder._method === 'add' &&\n            tcb.builder._args &&\n            tcb.builder._args.indexOf(columns[i]) > -1\n        );\n        if (exists) {\n          exists = exists.builder;\n        }\n        const nullable = !(\n          exists &&\n          exists._modifiers &&\n          exists._modifiers['nullable'] &&\n          exists._modifiers['nullable'][0] === false\n        );\n        if (nullable) {\n          if (exists) {\n            return this.client.logger.warn(\n              'Redshift does not allow primary keys to contain nullable columns.'\n            );\n          } else {\n            return this.client.logger.warn(\n              'Redshift does not allow primary keys to contain nonexistent columns.'\n            );\n          }\n        }\n      }\n    }\n    return self.pushQuery(\n      `alter table ${self.tableName()} add constraint ${constraintName} primary key (${self.formatter.columnize(\n        columns\n      )})`\n    );\n  }\n\n  // Compiles column add. Redshift can only add one column per ALTER TABLE, so core addColumns doesn't work.  #2545\n  addColumns(columns, prefix, colCompilers) {\n    if (prefix === this.alterColumnsPrefix) {\n      super.addColumns(columns, prefix, colCompilers);\n    } else {\n      prefix = prefix || this.addColumnsPrefix;\n      colCompilers = colCompilers || this.getColumns();\n      for (const col of colCompilers) {\n        const quotedTableName = this.tableName();\n        const colCompiled = col.compileColumn();\n\n        this.pushQuery({\n          sql: `alter table ${quotedTableName} ${prefix}${colCompiled}`,\n          bindings: [],\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = TableCompiler_Redshift;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16663, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/redshift/schema/redshift-compiler.js"],"sourcesContent":["/* eslint max-len: 0 */\n\n// Redshift Table Builder & Compiler\n// -------\n\nconst SchemaCompiler_PG = require('../../postgres/schema/pg-compiler');\n\nclass SchemaCompiler_Redshift extends SchemaCompiler_PG {\n  constructor() {\n    super(...arguments);\n  }\n}\n\nmodule.exports = SchemaCompiler_Redshift;\n"],"names":[],"mappings":"AAAA,qBAAqB,GAErB,oCAAoC;AACpC,UAAU;AAEV,MAAM;AAEN,MAAM,gCAAgC;IACpC,aAAc;QACZ,KAAK,IAAI;IACX;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16677, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/redshift/schema/redshift-viewcompiler.js"],"sourcesContent":["/* eslint max-len: 0 */\n\nconst ViewCompiler_PG = require('../../postgres/schema/pg-viewcompiler.js');\n\nclass ViewCompiler_Redshift extends ViewCompiler_PG {\n  constructor(client, viewCompiler) {\n    super(client, viewCompiler);\n  }\n}\n\nmodule.exports = ViewCompiler_Redshift;\n"],"names":[],"mappings":"AAAA,qBAAqB,GAErB,MAAM;AAEN,MAAM,8BAA8B;IAClC,YAAY,MAAM,EAAE,YAAY,CAAE;QAChC,KAAK,CAAC,QAAQ;IAChB;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16689, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/redshift/index.js"],"sourcesContent":["// Redshift\n// -------\nconst Client_PG = require('../postgres');\nconst map = require('lodash/map');\n\nconst Transaction = require('./transaction');\nconst QueryCompiler = require('./query/redshift-querycompiler');\nconst ColumnBuilder = require('./schema/redshift-columnbuilder');\nconst ColumnCompiler = require('./schema/redshift-columncompiler');\nconst TableCompiler = require('./schema/redshift-tablecompiler');\nconst SchemaCompiler = require('./schema/redshift-compiler');\nconst ViewCompiler = require('./schema/redshift-viewcompiler');\n\nclass Client_Redshift extends Client_PG {\n  transaction() {\n    return new Transaction(this, ...arguments);\n  }\n\n  queryCompiler(builder, formatter) {\n    return new QueryCompiler(this, builder, formatter);\n  }\n\n  columnBuilder() {\n    return new ColumnBuilder(this, ...arguments);\n  }\n\n  columnCompiler() {\n    return new ColumnCompiler(this, ...arguments);\n  }\n\n  tableCompiler() {\n    return new TableCompiler(this, ...arguments);\n  }\n\n  schemaCompiler() {\n    return new SchemaCompiler(this, ...arguments);\n  }\n\n  viewCompiler() {\n    return new ViewCompiler(this, ...arguments);\n  }\n\n  _driver() {\n    return require('pg');\n  }\n\n  // Ensures the response is returned in the same format as other clients.\n  processResponse(obj, runner) {\n    const resp = obj.response;\n    if (obj.output) return obj.output.call(runner, resp);\n    if (obj.method === 'raw') return resp;\n    if (resp.command === 'SELECT') {\n      if (obj.method === 'first') return resp.rows[0];\n      if (obj.method === 'pluck') return map(resp.rows, obj.pluck);\n      return resp.rows;\n    }\n    if (\n      resp.command === 'INSERT' ||\n      resp.command === 'UPDATE' ||\n      resp.command === 'DELETE'\n    ) {\n      return resp.rowCount;\n    }\n    return resp;\n  }\n\n  toPathForJson(jsonPath, builder, bindingsHolder) {\n    return jsonPath\n      .replace(/^(\\$\\.)/, '') // remove the first dollar\n      .split('.')\n      .map(\n        function (v) {\n          return this.parameter(v, builder, bindingsHolder);\n        }.bind(this)\n      )\n      .join(', ');\n  }\n}\n\nObject.assign(Client_Redshift.prototype, {\n  dialect: 'redshift',\n\n  driverName: 'pg-redshift',\n});\n\nmodule.exports = Client_Redshift;\n"],"names":[],"mappings":"AAAA,WAAW;AACX,UAAU;AACV,MAAM;AACN,MAAM;AAEN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AAEN,MAAM,wBAAwB;IAC5B,cAAc;QACZ,OAAO,IAAI,YAAY,IAAI,KAAK;IAClC;IAEA,cAAc,OAAO,EAAE,SAAS,EAAE;QAChC,OAAO,IAAI,cAAc,IAAI,EAAE,SAAS;IAC1C;IAEA,gBAAgB;QACd,OAAO,IAAI,cAAc,IAAI,KAAK;IACpC;IAEA,iBAAiB;QACf,OAAO,IAAI,eAAe,IAAI,KAAK;IACrC;IAEA,gBAAgB;QACd,OAAO,IAAI,cAAc,IAAI,KAAK;IACpC;IAEA,iBAAiB;QACf,OAAO,IAAI,eAAe,IAAI,KAAK;IACrC;IAEA,eAAe;QACb,OAAO,IAAI,aAAa,IAAI,KAAK;IACnC;IAEA,UAAU;QACR;;;;;IACF;IAEA,wEAAwE;IACxE,gBAAgB,GAAG,EAAE,MAAM,EAAE;QAC3B,MAAM,OAAO,IAAI,QAAQ;QACzB,IAAI,IAAI,MAAM,EAAE,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ;QAC/C,IAAI,IAAI,MAAM,KAAK,OAAO,OAAO;QACjC,IAAI,KAAK,OAAO,KAAK,UAAU;YAC7B,IAAI,IAAI,MAAM,KAAK,SAAS,OAAO,KAAK,IAAI,CAAC,EAAE;YAC/C,IAAI,IAAI,MAAM,KAAK,SAAS,OAAO,IAAI,KAAK,IAAI,EAAE,IAAI,KAAK;YAC3D,OAAO,KAAK,IAAI;QAClB;QACA,IACE,KAAK,OAAO,KAAK,YACjB,KAAK,OAAO,KAAK,YACjB,KAAK,OAAO,KAAK,UACjB;YACA,OAAO,KAAK,QAAQ;QACtB;QACA,OAAO;IACT;IAEA,cAAc,QAAQ,EAAE,OAAO,EAAE,cAAc,EAAE;QAC/C,OAAO,SACJ,OAAO,CAAC,WAAW,IAAI,0BAA0B;SACjD,KAAK,CAAC,KACN,GAAG,CACF,CAAA,SAAU,CAAC;YACT,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,SAAS;QACpC,CAAA,EAAE,IAAI,CAAC,IAAI,GAEZ,IAAI,CAAC;IACV;AACF;AAEA,OAAO,MAAM,CAAC,gBAAgB,SAAS,EAAE;IACvC,SAAS;IAET,YAAY;AACd;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16761, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/dialects/index.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.getDialectByNameOrAlias = void 0;\nconst { resolveClientNameWithAliases } = require('../util/helpers');\nconst dbNameToDialectLoader = Object.freeze({\n  'better-sqlite3': () => require('./better-sqlite3'),\n  cockroachdb: () => require('./cockroachdb'),\n  mssql: () => require('./mssql'),\n  mysql: () => require('./mysql'),\n  mysql2: () => require('./mysql2'),\n  oracle: () => require('./oracle'),\n  oracledb: () => require('./oracledb'),\n  pgnative: () => require('./pgnative'),\n  postgres: () => require('./postgres'),\n  redshift: () => require('./redshift'),\n  sqlite3: () => require('./sqlite3'),\n});\n/**\n * Gets the Dialect object with the given client name or throw an\n * error if not found.\n *\n * NOTE: This is a replacement for prior practice of doing dynamic\n * string construction for imports of Dialect objects.\n */\nfunction getDialectByNameOrAlias(clientName) {\n  const resolvedClientName = resolveClientNameWithAliases(clientName);\n  const dialectLoader = dbNameToDialectLoader[resolvedClientName];\n  if (!dialectLoader) {\n    throw new Error(`Invalid clientName given: ${clientName}`);\n  }\n  return dialectLoader();\n}\nexports.getDialectByNameOrAlias = getDialectByNameOrAlias;\n//# sourceMappingURL=index.js.map\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,uBAAuB,GAAG,KAAK;AACvC,MAAM,EAAE,4BAA4B,EAAE;AACtC,MAAM,wBAAwB,OAAO,MAAM,CAAC;IAC1C,kBAAkB;IAClB,aAAa;IACb,OAAO;IACP,OAAO;IACP,QAAQ;IACR,QAAQ;IACR,UAAU;IACV,UAAU;IACV,UAAU;IACV,UAAU;IACV,SAAS;AACX;AACA;;;;;;CAMC,GACD,SAAS,wBAAwB,UAAU;IACzC,MAAM,qBAAqB,6BAA6B;IACxD,MAAM,gBAAgB,qBAAqB,CAAC,mBAAmB;IAC/D,IAAI,CAAC,eAAe;QAClB,MAAM,IAAI,MAAM,CAAC,0BAA0B,EAAE,YAAY;IAC3D;IACA,OAAO;AACT;AACA,QAAQ,uBAAuB,GAAG,yBAClC,iCAAiC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16800, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/knex-builder/internal/config-resolver.js"],"sourcesContent":["const Client = require('../../client');\nconst { SUPPORTED_CLIENTS } = require('../../constants');\n\nconst parseConnection = require('./parse-connection');\nconst { getDialectByNameOrAlias } = require('../../dialects');\n\nfunction resolveConfig(config) {\n  let Dialect;\n  let resolvedConfig;\n\n  // If config is a string, try to parse it\n  const parsedConfig =\n    typeof config === 'string'\n      ? Object.assign(parseConnection(config), arguments[2])\n      : config;\n\n  // If user provided no relevant parameters, use generic client\n  if (\n    arguments.length === 0 ||\n    (!parsedConfig.client && !parsedConfig.dialect)\n  ) {\n    Dialect = Client;\n  }\n  // If user provided Client constructor as a parameter, use it\n  else if (typeof parsedConfig.client === 'function') {\n    Dialect = parsedConfig.client;\n  }\n  // If neither applies, let's assume user specified name of a client or dialect as a string\n  else {\n    const clientName = parsedConfig.client || parsedConfig.dialect;\n    if (!SUPPORTED_CLIENTS.includes(clientName)) {\n      throw new Error(\n        `knex: Unknown configuration option 'client' value ${clientName}. Note that it is case-sensitive, check documentation for supported values.`\n      );\n    }\n\n    Dialect = getDialectByNameOrAlias(clientName);\n  }\n\n  // If config connection parameter is passed as string, try to parse it\n  if (typeof parsedConfig.connection === 'string') {\n    resolvedConfig = Object.assign({}, parsedConfig, {\n      connection: parseConnection(parsedConfig.connection).connection,\n    });\n  } else {\n    resolvedConfig = Object.assign({}, parsedConfig);\n  }\n\n  return {\n    resolvedConfig,\n    Dialect,\n  };\n}\n\nmodule.exports = {\n  resolveConfig,\n};\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,EAAE,iBAAiB,EAAE;AAE3B,MAAM;AACN,MAAM,EAAE,uBAAuB,EAAE;AAEjC,SAAS,cAAc,MAAM;IAC3B,IAAI;IACJ,IAAI;IAEJ,yCAAyC;IACzC,MAAM,eACJ,OAAO,WAAW,WACd,OAAO,MAAM,CAAC,gBAAgB,SAAS,SAAS,CAAC,EAAE,IACnD;IAEN,8DAA8D;IAC9D,IACE,UAAU,MAAM,KAAK,KACpB,CAAC,aAAa,MAAM,IAAI,CAAC,aAAa,OAAO,EAC9C;QACA,UAAU;IACZ,OAEK,IAAI,OAAO,aAAa,MAAM,KAAK,YAAY;QAClD,UAAU,aAAa,MAAM;IAC/B,OAEK;QACH,MAAM,aAAa,aAAa,MAAM,IAAI,aAAa,OAAO;QAC9D,IAAI,CAAC,kBAAkB,QAAQ,CAAC,aAAa;YAC3C,MAAM,IAAI,MACR,CAAC,kDAAkD,EAAE,WAAW,2EAA2E,CAAC;QAEhJ;QAEA,UAAU,wBAAwB;IACpC;IAEA,sEAAsE;IACtE,IAAI,OAAO,aAAa,UAAU,KAAK,UAAU;QAC/C,iBAAiB,OAAO,MAAM,CAAC,CAAC,GAAG,cAAc;YAC/C,YAAY,gBAAgB,aAAa,UAAU,EAAE,UAAU;QACjE;IACF,OAAO;QACL,iBAAiB,OAAO,MAAM,CAAC,CAAC,GAAG;IACrC;IAEA,OAAO;QACL;QACA;IACF;AACF;AAEA,OAAO,OAAO,GAAG;IACf;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16842, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/knex-builder/Knex.js"],"sourcesContent":["const Client = require('../client');\nconst QueryBuilder = require('../query/querybuilder');\nconst QueryInterface = require('../query/method-constants');\n\nconst makeKnex = require('./make-knex');\nconst { KnexTimeoutError } = require('../util/timeout');\nconst { resolveConfig } = require('./internal/config-resolver');\nconst SchemaBuilder = require('../schema/builder');\nconst ViewBuilder = require('../schema/viewbuilder');\nconst ColumnBuilder = require('../schema/columnbuilder');\nconst TableBuilder = require('../schema/tablebuilder');\n\nfunction knex(config) {\n  const { resolvedConfig, Dialect } = resolveConfig(...arguments);\n\n  const newKnex = makeKnex(new Dialect(resolvedConfig));\n  if (resolvedConfig.userParams) {\n    newKnex.userParams = resolvedConfig.userParams;\n  }\n  return newKnex;\n}\n\n// Expose Client on the main Knex namespace.\nknex.Client = Client;\n\nknex.KnexTimeoutError = KnexTimeoutError;\n\nknex.QueryBuilder = {\n  extend: function (methodName, fn) {\n    QueryBuilder.extend(methodName, fn);\n    QueryInterface.push(methodName);\n  },\n};\n\nknex.SchemaBuilder = {\n  extend: function (methodName, fn) {\n    SchemaBuilder.extend(methodName, fn);\n  },\n};\n\nknex.ViewBuilder = {\n  extend: function (methodName, fn) {\n    ViewBuilder.extend(methodName, fn);\n  },\n};\n\nknex.ColumnBuilder = {\n  extend: function (methodName, fn) {\n    ColumnBuilder.extend(methodName, fn);\n  },\n};\n\nknex.TableBuilder = {\n  extend: function (methodName, fn) {\n    TableBuilder.extend(methodName, fn);\n  },\n};\n\nmodule.exports = knex;\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AACN,MAAM;AAEN,MAAM;AACN,MAAM,EAAE,gBAAgB,EAAE;AAC1B,MAAM,EAAE,aAAa,EAAE;AACvB,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AAEN,SAAS,KAAK,MAAM;IAClB,MAAM,EAAE,cAAc,EAAE,OAAO,EAAE,GAAG,iBAAiB;IAErD,MAAM,UAAU,SAAS,IAAI,QAAQ;IACrC,IAAI,eAAe,UAAU,EAAE;QAC7B,QAAQ,UAAU,GAAG,eAAe,UAAU;IAChD;IACA,OAAO;AACT;AAEA,4CAA4C;AAC5C,KAAK,MAAM,GAAG;AAEd,KAAK,gBAAgB,GAAG;AAExB,KAAK,YAAY,GAAG;IAClB,QAAQ,SAAU,UAAU,EAAE,EAAE;QAC9B,aAAa,MAAM,CAAC,YAAY;QAChC,eAAe,IAAI,CAAC;IACtB;AACF;AAEA,KAAK,aAAa,GAAG;IACnB,QAAQ,SAAU,UAAU,EAAE,EAAE;QAC9B,cAAc,MAAM,CAAC,YAAY;IACnC;AACF;AAEA,KAAK,WAAW,GAAG;IACjB,QAAQ,SAAU,UAAU,EAAE,EAAE;QAC9B,YAAY,MAAM,CAAC,YAAY;IACjC;AACF;AAEA,KAAK,aAAa,GAAG;IACnB,QAAQ,SAAU,UAAU,EAAE,EAAE;QAC9B,cAAc,MAAM,CAAC,YAAY;IACnC;AACF;AAEA,KAAK,YAAY,GAAG;IAClB,QAAQ,SAAU,UAAU,EAAE,EAAE;QAC9B,aAAa,MAAM,CAAC,YAAY;IAClC;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16895, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/lib/index.js"],"sourcesContent":["const Knex = require('./knex-builder/Knex');\n\nmodule.exports = Knex;\n"],"names":[],"mappings":"AAAA,MAAM;AAEN,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16902, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/knex/knex.js"],"sourcesContent":["// Knex.js\n// --------------\n//     (c) 2013-present Tim Griesser\n//     Knex may be freely distributed under the MIT license.\n//     For details and documentation:\n//     http://knexjs.org\n\nconst knex = require('./lib/index');\n\n/**\n * These export configurations enable JS and TS developers\n * to consume knex in whatever way best suits their needs.\n * Some examples of supported import syntax includes:\n * - `const knex = require('knex')`\n * - `const { knex } = require('knex')`\n * - `import * as knex from 'knex'`\n * - `import { knex } from 'knex'`\n * - `import knex from 'knex'`\n */\nknex.knex = knex;\nknex.default = knex;\n\nmodule.exports = knex;\n"],"names":[],"mappings":"AAAA,UAAU;AACV,iBAAiB;AACjB,oCAAoC;AACpC,4DAA4D;AAC5D,qCAAqC;AACrC,wBAAwB;AAExB,MAAM;AAEN;;;;;;;;;CASC,GACD,KAAK,IAAI,GAAG;AACZ,KAAK,OAAO,GAAG;AAEf,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}}]
}