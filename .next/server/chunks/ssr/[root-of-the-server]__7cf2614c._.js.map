{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///home/user/travonex_com/src/components/landing/header.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Header = registerClientReference(\n    function() { throw new Error(\"Attempted to call Header() from the server but Header is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/landing/header.tsx <module evaluation>\",\n    \"Header\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,mEACA","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///home/user/travonex_com/src/components/landing/header.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Header = registerClientReference(\n    function() { throw new Error(\"Attempted to call Header() from the server but Header is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/landing/header.tsx\",\n    \"Header\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,+CACA","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///home/user/travonex_com/src/components/landing/footer.tsx"],"sourcesContent":["// This component defines the footer for the entire website.\n// It is designed to be reusable and is included in the main layout and other page layouts.\n\n// Import React and necessary components.\nimport React from 'react';\nimport { Instagram, Linkedin } from 'lucide-react'; // Icons for social media links.\nimport Link from 'next/link'; // For client-side navigation.\nimport Image from 'next/image'; // For displaying images.\n\n// The main Footer component.\nexport function Footer() {\n  // Array of social media link objects. This makes it easy to add or remove links.\n  const socialLinks = [\n    { icon: <Instagram className=\"h-6 w-6\" />, href: '#', 'aria-label': 'Instagram' },\n    { icon: <Linkedin className=\"h-6 w-6\" />, href: '#', 'aria-label': 'LinkedIn' },\n  ];\n  \n  // Array of navigation link objects for the footer.\n  const navLinks = [\n    { href: '/', label: 'Home' },\n    { href: '/blog', label: 'Blog' },\n    { href: '#about', label: 'About' }, // Hash links for scrolling to sections on the homepage.\n    { href: '#community', label: 'Community' },\n    { href: '#signup', label: 'Sign Up' },\n  ];\n\n  // The JSX structure of the footer.\n  return (\n    <footer className=\"bg-foreground text-background\">\n      <div className=\"container py-16\">\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-12 text-center md:text-left\">\n          {/* Column 1: Logo and tagline. */}\n          <div className=\"space-y-4 flex flex-col items-center md:items-start\">\n            <Link href=\"/\">\n              <Image src=\"/travonex-logo-footer.png\" alt=\"Travonex\" width={150} height={40} style={{ height: 'auto' }} />\n            </Link>\n            <p className=\"text-background/70\">Plan Less. Travel More.</p>\n          </div>\n          \n          {/* Column 2: Quick Links navigation. */}\n          <div className=\"space-y-4\">\n            <h4 className=\"font-semibold font-headline tracking-wider uppercase text-background/80\">Quick Links</h4>\n            <ul className=\"space-y-2\">\n              {/* Map over the `navLinks` array to render the list of links. */}\n              {navLinks.map(link => (\n                <li key={link.label}>\n                  <Link href={link.href} className=\"text-background/70 hover:text-primary transition-colors\">\n                    {link.label}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          {/* Column 3: Social media icons. */}\n          <div className=\"space-y-4 flex flex-col items-center md:items-end\">\n            <h4 className=\"font-semibold font-headline tracking-wider uppercase text-background/80\">Follow Us</h4>\n            <div className=\"flex items-center gap-4\">\n              {/* Map over the `socialLinks` array to render the icons. */}\n              {socialLinks.map((link, i) => (\n                <Link key={i} href={link.href} aria-label={link['aria-label']} className=\"text-background/70 hover:text-primary transition-colors\">\n                  {link.icon}\n                </Link>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Bottom section of the footer with legal information. */}\n        <div className=\"mt-16 pt-8 border-t border-background/20 text-center text-sm text-background/60 space-y-4\">\n          {/* The `address` tag is semantically correct for contact/address information. */}\n          <address className=\"not-italic max-w-2xl mx-auto\">\n            <span className=\"font-bold\">Registered Office:</span> Wanderlynx Labs LLP, UNIT 101, OXFORD TOWERS, 139, HAL OLD AIRPORT RD, Hulsur Bazaar, Halasuru Traffic Police Station, Bangalore North, Bangalore – 560008, Karnataka, India\n          </address>\n          <p>\n            © 2025 Travonex — All rights reserved.\n          </p>\n        </div>\n      </div>\n    </footer>\n  );\n}\n"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,2FAA2F;AAE3F,yCAAyC;;;;;AAEzC,oWAAoD,gCAAgC;AAApF;AACA,8QAA8B,8BAA8B;AAC5D,4NAAgC,yBAAyB;;;;;AAGlD,SAAS;IACd,iFAAiF;IACjF,MAAM,cAAc;QAClB;YAAE,oBAAM,8OAAC,4MAAA,CAAA,YAAS;gBAAC,WAAU;;;;;;YAAc,MAAM;YAAK,cAAc;QAAY;QAChF;YAAE,oBAAM,8OAAC,0MAAA,CAAA,WAAQ;gBAAC,WAAU;;;;;;YAAc,MAAM;YAAK,cAAc;QAAW;KAC/E;IAED,mDAAmD;IACnD,MAAM,WAAW;QACf;YAAE,MAAM;YAAK,OAAO;QAAO;QAC3B;YAAE,MAAM;YAAS,OAAO;QAAO;QAC/B;YAAE,MAAM;YAAU,OAAO;QAAQ;QACjC;YAAE,MAAM;YAAc,OAAO;QAAY;QACzC;YAAE,MAAM;YAAW,OAAO;QAAU;KACrC;IAED,mCAAmC;IACnC,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,4JAAA,CAAA,UAAI;oCAAC,MAAK;8CACT,cAAA,8OAAC,6HAAA,CAAA,UAAK;wCAAC,KAAI;wCAA4B,KAAI;wCAAW,OAAO;wCAAK,QAAQ;wCAAI,OAAO;4CAAE,QAAQ;wCAAO;;;;;;;;;;;8CAExG,8OAAC;oCAAE,WAAU;8CAAqB;;;;;;;;;;;;sCAIpC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAA0E;;;;;;8CACxF,8OAAC;oCAAG,WAAU;8CAEX,SAAS,GAAG,CAAC,CAAA,qBACZ,8OAAC;sDACC,cAAA,8OAAC,4JAAA,CAAA,UAAI;gDAAC,MAAM,KAAK,IAAI;gDAAE,WAAU;0DAC9B,KAAK,KAAK;;;;;;2CAFN,KAAK,KAAK;;;;;;;;;;;;;;;;sCAUzB,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAA0E;;;;;;8CACxF,8OAAC;oCAAI,WAAU;8CAEZ,YAAY,GAAG,CAAC,CAAC,MAAM,kBACtB,8OAAC,4JAAA,CAAA,UAAI;4CAAS,MAAM,KAAK,IAAI;4CAAE,cAAY,IAAI,CAAC,aAAa;4CAAE,WAAU;sDACtE,KAAK,IAAI;2CADD;;;;;;;;;;;;;;;;;;;;;;8BASnB,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAQ,WAAU;;8CACjB,8OAAC;oCAAK,WAAU;8CAAY;;;;;;gCAAyB;;;;;;;sCAEvD,8OAAC;sCAAE;;;;;;;;;;;;;;;;;;;;;;;AAOb","debugId":null}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":["file:///home/user/travonex_com/src/lib/utils.ts"],"sourcesContent":["// This file provides utility functions that can be used throughout the application.\n\n// Import the `clsx` library and the `ClassValue` type.\n// `clsx` is a tiny utility for constructing `className` strings conditionally.\n// For example: `clsx('foo', true && 'bar', 'baz')` will return `'foo bar baz'`.\nimport { clsx, type ClassValue } from \"clsx\"\n\n// Import the `tailwind-merge` library.\n// `tailwind-merge` is a utility that intelligently merges Tailwind CSS classes.\n// It resolves conflicts between classes. For example, `twMerge('p-4', 'p-2')` will\n// correctly return `'p-2'`, as the last padding utility takes precedence.\nimport { twMerge } from \"tailwind-merge\"\n\n// This is the `cn` (short for \"class names\") utility function, a best practice\n// popularized by ShadCN UI and other component libraries.\n// It combines the power of `clsx` and `tailwind-merge`.\nexport function cn(...inputs: ClassValue[]) {\n  // 1. `clsx(inputs)` takes all the arguments (strings, objects, arrays) and\n  //    constructs a single class name string.\n  // 2. `twMerge(...)` then takes that string and merges the classes, resolving\n  //    any conflicts and ensuring a clean, final class string.\n  // This is especially useful when building components that accept a `className` prop\n  // and need to merge default classes with user-provided classes.\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":"AAAA,oFAAoF;AAEpF,uDAAuD;AACvD,+EAA+E;AAC/E,gFAAgF;;;;AAChF;AAEA,uCAAuC;AACvC,gFAAgF;AAChF,mFAAmF;AACnF,0EAA0E;AAC1E;;;AAKO,SAAS,GAAG,GAAG,MAAoB;IACxC,2EAA2E;IAC3E,4CAA4C;IAC5C,6EAA6E;IAC7E,6DAA6D;IAC7D,oFAAoF;IACpF,gEAAgE;IAChE,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 333, "column": 0}, "map": {"version":3,"sources":["file:///home/user/travonex_com/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 375, "column": 0}, "map": {"version":3,"sources":["file:///home/user/travonex_com/src/components/ui/avatar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Avatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Avatar() from the server but Avatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx <module evaluation>\",\n    \"Avatar\",\n);\nexport const AvatarFallback = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarFallback() from the server but AvatarFallback is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx <module evaluation>\",\n    \"AvatarFallback\",\n);\nexport const AvatarImage = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarImage() from the server but AvatarImage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx <module evaluation>\",\n    \"AvatarImage\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,8DACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,8DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA","debugId":null}},
    {"offset": {"line": 397, "column": 0}, "map": {"version":3,"sources":["file:///home/user/travonex_com/src/components/ui/avatar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Avatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Avatar() from the server but Avatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx\",\n    \"Avatar\",\n);\nexport const AvatarFallback = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarFallback() from the server but AvatarFallback is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx\",\n    \"AvatarFallback\",\n);\nexport const AvatarImage = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarImage() from the server but AvatarImage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx\",\n    \"AvatarImage\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0CACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,0CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA","debugId":null}},
    {"offset": {"line": 419, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 429, "column": 0}, "map": {"version":3,"sources":["file:///home/user/travonex_com/src/components/ui/separator.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Separator = registerClientReference(\n    function() { throw new Error(\"Attempted to call Separator() from the server but Separator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/separator.tsx <module evaluation>\",\n    \"Separator\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,iEACA","debugId":null}},
    {"offset": {"line": 443, "column": 0}, "map": {"version":3,"sources":["file:///home/user/travonex_com/src/components/ui/separator.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Separator = registerClientReference(\n    function() { throw new Error(\"Attempted to call Separator() from the server but Separator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/separator.tsx\",\n    \"Separator\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,6CACA","debugId":null}},
    {"offset": {"line": 457, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 467, "column": 0}, "map": {"version":3,"sources":["file:///home/user/travonex_com/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 527, "column": 0}, "map": {"version":3,"sources":["file:///home/user/travonex_com/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 608, "column": 0}, "map": {"version":3,"sources":["file:///home/user/travonex_com/src/components/blog/interactive-section.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const InteractiveSection = registerClientReference(\n    function() { throw new Error(\"Attempted to call InteractiveSection() from the server but InteractiveSection is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/blog/interactive-section.tsx <module evaluation>\",\n    \"InteractiveSection\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,6EACA","debugId":null}},
    {"offset": {"line": 622, "column": 0}, "map": {"version":3,"sources":["file:///home/user/travonex_com/src/components/blog/interactive-section.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const InteractiveSection = registerClientReference(\n    function() { throw new Error(\"Attempted to call InteractiveSection() from the server but InteractiveSection is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/blog/interactive-section.tsx\",\n    \"InteractiveSection\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,yDACA","debugId":null}},
    {"offset": {"line": 636, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 910, "column": 0}, "map": {"version":3,"sources":["file:///home/user/travonex_com/src/lib/firebase.ts"],"sourcesContent":["// This file is responsible for initializing the Firebase app and exporting the various Firebase services.\n// It uses environment variables to configure the connection, ensuring that sensitive keys are not hardcoded.\n\n// Import the necessary functions from the Firebase SDK.\nimport { initializeApp, getApps, FirebaseApp } from \"firebase/app\";\nimport { getAuth, Auth } from \"firebase/auth\";\nimport { getFirestore, Firestore } from \"firebase/firestore\";\nimport { getStorage, FirebaseStorage } from \"firebase/storage\";\n\n// The configuration object for Firebase.\n// These values are pulled from environment variables, which should be stored in a `.env.local` file in the root of your project.\n// Example .env.local:\n// NEXT_PUBLIC_FIREBASE_API_KEY=\"AIza...\"\n// NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=\"your-project-id.firebaseapp.com\"\n// NEXT_PUBLIC_FIREBASE_PROJECT_ID=\"your-project-id\"\n// NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=\"your-project-id.appspot.com\"\n// NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=\"...\"\n// NEXT_PUBLIC_FIREBASE_APP_ID=\"...\"\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\n// Initialize Firebase.\n// The `getApps().length` check prevents the app from being initialized more than once,\n// which is a common issue in Next.js with its hot-reloading feature.\nlet app: FirebaseApp;\nif (getApps().length === 0) {\n  app = initializeApp(firebaseConfig);\n} else {\n  app = getApps()[0];\n}\n\n// Get instances of the Firebase services we'll be using.\nconst auth: Auth = getAuth(app);\nconst db: Firestore = getFirestore(app);\nconst storage: FirebaseStorage = getStorage(app);\n\n// Export the initialized app and service instances so they can be used throughout the application.\nexport { app, auth, db, storage };\n"],"names":[],"mappings":"AAAA,0GAA0G;AAC1G,6GAA6G;AAE7G,wDAAwD;;;;;;;AACxD;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AAEA,yCAAyC;AACzC,iIAAiI;AACjI,sBAAsB;AACtB,yCAAyC;AACzC,qEAAqE;AACrE,oDAAoD;AACpD,oEAAoE;AACpE,iDAAiD;AACjD,oCAAoC;AACpC,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,uBAAuB;AACvB,uFAAuF;AACvF,qEAAqE;AACrE,IAAI;AACJ,IAAI,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,KAAK,GAAG;IAC1B,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;AACtB,OAAO;IACL,MAAM,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,GAAG,CAAC,EAAE;AACpB;AAEA,yDAAyD;AACzD,MAAM,OAAa,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE;AAC3B,MAAM,KAAgB,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;AACnC,MAAM,UAA2B,CAAA,GAAA,oLAAA,CAAA,aAAU,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 968, "column": 0}, "map": {"version":3,"sources":["file:///home/user/travonex_com/src/lib/firestore.ts"],"sourcesContent":["// This file will contain all the functions to interact with the Firestore database.\n// It will replace the mock data functions in `src/lib/mock-data.ts`.\n\nimport { db } from './firebase';\nimport { collection, getDocs, doc, getDoc, addDoc, updateDoc, deleteDoc, Timestamp, serverTimestamp, query, where, QueryDocumentSnapshot, SnapshotOptions } from 'firebase/firestore';\nimport { User, Post, Comment, FollowUpStory, EarlyAccessUser, NewsletterSubscriber } from './types';\n\n// --- TYPE CONVERTERS ---\n// Firestore converters are used to ensure that the data being sent to and received from Firestore\n// is correctly typed. This is especially important for handling Timestamps.\n\nconst postConverter = {\n  toFirestore: (post: Omit<Post, 'id'>) => {\n    return {\n      ...post,\n      created_at: post.created_at instanceof Date ? Timestamp.fromDate(post.created_at) : serverTimestamp(),\n      updated_at: post.updated_at instanceof Date ? Timestamp.fromDate(post.updated_at) : serverTimestamp(),\n    };\n  },\n  fromFirestore: (snapshot: QueryDocumentSnapshot, options: SnapshotOptions): Post => {\n    const data = snapshot.data(options);\n    return {\n      id: snapshot.id,\n      ...data,\n      created_at: data.created_at instanceof Timestamp ? data.created_at.toDate() : new Date(),\n      updated_at: data.updated_at instanceof Timestamp ? data.updated_at.toDate() : new Date(),\n    } as Post;\n  }\n};\n\nconst commentConverter = {\n    toFirestore: (comment: Omit<Comment, 'id'>) => {\n        return {\n            ...comment,\n            created_at: comment.created_at instanceof Date ? Timestamp.fromDate(comment.created_at) : serverTimestamp(),\n        };\n    },\n    fromFirestore: (snapshot: QueryDocumentSnapshot, options: SnapshotOptions): Comment => {\n        const data = snapshot.data(options);\n        return {\n            id: snapshot.id,\n            ...data,\n            created_at: data.created_at?.toDate() || new Date(),\n        } as Comment;\n    }\n};\n\nconst storyConverter = {\n    toFirestore: (story: Omit<FollowUpStory, 'id'>) => {\n        return {\n            ...story,\n            created_at: story.created_at instanceof Date ? Timestamp.fromDate(story.created_at) : serverTimestamp(),\n        };\n    },\n    fromFirestore: (snapshot: QueryDocumentSnapshot, options: SnapshotOptions): FollowUpStory => {\n        const data = snapshot.data(options);\n        return {\n            id: snapshot.id,\n            ...data,\n            created_at: data.created_at?.toDate() || new Date(),\n        } as FollowUpStory;\n    }\n};\n\nconst userConverter = {\n    toFirestore: (user: Omit<User, 'id'>) => {\n        return {\n            ...user,\n            created_at: user.created_at instanceof Date ? Timestamp.fromDate(user.created_at) : serverTimestamp(),\n        };\n    },\n    fromFirestore: (snapshot: QueryDocumentSnapshot, options: SnapshotOptions): User => {\n        const data = snapshot.data(options);\n        return {\n            id: snapshot.id,\n            ...data,\n            created_at: data.created_at?.toDate() || new Date(),\n        } as User;\n    }\n};\n\nconst earlyAccessUserConverter = {\n    toFirestore: (user: Omit<EarlyAccessUser, 'id'>) => {\n        return {\n            ...user,\n            created_at: serverTimestamp(),\n        };\n    },\n    fromFirestore: (snapshot: QueryDocumentSnapshot, options: SnapshotOptions): EarlyAccessUser => {\n        const data = snapshot.data(options);\n        return {\n            id: snapshot.id,\n            ...data,\n            created_at: data.created_at?.toDate() || new Date(),\n        } as EarlyAccessUser;\n    }\n};\n\nconst newsletterSubscriberConverter = {\n    toFirestore: (subscriber: Omit<NewsletterSubscriber, 'id'>) => {\n        return {\n            ...subscriber,\n            created_at: serverTimestamp(),\n        };\n    },\n    fromFirestore: (snapshot: QueryDocumentSnapshot, options: SnapshotOptions): NewsletterSubscriber => {\n        const data = snapshot.data(options);\n        return {\n            id: snapshot.id,\n            ...data,\n            created_at: data.created_at?.toDate() || new Date(),\n        } as NewsletterSubscriber;\n    }\n};\n\n// --- POSTS ---\n\n// Fetches all posts from Firestore.\nexport async function getPosts(): Promise<Post[]> {\n  const postsCol = collection(db, 'posts').withConverter(postConverter);\n  const postSnapshot = await getDocs(postsCol);\n  const postList = postSnapshot.docs.map(doc => doc.data() as Post);\n  return postList;\n}\n\n// Fetches all posts by a specific user.\nexport async function getPostsByUserId(userId: string): Promise<Post[]> {\n  const postsCol = collection(db, 'posts').withConverter(postConverter);\n  const q = query(postsCol, where('author_id', '==', userId));\n  const postSnapshot = await getDocs(q);\n  const postList = postSnapshot.docs.map(doc => doc.data() as Post);\n  return postList;\n}\n\n// Fetches all published posts from Firestore.\nexport async function getPublishedPosts(): Promise<Post[]> {\n    const postsCol = collection(db, 'posts').withConverter(postConverter);\n    const q = query(postsCol, where('status', '==', 'published'));\n    const postSnapshot = await getDocs(q);\n    const postList = postSnapshot.docs.map(doc => doc.data() as Post);\n    return postList;\n}\n\n// Fetches a single post by its slug.\nexport async function getPostsBySlug(slug: string): Promise<Post | null> {\n    const postsCol = collection(db, 'posts').withConverter(postConverter);\n    const q = query(postsCol, where('slug', '==', slug), where('status', '==', 'published'));\n    const postSnapshot = await getDocs(q);\n    if (postSnapshot.empty) {\n        return null;\n    }\n    return postSnapshot.docs[0].data() as Post;\n}\n\n// Fetches a single post by its ID.\nexport async function getPost(id: string): Promise<Post | null> {\n  const postDocRef = doc(db, 'posts', id).withConverter(postConverter);\n  const postSnap = await getDoc(postDocRef);\n  if (postSnap.exists()) {\n    return postSnap.data() as Post;\n  } else {\n    return null;\n  }\n}\n\n// Adds a new post to Firestore.\nexport async function addPost(post: Omit<Post, 'id'>): Promise<string> {\n  const postsCol = collection(db, 'posts').withConverter(postConverter);\n  const docRef = await addDoc(postsCol, post);\n  return docRef.id;\n}\n\n// Updates a post in Firestore.\nexport async function updatePost(id: string, updates: Partial<Post>): Promise<void> {\n  const postDocRef = doc(db, 'posts', id);\n  await updateDoc(postDocRef, {\n    ...updates,\n    updated_at: serverTimestamp()\n  });\n}\n\n// Deletes a post from Firestore.\nexport async function deletePost(id: string): Promise<void> {\n  const postDocRef = doc(db, 'posts', id);\n  await deleteDoc(postDocRef);\n}\n\n// --- COMMENTS ---\n\n// Fetches all approved comments for a given post.\nexport async function getComments(postId?: string): Promise<Comment[]> {\n    const commentsCol = collection(db, 'comments').withConverter(commentConverter);\n    \n    // Base query for approved comments\n    const approvedCommentsQuery = where('status', '==', 'approved');\n\n    // If a postId is provided, filter by both postId and status.\n    // Otherwise, just get all approved comments.\n    const q = postId \n        ? query(commentsCol, where('postId', '==', postId), approvedCommentsQuery) \n        : query(commentsCol, approvedCommentsQuery);\n\n    const commentSnapshot = await getDocs(q);\n    const commentList = commentSnapshot.docs.map(doc => doc.data() as Comment);\n    return commentList;\n}\n\n// Fetches all comments by a specific user.\nexport async function getCommentsByUserId(userId: string): Promise<Comment[]> {\n    const commentsCol = collection(db, 'comments').withConverter(commentConverter);\n    const q = query(commentsCol, where('userId', '==', userId));\n    const commentSnapshot = await getDocs(q);\n    const commentList = commentSnapshot.docs.map(doc => doc.data() as Comment);\n    return commentList;\n}\n\n// Adds a new comment.\nexport async function addComment(comment: Omit<Comment, 'id'>): Promise<string> {\n    const commentsCol = collection(db, 'comments').withConverter(commentConverter);\n    const docRef = await addDoc(commentsCol, comment);\n    return docRef.id;\n}\n\n// Updates a comment in Firestore.\nexport async function updateComment(id: string, updates: Partial<Comment>): Promise<void> {\n    const commentDocRef = doc(db, 'comments', id);\n    await updateDoc(commentDocRef, updates);\n}\n\n// Deletes a comment.\nexport async function deleteComment(id: string): Promise<void> {\n    const commentDocRef = doc(db, 'comments', id);\n    await deleteDoc(commentDocRef);\n}\n\n\n// --- STORIES ---\n\n// Fetches all approved stories for a given post.\nexport async function getStories(postId?: string): Promise<FollowUpStory[]> {\n    const storiesCol = collection(db, 'stories').withConverter(storyConverter);\n\n    // Base query for approved stories\n    const approvedStoriesQuery = where('status', '==', 'approved');\n    \n    // If a postId is provided, filter by both postId and status.\n    // Otherwise, just get all approved stories.\n    const q = postId \n        ? query(storiesCol, where('postId', '==', postId), approvedStoriesQuery) \n        : query(storiesCol, approvedStoriesQuery);\n\n    const storySnapshot = await getDocs(q);\n    const storyList = storySnapshot.docs.map(doc => doc.data() as FollowUpStory);\n    return storyList;\n}\n\n// Adds a new story.\nexport async function addStory(story: Omit<FollowUpStory, 'id'>): Promise<string> {\n    const storiesCol = collection(db, 'stories').withConverter(storyConverter);\n    const docRef = await addDoc(storiesCol, story);\n    return docRef.id;\n}\n\n// Updates a story in Firestore.\nexport async function updateStory(id: string, updates: Partial<FollowUpStory>): Promise<void> {\n    const storyDocRef = doc(db, 'stories', id);\n    await updateDoc(storyDocRef, updates);\n}\n\n// Deletes a story.\nexport async function deleteStory(id: string): Promise<void> {\n    const storyDocRef = doc(db, 'stories', id);\n    await deleteDoc(storyDocRef);\n}\n\n\n// --- USERS ---\n\n// Fetches all users.\nexport async function getUsers(): Promise<User[]> {\n    const usersCol = collection(db, 'users').withConverter(userConverter);\n    const userSnapshot = await getDocs(usersCol);\n    const userList = userSnapshot.docs.map(doc => doc.data() as User);\n    return userList;\n}\n\n// Fetches a single user by their ID.\nexport async function getUserById(id: string): Promise<User | null> {\n    // If the id is missing, we can't fetch a user.\n    if (!id) {\n        return null;\n    }\n    const userDocRef = doc(db, 'users', id).withConverter(userConverter);\n    const userSnap = await getDoc(userDocRef);\n    if (userSnap.exists()) {\n        return userSnap.data() as User;\n    } else {\n        return null;\n    }\n}\n\n// Fetches a single user and their published posts by username.\nexport async function getUserByUsername(username: string): Promise<{ user: User, posts: Post[] } | null> {\n    const usersCol = collection(db, 'users').withConverter(userConverter);\n    const q = query(usersCol, where('username', '==', username));\n    const userSnapshot = await getDocs(q);\n\n    if (userSnapshot.empty) {\n        return null;\n    }\n\n    const user = userSnapshot.docs[0].data() as User;\n    \n    const postsCol = collection(db, 'posts').withConverter(postConverter);\n    const postsQuery = query(postsCol, where('author_id', '==', user.id), where('status', '==', 'published'));\n    const postSnapshot = await getDocs(postsQuery);\n    const posts = postSnapshot.docs.map(doc => doc.data() as Post);\n\n    return { user, posts };\n}\n\n\n// --- EARLY ACCESS USERS ---\n\n// Adds a new early access user to Firestore.\nexport async function addEarlyAccessUser(user: Omit<EarlyAccessUser, 'id'>): Promise<string> {\n    const earlyAccessUsersCol = collection(db, 'early_access_users').withConverter(earlyAccessUserConverter);\n    const docRef = await addDoc(earlyAccessUsersCol, user);\n    return docRef.id;\n}\n\n// --- NEWSLETTER SUBSCRIBERS ---\n\n// Adds a new newsletter subscriber to Firestore.\nexport async function addNewsletterSubscriber(subscriber: Omit<NewsletterSubscriber, 'id'>): Promise<string> {\n    const newsletterSubscribersCol = collection(db, 'newsletter_subscribers').withConverter(newsletterSubscriberConverter);\n    const docRef = await addDoc(newsletterSubscribersCol, subscriber);\n    return docRef.id;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1261, "column": 0}, "map": {"version":3,"sources":["file:///home/user/travonex_com/src/app/blog/%5Bslug%5D/page.tsx"],"sourcesContent":["\n// This file represents the dynamic route for a single blog post page.\n// The [slug] part in the filename indicates that it will match any URL like /blog/my-first-post.\n\n// Import necessary functions and components from Next.js and other libraries.\nimport { notFound } from 'next/navigation'; // A Next.js function to trigger a 404 Not Found page.\nimport Image from 'next/image'; // The optimized Image component from Next.js.\nimport type { Metadata, ResolvingMetadata } from 'next'; // Types for defining page metadata for SEO.\nimport { Header } from '@/components/landing/header'; // The site's main header component.\nimport { Footer } from '@/components/landing/footer'; // The site's main footer component.\nimport { Badge } from '@/components/ui/badge'; // A UI component for displaying badges (e.g., for categories).\nimport { format } from 'date-fns'; // A utility library for formatting dates.\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'; // UI components for displaying user avatars.\nimport { Separator } from '@/components/ui/separator'; // A UI component for drawing a horizontal line.\nimport { Share2 } from 'lucide-react'; // An icon from the lucide-react library.\nimport { Button } from '@/components/ui/button'; // The standard button component.\nimport Link from 'next/link'; // The Next.js component for client-side navigation.\nimport { Card, CardContent, CardHeader } from '@/components/ui/card'; // UI components for card layouts.\nimport { InteractiveSection } from '@/components/blog/interactive-section'; // The component for comments and stories.\nimport { getPostsBySlug, getPublishedPosts, getUserById } from '@/lib/firestore'; // The Firestore data source for posts and users.\n\n// An asynchronous function to retrieve a single blog post from the mock data based on its slug.\n// In a real application, this would fetch data from a database.\nasync function getBlogPostBySlug(slug: string) {\n    const post = await getPostsBySlug(slug);\n    // If the post is not found or is not 'published', return null. This prevents drafts from being viewed publicly.\n    if (!post || post.status !== 'published') {\n        return null;\n    }\n\n    // Handle the old 'authorId' and the new 'author_id' for backward compatibility.\n    const authorId = post.author_id || (post as any).authorId;\n    const author = await getUserById(authorId);\n    // Return the post data combined with the author's name and avatar.\n    return { ...post, authorName: author?.name || 'Unknown', authorAvatar: author?.avatar };\n}\n\n// An asynchronous function to get a few related posts.\n// This is based on the category of the current post, excluding the current post itself.\nasync function getRelatedPosts(categoryId: string | null, currentPostId: string) {\n    const posts = await getPublishedPosts();\n    // Filter `mockPosts` to find posts that are 'published', in the same category, and are not the current post.\n    return posts.filter(p => p.status === 'published' && p.category === categoryId && p.id !== currentPostId).slice(0, 3); // Limit to 3 related posts.\n}\n\n// Define the type for the props that this page component will receive from Next.js.\n// `params` will contain the dynamic route parameters, in this case, the `slug`.\ntype Props = {\n  params: { slug: string }\n}\n\n// `generateMetadata` is a special Next.js function that allows you to dynamically generate page metadata.\n// This is crucial for SEO, as it sets the <title> and <meta> tags in the page's <head>.\nexport async function generateMetadata(\n  { params }: Props,\n): Promise<Metadata> {\n  // Fetch the post data using the slug from the URL parameters.\n  const post = await getBlogPostBySlug(params.slug);\n\n  // If the post is not found, return a default title.\n  if (!post) {\n    return {\n      title: 'Post Not Found',\n    }\n  }\n \n  // If the post is found, return detailed metadata for better SEO.\n  return {\n    title: `${post.title} | Travonex`,\n    description: `Discover ${post.title} with Travonex – your gateway to curated weekend getaways, treks, road trips, and unique travel experiences across India. Plan smarter, travel better.`,\n    alternates: {\n      canonical: `${process.env.NEXT_PUBLIC_BASE_URL}/blog/${post.slug}`,\n    },\n    // Open Graph metadata is used for social media sharing (e.g., Facebook, LinkedIn).\n    openGraph: {\n      title: post.title,\n      description: post.excerpt,\n      images: [post.featuredImgUrl], // The main image for the social media preview.\n    },\n  }\n}\n\n// This is the main React component for the blog post page. It's an async component,\n// allowing it to fetch data directly on the server before rendering.\nexport default async function BlogPostPage({ params }: { params: { slug: string } }) {\n  // Fetch the specific blog post based on the slug from the URL.\n  const post = await getBlogPostBySlug(params.slug);\n\n  // If `getBlogPostBySlug` returns null (post not found or not published), trigger a 404 page.\n  if (!post) {\n    notFound();\n  }\n\n  // Fetch related posts to display at the bottom of the page.\n  const relatedPosts = await getRelatedPosts(post.category, post.id);\n\n  // The JSX that defines the structure of the page.\n  return (\n    <div className=\"flex flex-col min-h-dvh bg-background\">\n      <Header />\n      <main className=\"flex-1\">\n        {/* The main article content. */}\n        <article className=\"container max-w-4xl mx-auto py-12 md:py-24\">\n          <header className=\"text-center mb-12\">\n            <Badge variant=\"secondary\" className=\"mb-4\">{post.category}</Badge>\n            <h1 className=\"text-4xl md:text-6xl font-extrabold font-headline tracking-tight text-foreground\">\n              {post.title}\n            </h1>\n            <div className=\"mt-6 flex justify-center items-center gap-4 text-muted-foreground\">\n              <div className=\"flex items-center gap-3\">\n                 <Avatar>\n                  <AvatarImage src={post.authorAvatar || undefined} alt={post.authorName} />\n                  <AvatarFallback>{post.authorName.charAt(0)}</AvatarFallback>\n                </Avatar>\n                <span className=\"font-medium\">{post.authorName}</span>\n              </div>\n              <span>•</span>\n              <time dateTime={post.created_at.toISOString()}>{format(new Date(post.created_at), 'MMMM d, yyyy')}</time>\n            </div>\n          </header>\n\n          {/* Display the featured image if it exists. */}\n          {post.featuredImgUrl && (\n            <div className=\"aspect-video relative mb-12 rounded-2xl overflow-hidden shadow-2xl\">\n                <Image\n                  src={post.featuredImgUrl}\n                  alt={post.title}\n                  fill // The `fill` prop makes the image cover its parent container.\n                  className=\"object-cover\"\n                  data-ai-hint={post.imageHint || 'travel landscape'} // A hint for AI image tools.\n                />\n            </div>\n          )}\n\n          {/* The main content of the post. `dangerouslySetInnerHTML` is used here because the mock\n              content contains HTML tags. In a real app with a CMS, this is a common pattern, but\n              it's crucial to ensure the HTML is sanitized to prevent XSS attacks. */}\n          <div className=\"prose prose-lg dark:prose-invert max-w-none mx-auto text-foreground/90 text-lg\" dangerouslySetInnerHTML={{ __html: post.content || '' }} />\n          \n          <Separator className=\"my-12\" />\n\n          {/* Footer of the article, showing tags and a share button. */}\n          <footer className=\"flex flex-col md:flex-row justify-between items-center gap-6\">\n            <div className=\"flex gap-2\">\n              {post.tags.map(tag => (\n                <Badge key={tag} variant=\"outline\">{tag}</Badge>\n              ))}\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Button variant=\"outline\" size=\"sm\">\n                <Share2 className=\"mr-2 h-4 w-4\" />\n                Share\n              </Button>\n            </div>\n          </footer>\n        </article>\n        \n        {/* The interactive section for comments and stories. */}\n        <section className=\"py-16 bg-secondary/50\">\n          <div className=\"container max-w-4xl mx-auto\">\n             <InteractiveSection articleId={post.id} />\n          </div>\n        </section>\n\n        {/* The section for related posts, only shown if there are any. */}\n        {relatedPosts.length > 0 && (\n          <section className=\"py-16 bg-background\">\n            <div className=\"container mx-auto\">\n              <h2 className=\"text-3xl font-bold font-headline text-center mb-12\">Related Posts</h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n                {relatedPosts.map((relatedPost) => (\n                  <Link href={`/blog/${relatedPost.slug}`} key={relatedPost.slug}>\n                    <Card className=\"overflow-hidden h-full group cursor-pointer shadow-lg hover:shadow-2xl transition-shadow duration-300 rounded-2xl border-none\">\n                      <CardHeader className=\"p-0\">\n                         {relatedPost.featuredImgUrl && (\n                            <div className=\"aspect-video overflow-hidden\">\n                                <Image\n                                src={relatedPost.featuredImgUrl}\n                                alt={relatedPost.title}\n                                width={600}\n                                height={400}\n                                className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\n                                data-ai-hint={relatedPost.imageHint || 'travel landscape'}\n                                />\n                            </div>\n                         )}\n                      </CardHeader>\n                      <CardContent className=\"p-6\">\n                        <h3 className=\"text-xl font-bold font-headline group-hover:text-primary transition-.colors\">{relatedPost.title}</h3>\n                        <p className=\"mt-2 text-muted-foreground line-clamp-2\">{relatedPost.excerpt}</p>\n                      </CardContent>\n                    </Card>\n                  </Link>\n                ))}\n              </div>\n            </div>\n          </section>\n        )}\n\n      </main>\n      <Footer />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}